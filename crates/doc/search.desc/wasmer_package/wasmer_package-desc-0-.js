searchState.loadedDescShard("wasmer_package", 0, "Load a Wasmer package from disk.\nConvert a webc image into a directory with a wasmer.toml …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConvert a webc image into a directory with a wasmer.toml …\nUnable to canonicalize a path.\nContainer Error\nDetect Error\nA directory\nA command was specified more than once.\nA module was specified more than once.\nA file\nFile based commands are not supported for in-memory …\nUnable to open a file.\nUnable to read a file.\nA lazily loaded volume in a Wasmer package.\nA dependency specification had a syntax error.\nA command uses a non-existent module.\nGeneric IO error.\nUnable to deserialize a json file.\nPrefer to lose data rather than error out.\nUnexpected path format\nUnable to load the <code>wasmer.toml</code> manifest.\nErrors that may occur when converting from a …\nAn in-memory directory.\nAn in-memory file.\nAn in-memory representation of a filesystem node.\nAn in-memory representation of a volume.\nAn error occurred while merging user-defined annotations …\nThe manifest references a file that doesn’t exist.\nUnable to find the <code>wasmer.toml</code> file.\nThe <code>wasmer.toml</code> file references a file outside of its base …\nA Wasmer package that will be lazily loaded from disk.\nA path in the fs mapping does not exist\nUnable to read a module’s <code>source</code>.\nError when serializing or deserializing\nUnable to serialize an annotation.\nAll package issues should be errors.\nThe strictness to use when working with a […\nUnable to extract the tarball.\nUnable to create a temporary directory.\nUnable to deserialize the <code>wasmer.toml</code> file.\nA command references a module from an undeclared …\nSpecified an unknown atom kind.\nAn unknown runner kind was specified.\nA manifest validation error.\nAny error happening when populating the volumes tree map …\nErrors that may occur while loading a Wasmer package from …\nAn abstraction over concrete volumes implementation to be …\nUnable to deserialize custom annotations from the …\nSerialize the volume as a <code>webc::v3::write::Directory</code>.\nThe base directory all <code>PathSegments</code> will be resolved …\nRaw data\nA pre-computed set of intermediate directories that are …\nDirectories that allow the user to access anything inside …\nSpecific files that this volume has access to.\nWhen the file was last modified.\nWhen the directory or its contents were last modified.\nName of the volume\nThe internal node\nList of nodes in the directory\nThe base directory.\nThe base directory.\nThe command annotations were being merged for.\nThe command name.\nThe command name.\nThe dependency name.\nThe underlying error.\nThe underlying error.\nThe underlying error.\nWhich annotation was being serialized?\nThe annotation that was being merged.\nThe name of the module.\nThe module name.\nThe path that was read.\nThe file that was referenced.\nThe file that was referenced.\nThe underlying error.\nThe underlying error.\nThe underlying error.\nThe underlying error.\nThe underlying error.\nThe file being opened.\nThe file being opened.\nThe file being deserialized.\nThe file being deserialized.\nThe path being canonicalized.\nPath entry in fs mapping\nA command was specified more than once.\nA module was specified more than once.\nFile based commands are not supported for in-memory …\nA dependency specification had a syntax error.\nA command uses a non-existent module.\nErrors that may occur when converting from a …\nAn error occurred while merging user-defined annotations …\nThe manifest references a file that doesn’t exist.\nThe <code>wasmer.toml</code> file references a file outside of its base …\nUnable to read a module’s <code>source</code>.\nUnable to serialize an annotation.\nA command references a module from an undeclared …\nSpecified an unknown atom kind.\nAn unknown runner kind was specified.\nUnable to deserialize custom annotations from the …\nMap the “kind” field in a <code>[module]</code> to the …\nInfer the package’s entrypoint.\nReturns the argument unchanged.\nReturns the argument unchanged.\ntake a <code>wasmer.toml</code> manifest and convert it to the <code>*.webc</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nResolve an item relative to the base directory, returning …\nTry to open a file, preferring mmap and falling back to …\ntake a <code>wasmer.toml</code> manifest and convert it to the <code>*.webc</code> …\nThe base directory.\nThe base directory.\nThe command annotations were being merged for.\nThe command name.\nThe command name.\nThe dependency name.\nThe underlying error.\nThe underlying error.\nThe underlying error.\nWhich annotation was being serialized?\nThe annotation that was being merged.\nThe name of the module.\nThe module name.\nThe path that was read.\nThe file that was referenced.\nThe file that was referenced.\nUnable to canonicalize a path.\nContainer Error\nDetect Error\nUnable to open a file.\nUnable to read a file.\nGeneric IO error.\nUnable to deserialize a json file.\nUnexpected path format\nUnable to load the <code>wasmer.toml</code> manifest.\nUnable to find the <code>wasmer.toml</code> file.\nA Wasmer package that will be lazily loaded from disk.\nAn existing directory.\nA path in the fs mapping does not exist\nError when serializing or deserializing\nUnable to extract the tarball.\nA temporary directory that will be deleted on drop.\nUnable to create a temporary directory.\nUnable to deserialize the <code>wasmer.toml</code> file.\nA manifest validation error.\nAny error happening when populating the volumes tree map …\nErrors that may occur while loading a Wasmer package from …\nGet all atoms in this package.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a <code>Package</code> from an in-memory representation.\n(Re)loads a package from a manifest.json file which was …\n(Re)loads a package from a manifest.json file which was …\nLoad a package from a <code>wasmer.toml</code> manifest on disk.\nLoad a package from a <code>wasmer.toml</code> manifest on disk.\nLoad a package from a <code>*.tar.gz</code> archive.\nLoad a <code>Package</code> from a <code>*.tar.gz</code> file on disk.\nLoad a <code>Package</code> from a <code>*.tar.gz</code> file on disk.\nLoad a package from a <code>*.tar.gz</code> archive.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the WEBC manifest.\nSerialize the package to a <code>*.webc</code> v2 file, ignoring errors …\nA polyfill for <code>TempDir::new()</code> that will work when …\nA polyfill for <code>Archive::unpack()</code> that is WASI-compatible.\nReturns all volumes in this package\nReturns the Sha256 has of the webc represented by this …\nThe underlying error.\nThe underlying error.\nThe underlying error.\nThe underlying error.\nThe underlying error.\nThe file being opened.\nThe file being opened.\nThe file being deserialized.\nThe file being deserialized.\nThe path being canonicalized.\nPath entry in fs mapping\nPrefer to lose data rather than error out.\nAll package issues should be errors.\nThe strictness to use when working with a […\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn abstraction over concrete volumes implementation to be …\nSerialize the volume as a <code>webc::v3::write::Directory</code>.\nA lazily loaded volume in a Wasmer package.\nThe name of the volume used to store metadata files.\nThe base directory all <code>PathSegments</code> will be resolved …\nGiven a list of absolute paths, create a directory tree …\nReturns the argument unchanged.\nA pre-computed set of intermediate directories that are …\nCalls <code>U::from(self)</code>.\nDirectories that allow the user to access anything inside …\nGet the metadata for a particular item.\nSpecific files that this volume has access to.\nReturns the name of the volume\nName of the volume\nCreate a new metadata volume.\nRead the contents of a directory.\nRead a file from the volume.\nResolve a <code>PathSegments</code> to its equivalent path on disk.\nA directory\nA file\nThe name of the volume used to store metadata files.\nAn in-memory directory.\nAn in-memory file.\nAn in-memory representation of a filesystem node.\nAn in-memory representation of a volume.\nTry to return a <code>MemoryDir</code> out of <code>self</code>.\nTry to return a <code>MemoryFile</code> out of <code>self</code>.\nRaw data\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhen the file was last modified.\nWhen the directory or its contents were last modified.\nThe internal node\nList of nodes in the directory\nConvert a <code>Features</code> object to a list of WebAssembly feature …\nCheck if the data looks like a webc.\nCheck if something looks like a <code>*.tar.gz</code> file.\nCreate a <code>Features</code> object from a list of WebAssembly …")