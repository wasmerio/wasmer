searchState.loadedDescShard("wasmer_config", 0, "Provides configuration types for Wasmer.\nUser-facing app.yaml file config: <code>AppConfigV1</code>.\nRust and cargo specific annotations used to interoperate …\nWasmer package definitions.\nEnables accelerated instance boot times with startup …\nRestricted version of [<code>super::CapabilityMapV1</code>], with only …\nMemory capability settings.\nRuntime capability settings.\nUser-facing app.yaml config file for apps.\nBcrypt password hash.\nBootstrapping process\nStart the instance without any snapshot triggers. Once the …\nConfigure SSH server credentials and settings.\nExplicitly requested by the guest module\nTriggered on reading the environment variables for the …\nTriggered when a listen syscall is invoked on a socket for …\nIssued on the first interrupt signal (Ctrl + C) the …\nTriggered when the process reads stdin for the first time\nHeader added to Edge app HTTP responses. The value …\nHealth check configuration for http endpoints.\nDefinition for an HTTP header.\nDefines an HTTP request.\nValidation checks for an <code>HttpRequest</code>.\nTriggered when all the threads in the process goes idle\nHow will an instance be bootstrapped?\nJob configuration.\nWhen a non-determinstic call is made\nTriggered periodically based on a interval (default 10 …\nPlain text password.\nApp redirect configuration.\nAlarm clock signal (used for timers)\nIssued if the user sends an interrupt signal (Ctrl + C).\nThe SIGSTOP signal instructs the operating system to stop …\nThe SIGTSTP signal is sent to a process by its controlling …\nTransaction\nExplicitly enable the given snapshot triggers before …\nApp id assigned by the backend.\nWhether to enable asynchronous threads/deep sleeping.\nSSH public keys for this user.\nRequest body as a string.\nText that must be present in the response body.\nRegular expression that must match against the response …\nCLI arguments passed to the runner. Only applicable for …\nOnly applicable for runners that accept CLI arguments.\nThe command to run. Defaults to the package’s entrypoint.\nEnable debug mode, which will show detailed error pages in …\nDomains for the app.\nEnable an SSH server.\nEngine to use for an instance, e.g. wasmer_cranelift, …\nEnvironment variables.\nEnvironment variables.\nCapture extra fields for forwards compatibility.\nForce https by redirecting http requests to https …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHTTP headers added to the request.\nNumber of retries before the health check is considered …\nEnables app bootstrapping with startup snapshots.\nInterval for the health check.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum percent of “jitter” to introduce between …\nMinimum “jitter” to introduce between invocations.\nMemory limit for an instance.\nLocation-related configuration for the app.\nMaximum age of snapshots.\nDon’t start job if past the due time by this amount, …\nInstance memory settings.\nInstance memory settings.\nHTTP method.\nThe method to use to generate the instaboot snapshot for …\nName of the app.\nAdditional unknown fields.\nAdditional unknown capabilities.\nAdditional unknown fields. This provides a small bit of …\nAdditional unknown fields. This provides a small bit of …\nAdditional unknown capabilities.\nOwner of the app.\nThe package that contains the command to run. Defaults to …\nThe package to execute.\nPasswords for this user.\nRequest path.\nHTTP requests to perform during startup snapshot creation. …\nRuntime settings.\nExpected HTTP status codes.\nRequest timeout.\nNumber of retries before the health check is considered …\nThe username used for SSH login.\nHealth check configuration for http endpoints.\nReturns the argument unchanged.\nReturns the argument unchanged.\nNumber of retries before the health check is considered …\nInterval for the health check.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNumber of retries before the health check is considered …\nDefinition for an HTTP header.\nDefines an HTTP request.\nValidation checks for an <code>HttpRequest</code>.\nRequest body as a string.\nText that must be present in the response body.\nRegular expression that must match against the response …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHTTP headers added to the request.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHTTP method.\nRequest path.\nExpected HTTP status codes.\nRequest timeout.\nJob configuration.\nCLI arguments passed to the runner. Only applicable for …\nThe command to run. Defaults to the package’s entrypoint.\nEnvironment variables.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum percent of “jitter” to introduce between …\nMinimum “jitter” to introduce between invocations.\nDon’t start job if past the due time by this amount, …\nInstance memory settings.\nAdditional unknown fields.\nAdditional unknown capabilities.\nThe package that contains the command to run. Defaults to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBootstrapping process\nExplicitly requested by the guest module\nTriggered on reading the environment variables for the …\nTriggered when a listen syscall is invoked on a socket for …\nIssued on the first interrupt signal (Ctrl + C) the …\nTriggered when the process reads stdin for the first time\nTriggered when all the threads in the process goes idle\nWhen a non-determinstic call is made\nTriggered periodically based on a interval (default 10 …\nAlarm clock signal (used for timers)\nIssued if the user sends an interrupt signal (Ctrl + C).\nThe SIGSTOP signal instructs the operating system to stop …\nThe SIGTSTP signal is sent to a process by its controlling …\nTransaction\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBcrypt password hash.\nConfigure SSH server credentials and settings.\nPlain text password.\nSSH public keys for this user.\nEnable an SSH server.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdditional unknown fields. This provides a small bit of …\nAdditional unknown fields. This provides a small bit of …\nPasswords for this user.\nThe username used for SSH login.\nThe annotation used by <code>cargo wapm</code> when it parses the …\nThe ABI to use when adding the compiled crate to the …\nBinding declarations for the crate.\nReturns the argument unchanged.\nFilesystem mappings.\nCalls <code>U::from(self)</code>.\nThe namespace this package should be published under.\nThe name the package should be published under, if it …\nExtra flags that should be passed to the <code>wasmer</code> CLI.\nSha256 hash, represented as bytes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe ABI is a hint to WebAssembly runtimes about what …\nThe interface exposed by a <code>Module</code>.\nAnnotations for a command.\nDescribes a command for a wasmer module.\nAn executable command.\nA module in the current package.\nA module that will be provided by a dependency, in …\nAnnotations that will be read from a file on disk.\nAnnotations on disk.\nThe different formats that <code>FileCommandAnnotations</code> can be …\nAn identifier in the format prescribed by [<code>WebcIdent</code>].\nErrors that may occur when resolving <code>Bindings</code> imports.\nA <code>*.json</code> file that will be deserialized using <code>serde_json</code>.\nThe default name for the manifest file.\nThe manifest represents the file used to describe a Wasm …\nBuilder for <code>Manifest</code>.\nError type for ManifestBuilder\nErrors that may occur while working with a <code>Manifest</code>.\nA file which may be executed by a <code>Command</code>. Sometimes also …\nA reference to a module which may or may not come from …\nParsed representation of a package identifier.\nPackage definition for a Wasmer package.\nBuilder for <code>Package</code>.\nError type for PackageBuilder\nHash for a package.\nError that occurs during package ident/source parsing.\nSource location of a package.\nAn absolute or relative (dot-leading) path.\nAnnotations that are specified inline.\nSuggested optimization that might be operated on the …\nUninitialized field\nUninitialized field\nMiscellaneous annotations specified by the user.\nErrors that may be returned by <code>Manifest::validate()</code>.\nCustom validation error\nCustom validation error\nA <code>*.yaml</code> file that will be deserialized using <code>serde_yaml</code>.\nThe ABI this module satisfies.\nadd a dependency\nExtra annotations that will be consumed by the runner.\nMiscellaneous annotations from the user.\nInterface definitions that can be used to generate …\nBuilds a new <code>Package</code>.\nBuilds a new <code>Manifest</code>.\nCreate a <code>PackageBuilder</code> populated with all mandatory …\nCreate a <code>ManifestBuilder</code> populated with all mandatory …\nCommands the package makes available to users.\nCommands the package makes available to users.\nCommands the package makes available to users.\nCreate an empty builder, with all fields set to <code>None</code> or …\nCreate an empty builder, with all fields set to <code>None</code> or …\nThe package’s dependencies.\nThe package’s dependencies.\nThe package’s dependencies.\nA brief description of the package.\nA brief description of the package.\nA brief description of the package.\nThe name of the command that should be used by <code>wasmer run</code> …\nThe name of the command that should be used by <code>wasmer run</code> …\nThe name of the command that should be used by <code>wasmer run</code> …\nThe <code>*.wai</code> file defining the interface this package exposes.\nThe path to the annotations file.\nConstruct a manifest by searching in the specified …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an <code>Abi</code> from its human-friendly name.\nThe mappings used when making bundled assets available to …\nThe mappings used when making bundled assets available to …\nThe mappings used when making bundled assets available to …\nGet annotations, automatically loading them from a file …\nParse a <code>*.wai</code> file to find the absolute path for any other …\nGet the module this <code>Command</code> refers to.\nGet the command’s name.\nThe website used as the package’s homepage.\nThe website used as the package’s homepage.\nThe website used as the package’s homepage.\nThe <code>*.wai</code> files for any functionality this package imports …\nWebAssembly interfaces this module requires.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs this a <code>Abi::None</code>?\nWhich format are the annotations saved in?\nA SPDX license specifier for this package.\nA SPDX license specifier for this package.\nA SPDX license specifier for this package.\nThe location of the license file, useful for non-standard …\nThe location of the license file, useful for non-standard …\nThe location of the license file, useful for non-standard …\nInclude a directory on the host in the package and make it …\nThe module containing this command’s executable.\nWebAssembly modules to be published.\nWebAssembly modules to be published.\nWebAssembly modules to be published.\nThe package’s name in the form <code>namespace/name</code>.\nThe package’s name in the form <code>namespace/name</code>.\nThe package’s name in the form <code>namespace/name</code>.\nThe name of the command.\nThe name used to refer to this module.\nMetadata about the package itself.\nMetadata about the package itself.\nMetadata about the package itself.\nParse a <code>Manifest</code> from its TOML representation.\nMark this as a private package\nMark this as a private package\nMark this as a private package\nThe package’s README file.\nThe package’s README file.\nThe package’s README file.\nGet all files that make up this interface.\nremove dependency by package name\nUnlike, <code>disable-command-rename</code> which prevents …\nUnlike, <code>disable-command-rename</code> which prevents …\nUnlike, <code>disable-command-rename</code> which prevents …\nA URL pointing to the package’s source code.\nA URL pointing to the package’s source code.\nA URL pointing to the package’s source code.\nThe runner to use when running this command.\nWrite the manifest to permanent storage\nThe location of the module file on disk, relative to the …\nGet the ABI’s human-friendly name.\nConvert a <code>Manifest</code> to its TOML representation.\nValidate this <code>Manifest</code> to check for common semantic errors.\nThe package’s version number.\nThe package’s version number.\nThe package’s version number.\nThe version of the WAI format being used.\nThe version of the WIT format being used.\nThe <code>*.wit</code> file’s location on disk.\nAdd a <code>Command</code> to the <code>Manifest</code>.\nAdd a dependency to the <code>Manifest</code>.\nAdd a <code>Module</code> to the <code>Manifest</code>.\nThe name of the dependency the module comes from.\nThe name of the module.\nThe name of the module.\nError that occurs during package ident/source parsing.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nParsed representation of a package identifier.\nBuild the ident for a package.\nReturns the argument unchanged.\nReturns the argument unchanged.\nNamespaced name.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this ident matches the given package id.\nHash for a package.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns true if this ident matches the given package id.\nAn identifier in the format prescribed by [<code>WebcIdent</code>].\nSource location of a package.\nAn absolute or relative (dot-leading) path.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")