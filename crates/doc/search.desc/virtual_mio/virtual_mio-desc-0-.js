searchState.loadedDescShard("virtual_mio", 0, "Set to true when exiting the poll loop\nQueued up modifications that will be processed immediately …\nThe core assumption here is that this will always be the …\nWaker to wake up the selectors own poll loop\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nApply the modification to a handler lookup table\nSet to true when exiting the poll loop\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGenerate a new unique token\nTry to process a modification immediately, otherwise queue …\nQueued up modifications that will be processed immediately …\nThe core assumption here is that this will always be the …\nDrain the queued modifications queue and return the …\nWaker to wake up the selectors own poll loop\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")