searchState.loadedDescShard("wasmer_wasix", 2, "Returns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nThe absolute or relative timestamp.\nThe absolute or relative timestamp.\nexpects a single right, returns None if out of bounds or &gt; …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nType of event that was triggered\nThe type of event that occured\nThe type of the event that occurred, and the contents of …\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nUser-provided value that got attached to …\nUser-provided value that got attached to …\nLatest version.\nNamespace for the <code>Snapshot0</code> version.\nNamespace for the <code>Snapshot1</code> version.\n<code>wasi_unstable</code>.\n<code>wasi_snapshot_preview1</code>.\nNamespace for the <code>wasix</code> version.\nNamespace for the <code>wasix</code> version.\nNamespace for the <code>wasix</code> version.\nThe version of WASI. This is determined by the imports …\n<code>wasix_32v1</code>.\n<code>wasix_64v1</code>.\nReturns the argument unchanged.\nGet the version as its namespace str as it appears in Wasm …\nDetect the version of WASI being used based on the import …\nLike <code>get_wasi_version</code> but detects multiple WASI versions …\nCalls <code>U::from(self)</code>.\nCheck if a provided module is compiled for some version of …\nReturns if the module is WASIX or not\nA “mock” no-op <code>std::task::Waker</code> implementation.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this guard into an owned reference of the …\nConverts this guard into an owned reference of the …\nLocks this rwlock with shared read access, blocking the …\nRuns the work in the background via the task managers …\nRuns the work in the background via the task managers …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nLocks this rwlock with exclusive write access, blocking …\nA snapshot that captures the runtime state of an instance.\nReturns the argument unchanged.\nValues of all globals, indexed by the same index used in …\nCalls <code>U::from(self)</code>.\nRepresents a waker that can be used to put a thread to …\nReturns the argument unchanged.\nGets a reference to the waker that can be used for …\nCalls <code>U::from(self)</code>.\nCreates a new parking lot with a specific value\nWill wait until either the reactor is triggered or the …\nWakes one of the reactors thats currently waiting")