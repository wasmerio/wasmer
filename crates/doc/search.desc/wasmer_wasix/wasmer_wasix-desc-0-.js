searchState.loadedDescShard("wasmer_wasix", 0, "Wasmer’s WASI implementation\nall the rights enabled\nAccess denied\nThe address was in use\nThe address could not be found\nFile exists\nBad handle\nBad request\nThe fd given as a base was not a directory so the …\nTried to run the specified binary as a new WASI …\nA pipe was closed\nFailed to compile the Wasmer process\nThe connection was aborted\nThe connection request was refused\nThe connection was reset\nRepresents the work that will be done when a thread goes …\nFailed during deserialization\nDirectory not Empty\nA pair of pipes that are connected together.\nThe requested file or directory could not be found\nContains the error value\nFailed to fetch the Wasmer process\nAn error occurred while preparing the file system\nError type for external users\nSomething failed when doing IO. These errors can generally …\nInternal error has occurred\nThe operation was interrupted before it could finish\nInvalid ABI\nInvalid internal data, if the argument data is invalid, …\nThe fd given was not usable\nThe provided data is invalid\nInvalid Wasmer process\nLatest version.\nThe filesystem has failed to lock a resource.\nMemory access violation\nMemory allocation failed\nThe requested device couldn’t be accessed\nNo value.\nExpected a file but found not a file\nCould not perform the operation because there was not an …\nNot found\nContains the success value\nCaller was not allowed to perform this operation\nTrait that will be invoked after the rewind has finished …\nThe rewind state after a deep sleep\nFailed during serialization\n<code>wasi_unstable</code>.\n<code>wasi_snapshot_preview1</code>.\nSome value of type <code>T</code>.\nA snapshot that captures the runtime state of an instance.\nThe operation did not complete within the given amount of …\nFound EOF when EOF was not expected\nSome other unhandled error. If you see this, it’s …\nSome other unhandled error. If you see this, it’s …\nOperation is not supported on this filesystem\nCall is unsupported\nThis trait relies on your file closing when it goes out of …\nAn implementation of virtual networking\nShared version of BidiPipe for situations where you need …\nThe environment provided to the WASI imports.\nBuilder API for configuring a <code>WasiEnv</code> environment needed …\nData required to construct a <code>WasiEnv</code>.\nThis is returned in <code>RuntimeError</code>. Use <code>downcast</code> or …\nVarious <code>TypedFunction</code> and <code>Global</code> handles for an active …\nError type returned when bad data is given to …\nThe version of WASI. This is determined by the imports …\n<code>wasix_32v1</code>.\n<code>wasix_64v1</code>.\nOperation would block, this error lets the caller know …\nA call to write returned 0\nCommand line arguments.\nRetrieve the concrete exit code returned by an instance.\nasyncify_get_state(): call this to get the current value …\nasyncify_start_rewind(data : i32): call this to start …\nasyncify_start_unwind(data : i32): call this to start …\nasyncify_stop_rewind(): call this to note that rewinding …\nasyncify_stop_unwind(): call this to note that unwinding …\nGet the receiver pipe.\nGet the receiver pipe.\nBinary factory attached to this environment\nCreates a socket that can be used to send and receive ICMP …\nCreates a low level socket that can read and write …\nOpens a UDP socket that listens on a specific IP and Port …\nRun a synchronous function that would normally be blocking.\nBridges this local network with a remote network, which is …\nWhether to call the <code>_initialize</code> function in the WASI …\nIndicates if the calling environment is capable of deep …\nCombines two ends of a duplex pipe back together again\nOpens a TCP connection to a particular destination IP …\nThis method will copy a file from a source to this …\nThis method will copy a file from a source to this …\nthe time at which the file was created in nanoseconds as a …\nthe time at which the file was created in nanoseconds as a …\nPoints to the end of the data section\nAcquires an IP address on the network and configures the …\nFlag that indicates the cleanup of the environment is to …\nIs this environment capable and setup for deep sleeping\nEnables an exponential backoff of the process CPU usage …\nEnables the snap shotting functionality\nName of entry function. Defaults to running <code>_start</code> if not …\nThe environment before the vfork occured\nEnvironment variables.\nIndicates if extra tracing should be output\nReturns the serialized object that is returned on the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the sender pipe.\nGet the mutable sender pipe.\nAdds a default gateway to the routing table\nCreate an <code>Imports</code> with an existing <code>WasiEnv</code>. <code>WasiEnv</code> needs …\nCombines a state generating function with the import list …\nCombines a state generating function with the import list …\nUsed for “special” files such as <code>stdin</code>, <code>stdout</code> and …\nDetect the version of WASI being used based on the import …\nLike <code>get_wasi_version</code> but detects multiple WASI versions …\nValues of all globals, indexed by the same index used in …\nHandle of the thread we have forked (dropping this handle …\nFlag that indicates if the stack capture exports are being …\nPoints to the indirect function table\nFunction thats invoked to initialize the WASM module (name …\nInner functions and references that are loaded before the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdds a static IP address to the interface with a netmask …\nClears all the assigned IP addresses for this interface\nLists all the IP addresses currently assigned to this …\nRemoves a static (or dynamic) IP address from the interface\nFlag that indicates if this rewind is 64-bit or 32-bit …\nReturns <code>true</code> if the spawn error is <code>NotFound</code>.\nIndicates if the file is opened or closed. This function …\nIndicates if the file is opened or closed. This function …\nCheck if a provided module is compiled for some version of …\nReturns if the module is WASIX or not\nthe last time the file was accessed in nanoseconds as a …\nthe last time the file was accessed in nanoseconds as a …\nthe last time the file was modified in nanoseconds as a …\nthe last time the file was modified in nanoseconds as a …\nLayout of the memory,\nRepresents the layout of the memory\nLists for TCP connections on a specific IP and Port …\nReturns the hardware MAC address for this interface\nMacros to simplify some common WASI-specific tasks.\nList of host commands to map into the WASI instance.\nRepresents a reference to the memory\nMemory stack used to restore the stack trace back to where …\nList of the handles that are owned by this context (this …\nPolls the file for when there is data to be read\nPolls the file for when there is data to be read\nSeed used to rotate around the events returned by …\nPolls the file for when it is available for writing\nPolls the file for when it is available for writing\nPre-opened directories that will be accessible from WASI.\nRepresents the process this environment is attached to\nFlag that indicates if the environment is currently …\nPerforms DNS resolution for a specific hostname\nState that the thread will be rewound to\nCall stack used to restore the stack trace back to where …\nThe unwound stack before the vfork occured\nAdds a specific route to the routing table\nClears the routing table for this interface\nLists all the routes defined in the routing table for this …\nRemoves a routing rule from the routing table\nRun a main function.\nImplementation of the WASI runtime.\nChange the size of the file, if the <code>new_size</code> is greater …\nChange the size of the file, if the <code>new_size</code> is greater …\nsets accessed and modified time\nRepresents the callback for signals (name = “__…\nFlag that indicates if the signal callback has been set by …\nSignals that should get their handler overridden.\nthe size of the file in bytes\nthe size of the file in bytes\nShould stdio be skipped when bootstrapping this module …\nSkip writes to stdout and stderr when bootstrapping from a …\nIndicates triggers that will cause a snapshot to be taken\nSpawns a new blocking task that runs the provided closure.\nSplit into two pipes that are connected to each other\nPoints to the higher end of the stack\nPoints to the lower end of the stack\nPoints to the current location of the memory stack pointer\nDescribes the type of thread start\nMain function that will be invoked (name = “_start”)\nWARNING: the API exposed here is unstable and very …\nShared state of the WASI system. Manages all the data that …\nStop running after the first snapshot is taken\nAll the global data stored in the store\nThe mutable parts of the store\nRepresents the thread this environment is attached to\nRepresents the callback for spawning a thread (name = “…\nPoints to the start of the TLS area\nThis is the work that will be performed before the thread …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nDisconnects from the remote network essentially unbridging …\nRequest deletion of the file\nRequest deletion of the file\nList of webc dependencies to be injected.\nRepresents a fork of the process that is currently in play\nPre-opened virtual directories that will be accessible …\nWrites to this file using an mmap offset and reference …\nA WebAssembly package that has been loaded into memory.\nThe name of the <code>BinaryPackageCommand</code> which is this package…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIncludes the ids of all the packages in the tree\nA WebAssembly package that has been loaded into memory.\nGet a reference to this <code>BinaryPackageCommand</code>’s atom as a …\nGet the bytes for the entrypoint command.\nThe name of the <code>BinaryPackageCommand</code> which is this package…\nReturns the argument unchanged.\nReturns the argument unchanged.\nLoad a <code>BinaryPackage</code> and all its dependencies from a …\nLoad a <code>webc::Container</code> and all its dependencies into a …\nResolve the entrypoint command name to a …\nGet a hash for this binary package.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIncludes the ids of all the packages in the tree\nGet the WebAssembly features required by this command’s …\nCalls the module\nSAFETY\nDefines capabilities for a Wasi environment.\nDefines threading related permissions.\nFlag that indicates if asynchronous threading is disabled …\nSwitches to a blocking sleep implementation instead of the …\nEnables an exponential backoff of the process CPU usage …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum number of threads that can be spawned.\nMerges another <code>Capabilities</code> object into this one, …\nRepresents all the EpollInterests that have occurred\nGuard the cleans up the selector registrations\nThe root inode and stdio inodes are the first inodes in the\nA file that Wasi knows about that may or may not be open\nThe core of the filesystem abstraction.  Includes …\nA completely aribtrary “big enough” number used as the …\nThe same as Dir but without the irrelevant bits The root …\nThe first two fields are data <em>about</em> the symlink the last …\nthe fd value of the virtual root\nWarning, modifying these fields directly may cause …\nadds another value to the inodes\nCloses all the file handles.\nCloses all the file handles.\nCloses an open FD, handling all details such as FD being …\nWill conditionally union the binary file system with this …\nCreates an inode and inserts it given a Kind and some …\nCreates an inode and inserts it given a Kind, does not …\nCreates an inode with the given filestat and inserts it.\nAssociated user data\nAssociated user data\nReturns the default filesystem backing\nThe events we are polling on\nFile descriptor we are polling on\nA very simple data structure for holding the FDs a WASI …\nrefresh size from filesystem\nForking the WasiState is used when either fork or vfork is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the current directory\ngets a host file from a base directory and a path this …\nInternal part of the core path resolution function which …\nReturns the parent Dir or Root that the file at a given …\nUsing a hash set prevents the same interest from being …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMerge the contents of a filesystem into this one.\nMerge the contents of one filesystem into another.\nPrivate helper function to init the filesystem, called in …\nCreated for the builder API. like <code>new</code> but with more …\nThis function is like create dir all, but it also opens it.\nOpens a user-supplied file in the directory specified with …\nFlags that determine how the <code>Fd</code> can be used.\nfinds the number of directories between the fd and the …\nFinds the preopened directory that is the “best match” …\nPointer to the user data\nConverts a relative path into an absolute path\nLow level function to remove an inode, that is it deletes …\nChanges the current directory\nReceiver that wakes sleeping threads\nInternal helper function to get a standard device handle. …\nInternal helper function to mutably get a standard device …\nGet the <code>VirtualFile</code> object at stderr\nGet the <code>VirtualFile</code> object at stderr mutably\nGet the <code>VirtualFile</code> object at stdin TODO: Review why this …\nGet the <code>VirtualFile</code> object at stdin mutably\nGet the <code>VirtualFile</code> object at stdout\nGet the <code>VirtualFile</code> object at stdout mutably\nChange the backing of a given file descriptor Returns the …\nThe preopened dir that this symlink file is relative to …\nThe entries of a directory are lazily filled.\nMarks the file as a special file that only one <code>fd</code> can …\nThe open file, if it’s open\nParent directory\nThe path on the host system where the file is located This …\nThe path on the host system where the directory is located\nThe path to the symlink from the <code>base_po_dir</code>\nthe value of the symlink as a relative path\nRepresents a networking socket\nThis <code>Fd</code> can append in write system calls. Note that the …\nThis <code>Fd</code> may create a file before writing to it. Note that …\nRepresents all the EpollInterests that have occurred\nGuard the cleans up the selector registrations\nA file that Wasi knows about that may or may not be open\nThe core of the filesystem abstraction.  Includes …\nThis <code>Fd</code> can be used with read system calls.\nThe same as Dir but without the irrelevant bits The root …\nThe first two fields are data <em>about</em> the symlink the last …\nThis <code>Fd</code> will delete everything before writing. Note that …\nThis <code>Fd</code> can be used with write system calls.\nAssociated user data\nAssociated user data\nThe events we are polling on\nFile descriptor we are polling on\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUsing a hash set prevents the same interest from being …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFlags that determine how the <code>Fd</code> can be used.\nPointer to the user data\nThe preopened dir that this symlink file is relative to …\nThe entries of a directory are lazily filled.\nMarks the file as a special file that only one <code>fd</code> can …\nThe open file, if it’s open\nParent directory\nThe path on the host system where the file is located This …\nThe path on the host system where the directory is located\nThe path to the symlink from the <code>base_po_dir</code>\nthe value of the symlink as a relative path\nRepresents a networking socket\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUsed for event notifications by the user application or …\nReturns the argument unchanged.\nReturns the argument unchanged.\nInterestHandler for use with epoll\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFlag that indicates if this is operating\nCounter used to prevent duplicate notification events\nReceiver that wakes sleeping threads\nAll the registered wakers\nDefines http client permissions.\nTry to instantiate a HTTP client that is suitable for the …\nDefines http client permissions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe alignment of the vector\nThe resolver for <code>JournalSockoptionV1::AcceptTimeout</code>\nThe archived counterpart of …\nThe resolver for <code>JournalTimeTypeV1::AcceptTimeout</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEpollCtlV1::Add</code>\nThe archived counterpart of <code>JournalEpollCtlV1::Add</code>\nAn aligned COW vector of bytes which avoids copying data …\nThe resolver for <code>JournalStreamSecurityV1::AnyEncryption</code>\nThe archived counterpart of …\nAn archived <code>JournalAddressfamilyV1</code>\nAn archived <code>JournalAdviceV1</code>\nAn archived <code>JournalEntryChangeDirectoryV1</code>\nAn archived <code>JournalEntryClearEtherealV1</code>\nAn archived <code>JournalEntryCloseFileDescriptorV1</code>\nAn archived <code>JournalEntryCloseThreadV1</code>\nAn archived <code>JournalEntryCreateDirectoryV1</code>\nAn archived <code>JournalEntryCreateEventV1</code>\nAn archived <code>JournalEntryCreateHardLinkV1</code>\nAn archived <code>JournalEntryCreatePipeV1</code>\nAn archived <code>JournalEntryCreateSymbolicLinkV1</code>\nAn archived <code>JournalEntryDuplicateFileDescriptorV1</code>\nAn archived <code>JournalEntryDuplicateFileDescriptorV2</code>\nAn archived <code>JournalEntryEpollCreateV1</code>\nAn archived <code>JournalEntryEpollCtlV1</code>\nAn archived <code>JournalEntryFileDescriptorAdviseV1</code>\nAn archived <code>JournalEntryFileDescriptorAllocateV1</code>\nAn archived <code>JournalEntryFileDescriptorSeekV1</code>\nAn archived <code>JournalEntryFileDescriptorSetFdFlagsV1</code>\nAn archived <code>JournalEntryFileDescriptorSetFlagsV1</code>\nAn archived <code>JournalEntryFileDescriptorSetRightsV1</code>\nAn archived <code>JournalEntryFileDescriptorSetSizeV1</code>\nAn archived <code>JournalEntryFileDescriptorSetTimesV1</code>\nAn archived <code>JournalEntryFileDescriptorWriteV1</code>\nAn archived <code>JournalEntryInitModuleV1</code>\nAn archived <code>JournalEntryOpenFileDescriptorV1</code>\nAn archived <code>JournalEntryOpenFileDescriptorV2</code>\nAn archived <code>JournalEntryPathRenameV1</code>\nAn archived <code>JournalEntryPathSetTimesV1</code>\nAn archived <code>JournalEntryPortAddAddrV1</code>\nAn archived <code>JournalEntryPortBridgeV1</code>\nAn archived <code>JournalEntryPortDelAddrV1</code>\nAn archived <code>JournalEntryPortGatewaySetV1</code>\nAn archived <code>JournalEntryPortRouteAddV1</code>\nAn archived <code>JournalEntryPortRouteDelV1</code>\nAn archived <code>JournalEntryProcessExitV1</code>\nAn archived <code>JournalEntryRecordType</code>\nAn archived <code>JournalEntryRemoveDirectoryV1</code>\nAn archived <code>JournalEntryRenumberFileDescriptorV1</code>\nAn archived <code>JournalEntrySetClockTimeV1</code>\nAn archived <code>JournalEntrySetThreadV1</code>\nAn archived <code>JournalEntrySnapshotV1</code>\nAn archived <code>JournalEntrySocketAcceptedV1</code>\nAn archived <code>JournalEntrySocketBindV1</code>\nAn archived <code>JournalEntrySocketConnectedV1</code>\nAn archived <code>JournalEntrySocketJoinIpv4MulticastV1</code>\nAn archived <code>JournalEntrySocketJoinIpv6MulticastV1</code>\nAn archived <code>JournalEntrySocketLeaveIpv4MulticastV1</code>\nAn archived <code>JournalEntrySocketLeaveIpv6MulticastV1</code>\nAn archived <code>JournalEntrySocketListenV1</code>\nAn archived <code>JournalEntrySocketOpenV1</code>\nAn archived <code>JournalEntrySocketPairV1</code>\nAn archived <code>JournalEntrySocketSendFileV1</code>\nAn archived <code>JournalEntrySocketSendToV1</code>\nAn archived <code>JournalEntrySocketSendV1</code>\nAn archived <code>JournalEntrySocketSetOptFlagV1</code>\nAn archived <code>JournalEntrySocketSetOptSizeV1</code>\nAn archived <code>JournalEntrySocketSetOptTimeV1</code>\nAn archived <code>JournalEntrySocketShutdownV1</code>\nAn archived <code>JournalEntryTtySetV1</code>\nAn archived <code>JournalEntryUnlinkFileV1</code>\nAn archived <code>JournalEntryUpdateMemoryRegionV1</code>\nAn archived <code>JournalEpollCtlV1</code>\nAn archived <code>JournalEpollEventCtlV1</code>\nAn archived <code>JournalExitCodeV1</code>\nAn archived <code>JournalIpCidrV1</code>\nAn archived <code>JournalSnapshot0ClockidV1</code>\nAn archived <code>JournalSnapshotTriggerV1</code>\nAn archived <code>JournalSocketShutdownV1</code>\nAn archived <code>JournalSockoptionV1</code>\nAn archived <code>JournalSocktypeV1</code>\nAn archived <code>JournalStreamSecurityV1</code>\nAn archived <code>JournalThreadStartTypeV1</code>\nAn archived <code>JournalTimeTypeV1</code>\nAn archived <code>JournalWasiMemoryLayout</code>\nAn archived <code>JournalWhenceV1</code>\nA bit of manual up-casting support\nJournal which leave itself in a consistent state once it …\nThe resolver for <code>JournalTimeTypeV1::BindTimeout</code>\nThe archived counterpart of <code>JournalTimeTypeV1::BindTimeout</code>\nThe resolver for <code>JournalSnapshotTriggerV1::Bootstrap</code>\nThe archived counterpart of …\nBootstrapping process\nThe resolver for <code>JournalSocketShutdownV1::Both</code>\nThe archived counterpart of <code>JournalSocketShutdownV1::Both</code>\nThe resolver for <code>JournalSockoptionV1::Broadcast</code>\nThe archived counterpart of <code>JournalSockoptionV1::Broadcast</code>\nThe resolver for <code>JournalEntryRecordType::ChangeDirectoryV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalStreamSecurityV1::ClassicEncryption</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::ClearEtherealV1</code>\nThe archived counterpart of …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::CloseThreadV1</code>\nThe archived counterpart of …\nRepresents the results of a compaction operation\nDeduplicates memory and stacks to reduce the number of …\nJournal which will store the events locally in memory …\nThe resolver for <code>JournalSockoptionV1::ConnectTimeout</code>\nThe archived counterpart of …\nThe resolver for <code>JournalTimeTypeV1::ConnectTimeout</code>\nThe archived counterpart of …\nJournal that counts the size of the entries that are …\nThe resolver for <code>JournalEntryRecordType::CreateDirectoryV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::CreateEventV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::CreateHardLinkV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::CreatePipeV1</code>\nThe archived counterpart of …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for <code>JournalWhenceV1::Cur</code>\nThe archived counterpart of <code>JournalWhenceV1::Cur</code>\nThe resolver for <code>JournalEpollCtlV1::Del</code>\nThe archived counterpart of <code>JournalEpollCtlV1::Del</code>\nThe resolver for <code>JournalSocktypeV1::Dgram</code>\nThe archived counterpart of <code>JournalSocktypeV1::Dgram</code>\nThe resolver for <code>JournalSockoptionV1::DontRoute</code>\nThe archived counterpart of <code>JournalSockoptionV1::DontRoute</code>\nThe resolver for <code>JournalAdviceV1::Dontneed</code>\nThe archived counterpart of <code>JournalAdviceV1::Dontneed</code>\nThe resolver for <code>JournalStreamSecurityV1::DoubleEncryption</code>\nThe archived counterpart of …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for <code>JournalWhenceV1::End</code>\nThe archived counterpart of <code>JournalWhenceV1::End</code>\nThe resolver for <code>JournalSnapshotTriggerV1::Environ</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::EpollCreateV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::EpollCtlV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalExitCodeV1::Errno</code>\nThe archived counterpart of <code>JournalExitCodeV1::Errno</code>\nThe resolver for <code>JournalSnapshotTriggerV1::Explicit</code>\nThe archived counterpart of …\nExplicitly requested by the guest module\nThe resolver for …\nThe archived counterpart of …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for …\nThe archived counterpart of …\nFilters out a specific set of journal events and drops the …\nConstructs a filter with a set of parameters that will be …\nTriggered on reading the environment variables for the …\nTriggered when a listen syscall is invoked on a socket for …\nIssued on the first interrupt signal (Ctrl + C) the …\nTriggered when the process reads stdin for the first time\nThe resolver for <code>JournalSnapshotTriggerV1::Idle</code>\nThe archived counterpart of <code>JournalSnapshotTriggerV1::Idle</code>\nTriggered when all the threads in the process goes idle\nThe resolver for <code>JournalAddressfamilyV1::Inet4</code>\nThe archived counterpart of <code>JournalAddressfamilyV1::Inet4</code>\nThe resolver for <code>JournalAddressfamilyV1::Inet6</code>\nThe archived counterpart of <code>JournalAddressfamilyV1::Inet6</code>\nThe resolver for <code>JournalEntryRecordType::InitModuleV1</code>\nThe archived counterpart of …\nThe snapshot capturer will take a series of objects that …\nThe resolver for an archived <code>JournalAddressfamilyV1</code>\nThe resolver for an archived <code>JournalAdviceV1</code>\nThe journal effector is an adapter that will be removed in …\nRepresents a log entry in a snapshot log stream that …\nThe resolver for an archived <code>JournalEntryChangeDirectoryV1</code>\nThe resolver for an archived <code>JournalEntryClearEtherealV1</code>\nThe resolver for an archived …\nThe resolver for an archived <code>JournalEntryCloseThreadV1</code>\nThe resolver for an archived <code>JournalEntryCreateDirectoryV1</code>\nThe resolver for an archived <code>JournalEntryCreateEventV1</code>\nThe resolver for an archived <code>JournalEntryCreateHardLinkV1</code>\nThe resolver for an archived <code>JournalEntryCreatePipeV1</code>\nThe resolver for an archived …\nThe resolver for an archived …\nThe resolver for an archived …\nThe resolver for an archived <code>JournalEntryEpollCreateV1</code>\nThe resolver for an archived <code>JournalEntryEpollCtlV1</code>\nThe resolver for an archived …\nThe resolver for an archived …\nThe resolver for an archived …\nThe resolver for an archived …\nThe resolver for an archived …\nThe resolver for an archived …\nThe resolver for an archived …\nThe resolver for an archived …\nWARNING!!!! Do not change this structure without updating …\nThe resolver for an archived …\nThe resolver for an archived <code>JournalEntryInitModuleV1</code>\nThe resolver for an archived …\nThe resolver for an archived …\nThe resolver for an archived <code>JournalEntryPathRenameV1</code>\nThe resolver for an archived <code>JournalEntryPathSetTimesV1</code>\nThe resolver for an archived <code>JournalEntryPortAddAddrV1</code>\nThe resolver for an archived <code>JournalEntryPortBridgeV1</code>\nThe resolver for an archived <code>JournalEntryPortDelAddrV1</code>\nThe resolver for an archived <code>JournalEntryPortGatewaySetV1</code>\nThe resolver for an archived <code>JournalEntryPortRouteAddV1</code>\nThe resolver for an archived <code>JournalEntryPortRouteDelV1</code>\nThe resolver for an archived <code>JournalEntryProcessExitV1</code>\nThe resolver for an archived <code>JournalEntryRecordType</code>\nThe resolver for an archived <code>JournalEntryRemoveDirectoryV1</code>\nThe resolver for an archived …\nThe resolver for an archived <code>JournalEntrySetClockTimeV1</code>\nThe resolver for an archived <code>JournalEntrySetThreadV1</code>\nThe resolver for an archived <code>JournalEntrySnapshotV1</code>\nThe resolver for an archived <code>JournalEntrySocketAcceptedV1</code>\nThe resolver for an archived <code>JournalEntrySocketBindV1</code>\nThe resolver for an archived <code>JournalEntrySocketConnectedV1</code>\nThe resolver for an archived …\nThe resolver for an archived …\nThe resolver for an archived …\nThe resolver for an archived …\nThe resolver for an archived <code>JournalEntrySocketListenV1</code>\nThe resolver for an archived <code>JournalEntrySocketOpenV1</code>\nThe resolver for an archived <code>JournalEntrySocketPairV1</code>\nThe resolver for an archived <code>JournalEntrySocketSendFileV1</code>\nThe resolver for an archived <code>JournalEntrySocketSendToV1</code>\nThe resolver for an archived <code>JournalEntrySocketSendV1</code>\nThe resolver for an archived <code>JournalEntrySocketSetOptFlagV1</code>\nThe resolver for an archived <code>JournalEntrySocketSetOptSizeV1</code>\nThe resolver for an archived <code>JournalEntrySocketSetOptTimeV1</code>\nThe resolver for an archived <code>JournalEntrySocketShutdownV1</code>\nThe resolver for an archived <code>JournalEntryTtySetV1</code>\nThe resolver for an archived <code>JournalEntryUnlinkFileV1</code>\nThe resolver for an archived …\nThe resolver for an archived <code>JournalEpollCtlV1</code>\nThe resolver for an archived <code>JournalEpollEventCtlV1</code>\nThe resolver for an archived <code>JournalExitCodeV1</code>\nThe resolver for an archived <code>JournalIpCidrV1</code>\nType of printing mode to use\nThe resolver for an archived <code>JournalSnapshot0ClockidV1</code>\nThe resolver for an archived <code>JournalSnapshotTriggerV1</code>\nThe resolver for an archived <code>JournalSocketShutdownV1</code>\nThe resolver for an archived <code>JournalSockoptionV1</code>\nThe resolver for an archived <code>JournalSocktypeV1</code>\nThe resolver for an archived <code>JournalStreamSecurityV1</code>\nThe resolver for an archived <code>JournalThreadStartTypeV1</code>\nThe resolver for an archived <code>JournalTimeTypeV1</code>\nThe resolver for an archived <code>JournalWasiMemoryLayout</code>\nThe resolver for an archived <code>JournalWhenceV1</code>\nThe resolver for <code>JournalSockoptionV1::KeepAlive</code>\nThe archived counterpart of <code>JournalSockoptionV1::KeepAlive</code>\nThe resolver for <code>JournalSockoptionV1::LastError</code>\nThe archived counterpart of <code>JournalSockoptionV1::LastError</code>\nThe resolver for <code>JournalSockoptionV1::Linger</code>\nThe archived counterpart of <code>JournalSockoptionV1::Linger</code>\nThe resolver for <code>JournalTimeTypeV1::Linger</code>\nThe archived counterpart of <code>JournalTimeTypeV1::Linger</code>\nThe resolver for <code>JournalSnapshotTriggerV1::Listen</code>\nThe archived counterpart of …\nThe resolver for <code>JournalSockoptionV1::Listening</code>\nThe archived counterpart of <code>JournalSockoptionV1::Listening</code>\nThe LogFile snapshot capturer will write its snapshots to …\nThe results of an operation to read a log entry from the …\nThe results of an operation to write a log entry to the log\nThe resolver for <code>JournalThreadStartTypeV1::MainThread</code>\nThe archived counterpart of …\nThe memory file journal processes journal entries by …\nThe resolver for <code>JournalEpollCtlV1::Mod</code>\nThe archived counterpart of <code>JournalEpollCtlV1::Mod</code>\nThe resolver for <code>JournalSnapshot0ClockidV1::Monotonic</code>\nThe archived counterpart of …\nThe resolver for <code>JournalSockoptionV1::MulticastLoopV4</code>\nThe archived counterpart of …\nThe resolver for <code>JournalSockoptionV1::MulticastLoopV6</code>\nThe archived counterpart of …\nThe resolver for <code>JournalSockoptionV1::MulticastTtlV4</code>\nThe archived counterpart of …\nThe resolver for <code>JournalSockoptionV1::NoDelay</code>\nThe archived counterpart of <code>JournalSockoptionV1::NoDelay</code>\nThe resolver for …\nThe archived counterpart of …\nWhen a non-determinstic call is made\nThe resolver for <code>JournalSockoptionV1::Noop</code>\nThe archived counterpart of <code>JournalSockoptionV1::Noop</code>\nThe resolver for <code>JournalAdviceV1::Noreuse</code>\nThe archived counterpart of <code>JournalAdviceV1::Noreuse</code>\nThe resolver for <code>JournalAdviceV1::Normal</code>\nThe archived counterpart of <code>JournalAdviceV1::Normal</code>\nThe null journal sends all the records into the abyss\nThe resolver for <code>JournalSockoptionV1::OnlyV6</code>\nThe archived counterpart of <code>JournalSockoptionV1::OnlyV6</code>\nThe resolver for <code>JournalSockoptionV1::OobInline</code>\nThe archived counterpart of <code>JournalSockoptionV1::OobInline</code>\nThe resolver for …\nThe archived counterpart of …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for <code>JournalExitCodeV1::Other</code>\nThe archived counterpart of <code>JournalExitCodeV1::Other</code>\nThe resolver for <code>JournalEntryRecordType::PathRenameV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::PathSetTimesV1</code>\nThe archived counterpart of …\nTriggered periodically based on a interval (default 10 …\nThe resolver for <code>JournalEntryRecordType::PortAddAddrV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::PortAddrClearV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::PortBridgeV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::PortDelAddrV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::PortDhcpAcquireV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::PortGatewaySetV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::PortRouteAddV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::PortRouteClearV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::PortRouteDelV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::PortUnbridgeV1</code>\nThe archived counterpart of …\nThe printing journal writes all the journal entries to the …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::ProcessExitV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalSockoptionV1::Promiscuous</code>\nThe archived counterpart of …\nThe resolver for <code>JournalSockoptionV1::Proto</code>\nThe archived counterpart of <code>JournalSockoptionV1::Proto</code>\nThe resolver for <code>JournalAdviceV1::Random</code>\nThe archived counterpart of <code>JournalAdviceV1::Random</code>\nThe resolver for <code>JournalSocktypeV1::Raw</code>\nThe archived counterpart of <code>JournalSocktypeV1::Raw</code>\nThe resolver for <code>JournalSocketShutdownV1::Read</code>\nThe archived counterpart of <code>JournalSocketShutdownV1::Read</code>\nThe resolver for <code>JournalTimeTypeV1::ReadTimeout</code>\nThe archived counterpart of <code>JournalTimeTypeV1::ReadTimeout</code>\nThe snapshot capturer will take a series of objects that …\nThe resolver for <code>JournalSnapshot0ClockidV1::Realtime</code>\nThe archived counterpart of …\nThe resolver for <code>JournalSockoptionV1::RecvBufSize</code>\nThe archived counterpart of …\nThe resolver for <code>JournalSockoptionV1::RecvLowat</code>\nThe archived counterpart of <code>JournalSockoptionV1::RecvLowat</code>\nThe resolver for <code>JournalSockoptionV1::RecvTimeout</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::RemoveDirectoryV1</code>\nThe archived counterpart of …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for <code>JournalSockoptionV1::ReuseAddr</code>\nThe archived counterpart of <code>JournalSockoptionV1::ReuseAddr</code>\nThe resolver for <code>JournalSockoptionV1::ReusePort</code>\nThe archived counterpart of <code>JournalSockoptionV1::ReusePort</code>\nThe resolver for <code>JournalSockoptionV1::SendBufSize</code>\nThe archived counterpart of …\nThe resolver for <code>JournalSockoptionV1::SendLowat</code>\nThe archived counterpart of <code>JournalSockoptionV1::SendLowat</code>\nThe resolver for <code>JournalSockoptionV1::SendTimeout</code>\nThe archived counterpart of …\nThe resolver for <code>JournalSocktypeV1::Seqpacket</code>\nThe archived counterpart of <code>JournalSocktypeV1::Seqpacket</code>\nThe resolver for <code>JournalAdviceV1::Sequential</code>\nThe archived counterpart of <code>JournalAdviceV1::Sequential</code>\nThe resolver for <code>JournalWhenceV1::Set</code>\nThe archived counterpart of <code>JournalWhenceV1::Set</code>\nThe resolver for <code>JournalEntryRecordType::SetClockTimeV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::SetThreadV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalSnapshotTriggerV1::Sigalrm</code>\nThe archived counterpart of …\nAlarm clock signal (used for timers)\nThe resolver for <code>JournalSnapshotTriggerV1::Sigint</code>\nThe archived counterpart of …\nIssued if the user sends an interrupt signal (Ctrl + C).\nThe resolver for <code>JournalSnapshotTriggerV1::Sigstop</code>\nThe archived counterpart of …\nThe SIGSTOP signal instructs the operating system to stop …\nThe resolver for <code>JournalSnapshotTriggerV1::Sigtstp</code>\nThe archived counterpart of …\nThe SIGTSTP signal is sent to a process by its controlling …\nVarious triggers that will cause the runtime to take …\nThe resolver for <code>JournalEntryRecordType::SnapshotV1</code>\nThe archived counterpart of …\nRepresents the marker for the end of a snapshot\nThe resolver for <code>JournalEntryRecordType::SocketAcceptedV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::SocketBindV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::SocketConnectedV1</code>\nThe archived counterpart of …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::SocketListenV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::SocketOpenV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::SocketPairV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::SocketSendFileV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::SocketSendToV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::SocketSendV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::SocketSetOptFlagV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::SocketSetOptSizeV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::SocketSetOptTimeV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalEntryRecordType::SocketShutdownV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalSnapshotTriggerV1::Stdin</code>\nThe archived counterpart of <code>JournalSnapshotTriggerV1::Stdin</code>\nThe resolver for <code>JournalSocktypeV1::Stream</code>\nThe archived counterpart of <code>JournalSocktypeV1::Stream</code>\nThe resolver for <code>JournalSnapshot0ClockidV1::ThreadCputimeId</code>\nThe archived counterpart of …\nThe resolver for <code>JournalThreadStartTypeV1::ThreadSpawn</code>\nThe archived counterpart of …\nThe resolver for <code>JournalSnapshotTriggerV1::Timer</code>\nThe archived counterpart of <code>JournalSnapshotTriggerV1::Timer</code>\nThe resolver for <code>JournalSnapshotTriggerV1::Transaction</code>\nThe archived counterpart of …\nTransaction\nJournal which will store the events locally in memory …\nThe resolver for <code>JournalSockoptionV1::Ttl</code>\nThe archived counterpart of <code>JournalSockoptionV1::Ttl</code>\nThe resolver for <code>JournalEntryRecordType::TtySetV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalSockoptionV1::Type</code>\nThe archived counterpart of <code>JournalSockoptionV1::Type</code>\nThe resolver for <code>JournalStreamSecurityV1::Unencrypted</code>\nThe archived counterpart of …\nThe resolver for <code>JournalAddressfamilyV1::Unix</code>\nThe archived counterpart of <code>JournalAddressfamilyV1::Unix</code>\nThe resolver for <code>JournalSnapshot0ClockidV1::Unknown</code>\nThe archived counterpart of …\nThe resolver for <code>JournalWhenceV1::Unknown</code>\nThe archived counterpart of <code>JournalWhenceV1::Unknown</code>\nThe resolver for <code>JournalAdviceV1::Unknown</code>\nThe archived counterpart of <code>JournalAdviceV1::Unknown</code>\nThe resolver for <code>JournalEpollCtlV1::Unknown</code>\nThe archived counterpart of <code>JournalEpollCtlV1::Unknown</code>\nThe resolver for <code>JournalStreamSecurityV1::Unknown</code>\nThe archived counterpart of …\nThe resolver for <code>JournalSocktypeV1::Unknown</code>\nThe archived counterpart of <code>JournalSocktypeV1::Unknown</code>\nThe resolver for <code>JournalEntryRecordType::UnlinkFileV1</code>\nThe archived counterpart of …\nThe resolver for <code>JournalAddressfamilyV1::Unspec</code>\nThe archived counterpart of <code>JournalAddressfamilyV1::Unspec</code>\nThe default for runtime is to use the unsupported journal …\nThe resolver for …\nThe archived counterpart of …\nThe resolver for <code>JournalAdviceV1::Willneed</code>\nThe archived counterpart of <code>JournalAdviceV1::Willneed</code>\nThe snapshot capturer will take a series of objects that …\nThe resolver for <code>JournalSocketShutdownV1::Write</code>\nThe archived counterpart of <code>JournalSocketShutdownV1::Write</code>\nThe resolver for <code>JournalTimeTypeV1::WriteTimeout</code>\nThe archived counterpart of <code>JournalTimeTypeV1::WriteTimeout</code>\nThe archived counterpart of <code>JournalEntryPortDelAddrV1::addr</code>\nThe archived counterpart of <code>JournalEntrySocketBindV1::addr</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntrySocketOpenV1::af</code>\nResets the journal so that reads will start from the …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntryPortAddAddrV1::cidr</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntryTtySetV1::cols</code>\nCommits the transaction Returns the number of events …\nCommits the transaction\nCommits the transaction\nCompacts the inner journal into a new journal\nCompacts the inner journal into a new journal\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nCreates a filter jounral which will write all its events …\nCreates a filter journal which will write all its events …\nThe archived counterpart of …\nDO NOT MOVE!\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntrySocketSendV1::data</code>\nThe archived counterpart of <code>JournalEpollEventCtlV1::data1</code>\nThe archived counterpart of <code>JournalEpollEventCtlV1::data2</code>\nSafety\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntryTtySetV1::echo</code>\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntryEpollCtlV1::epfd</code>\nThe archived counterpart of <code>JournalEntryEpollCtlV1::event</code>\nThe archived counterpart of <code>JournalEpollEventCtlV1::events</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntryPathSetTimesV1::fd</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntryUnlinkFileV1::fd</code>\nThe archived counterpart of <code>JournalEntryEpollCreateV1::fd</code>\nThe archived counterpart of <code>JournalEntryEpollCtlV1::fd</code>\nThe archived counterpart of <code>JournalEntryCreateEventV1::fd</code>\nThe archived counterpart of <code>JournalEntrySocketOpenV1::fd</code>\nThe archived counterpart of <code>JournalEntrySocketListenV1::fd</code>\nThe archived counterpart of <code>JournalEntrySocketBindV1::fd</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntrySocketSendToV1::fd</code>\nThe archived counterpart of <code>JournalEntrySocketSendV1::fd</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEpollEventCtlV1::fd</code>\nThe archived counterpart of <code>JournalEntrySocketPairV1::fd1</code>\nThe archived counterpart of <code>JournalEntrySocketPairV1::fd2</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntrySocketSendV1::flags</code>\nFlushes the data to disk or network\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new journal from a buffer\nCreate a new journal from a file\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntryTtySetV1::height</code>\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntrySetThreadV1::id</code>\nThe archived counterpart of <code>JournalEntryCloseThreadV1::id</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntryPortRouteDelV1::ip</code>\nThe archived counterpart of <code>JournalIpCidrV1::ip</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntrySetThreadV1::layout</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nCreates a journal which will automatically correct …\nCreates a compacting transactional journal which will hold …\nCreates a transactional journal which will hold events in …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntryEpollCtlV1::op</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntryUnlinkFileV1::path</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>JournalIpCidrV1::prefix</code>\nThe archived counterpart of <code>JournalEntrySocketOpenV1::pt</code>\nThe archived counterpart of <code>JournalEpollEventCtlV1::ptr</code>\nReturns a stream of snapshot objects that the runtime will …\nUNSAFE: This method uses unsafe operations to remove the …\nThe archived counterpart of …\nRepresents the journal entry\nOffset of the end of the entry\nOffset into the journal where this entry exists\nRolls back the transaction and aborts its changes Returns …\nRolls back the transaction and aborts its changes\nRolls back the transaction and aborts its changes\nThe archived counterpart of <code>JournalEntryTtySetV1::rows</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nSplits the journal into a read and write side\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntrySetThreadV1::start</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntryTtySetV1::stdin_tty</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntryPortBridgeV1::token</code>\nThe archived counterpart of <code>JournalEntrySnapshotV1::trigger</code>\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nThe archived counterpart of <code>JournalEntrySocketOpenV1::ty</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>JournalEntryTtySetV1::width</code>\nTakes in a stream of snapshot log entries and saves them …\nThe archived counterpart of …\nThe archived counterpart of …\nPermission denied.\nAdd an entry to the interest list of the epoll file …\nAddress in use.\nAddress not available.\nFile or memory access pattern advisory information.\nAddress family not supported.\nResource unavailable, or operation would block.\nConnection already in progress.\nBad file descriptor.\nBad message.\nBorrowed data.\nDevice or resource busy.\nA cheaply cloneable and sliceable chunk of contiguous …\nOperation canceled.\nNo child processes.\nConnection aborted.\nConnection refused.\nConnection reset.\nA clone-on-write smart pointer.\nResource deadlock would occur.\nRemove (deregister) the target file descriptor fd from the …\nDestination address required.\nMathematics argument out of domain of function.\nThe application expects that it will not access the …\nReserved.\nEpoll operation.\nError codes returned by functions. Not all of these error …\nFile exists.\nBad address.\nFile too large.\nA file descriptor handle.\nFile descriptor flags.\nNon-negative file size or length of a region within a file.\nWhich file time attributes to adjust. TODO: wit appears to …\nA temporary handle to a <code>FunctionEnv</code>.\nHost is unreachable.\nIdentifier removed.\nIllegal byte sequence.\nOperation in progress.\nInterrupted function.\nInvalid argument.\nI/O error.\nSocket is connected.\nIs a directory.\nThe journal effector is an adapter that will be removed in …\nToo many levels of symbolic links.\nTrait for the <code>Memory32</code> and <code>Memory64</code> marker types.\nMemory access violation.\nFile descriptor value too large.\nToo many links.\nChange the settings associated with fd in the interest …\nThe store-wide monotonic clock, which is defined as a …\nMessage too large.\nReserved.\nAn RAII implementation of a “scoped lock” of a mutex. …\nFilename too long.\nType used to pass this value as an argument or return …\nNetwork is down.\nConnection aborted by network.\nNetwork unreachable.\nToo many files open in system.\nNo buffer space available.\nNo such device.\nNo such file or directory.\nExecutable file format error.\nNo locks available.\nReserved.\nNot enough space.\nNo message of the desired type.\nProtocol not available.\nThe application expects to access the specified data once …\nThe application has no advice to give on its behavior with …\nNo space left on device.\nFunction not supported.\nExtension: Capabilities insufficient.\nThe socket is not connected.\nNot a directory or a symbolic link to a directory.\nDirectory not empty.\nState not recoverable.\nNot a socket.\nNot supported, or operation not supported on socket.\nInappropriate I/O control operation.\nNo such device or address.\nOne value used for counting.\nType used to represent an offset into a memory. This is <code>u32</code>…\nOpen flags used by <code>path_open</code>. TODO: wit appears to not …\nValue too large to be stored in data type.\nOwned data.\nPrevious owner died.\nOperation not permitted.\nBroken pipe.\nThe CPU-time clock associated with the current process.\nProtocol error.\nProtocol not supported.\nProtocol wrong type for socket.\nThe application expects to access the specified data in a …\nA (half-open) range bounded inclusively below and …\nResult too large.\nThe clock measuring real time. Time value zero corresponds …\nFile descriptor rights, determining which actions may be …\nRead-only file system.\nThe application expects to access the specified data …\nCannot send after socket shutdown.\nIdentifiers for clocks, snapshot0 version.\nInvalid seek.\nNo such process.\nReserved.\nNo error occurred. System call completed successfully.\nA measurement of the system clock, useful for talking to …\nThe CPU-time clock associated with the current thread.\nConnection timed out.\nTimestamp in nanoseconds.\nArgument list too long.\nText file busy.\nAn anchor in time which can be used to create new …\nThe clock type is not known.\nAn unknown error has occured\nThe application expectations are unknown.\nUnknown.\nA zero-cost type that represents a pointer to something in …\nThe application expects to access the specified data in …\nCross-device link.\nZero value used for <code>WasmPtr::is_null</code>.\nPanics\nSafety\nSafety\nThis will take the supplied stacks and apply them to the …\nReturn early with an error.\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nReturns <code>true</code> if <code>item</code> is contained in the range.\nReturns the amount of time elapsed from an earlier point …\nReturns the difference from this system time to the …\nThe upper bound of the range (exclusive).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nTrue if the memory is 64-bit\nReturns <code>true</code> if the range contains no items.\nMakes a <code>MappedMutexGuard</code> for a component of the borrowed …\nConvert a <code>Native</code> to an <code>Offset</code>.\nReturns the system time corresponding to “now”.\nConvert an <code>Offset</code> to a <code>Native</code>.\nRuns the work in the background via the task managers …\nThe lower bound of the range (inclusive).\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nMakes a <code>MappedMutexGuard</code> for a component of the borrowed …\n<code>ToString::to_string</code>, but without panic on OOM.\nThis value is tweaked to minimize the amount of journal …\nReads a string from Wasm memory.\nLike the <code>try!</code> macro or <code>?</code> syntax: returns the value if the …\nLike <code>wasi_try</code> but converts a <code>MemoryAccessError</code> to a …\nLike <code>wasi_try</code> but converts a <code>MemoryAccessError</code> to a …\nLike <code>wasi_try</code> but converts a <code>MemoryAccessError</code> to a …\nLike the <code>try!</code> macro or <code>?</code> syntax: returns the value if the …\nUsed to read the headers from the HTTP server\nUsed to feed the bytes into the request itself\nUsed to receive the bytes from the HTTP server\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOS task management for processes and threads.\nA command available to an OS environment.\nRetrieve the command as as a <code>std::any::Any</code> reference.\nExecutes the command.\nExecute a command.\nDetermine if a command exists at the given path.\nReturns the argument unchanged.\nGet a command by its path.\nCalls <code>U::from(self)</code>.\nReturns the canonical name of the command.\nRegister a command.\nRegister a command at a custom path.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA handle that allows awaiting the termination of a task, …\nA handle that allows awaiting the termination of a task, …\nPolls to check if the process is ready yet to receive …\nRepresents the CPU backoff properties for a process which …\nThe amount of CPU backoff time we are currently waiting\nThe amount of CPU backoff time we are currently waiting\nSeed used to register CPU release wakers\nReferenced list of wakers that will be triggered when the …\nWhen the backoff is reset the cool-off period will keep …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe inner protected region of the process with a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum amount of CPU backoff time before it starts capping\nAmount of time the CPU should cool-off after exiting run …\nHow long should the CPU backoff for\nID used to unregister the wakers\nGuard that ensures the <code>WasiControlPlane</code> task counter is …\nThe maximum number of execution tasks has been reached.\nGet the current count of active tasks (threads).\nReturns the configuration for this control plane\nFlag that indicates if asynchronous threading is enables …\nEnables an exponential backoff of the process CPU usage …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates a new process ID\nGets a reference to a running process\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTotal number of tasks (processes + threads) that can be …\nMutable state.\nCreates a new process\nSeed used to generate process ID’s\nThe processes running on this machine\nRegister a new task.\nTotal number of active tasks (threads) across all …\n<code>ToString::to_string</code>, but without panic on OOM.\nThe maximum number of tasks.\nNo checkpoint will take place and the process should just …\nThe process needs to take a snapshot of the memory and …\nRepresents a process running within the compute state …\nRepresents a freeze of all threads to perform some action …\nRepresents the ID of a sub-process\nReturns the number of active threads for this process\nRepresents all the backoff properties for this process …\nCheckpoints the process which will cause all other threads …\nRepresents a checkpoint which blocks all the threads and …\nList of all the children spawned from this thread\nReference back to the compute engine\nNumber of tokens that are currently active and thus the …\nDisables the journaling functionality\nIf true then the journaling will be disabled after the …\nReference to the exit code for the main thread\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a reference to a particular thread\nThe inner protected region of the process with a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWaits until the process is finished.\nWaits for any of the children to finished\nWaits for all the children to be finished\nGains access to the process internals\nIf a checkpoint has been started this will block the …\nHash of the module that this process is using\nCreates a a thread and returns it\nCreates a a thread and returns it\nList of all the children spawned from this thread\nGets the process ID of this process\nUnique ID of this process\nUnique ID of this process\nGets the process ID of the parent process\nSignals one of the threads every interval\nSignals that will be triggered at specific intervals\nSignals all the threads in this process\nSignals all the threads in this process\nSignals a particular thread in the process\nTakes a snapshot of the process\nTakes a snapshot of the process and disables journaling …\nTakes a snapshot of the process and shuts it down after …\nThe snapshot memory significantly reduce the amount of …\nList of situations that the process will checkpoint on\nStop running once a checkpoint is taken\nIf true then the process will stop running after the next …\nTerminate the process and all its threads\nNumber of threads running for this process\nThe threads that make up this process\nAttempts to join on the process\n<code>ToString::to_string</code>, but without panic on OOM.\nWait for the checkout process to finish\nWait for the checkout process to finish\nNumber of threads waiting for children to exit\nNumber of threads waiting for children to exit\nAny wakers waiting on this process (for example for a …\nSignal handles…well…they process signals\nReturns the argument unchanged.\nReturns the argument unchanged.\nTime between the signals\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLast time that a signal was triggered\nFlag that indicates if the signal should repeat\nProcesses a signal\nSignal that will be raised\n<code>ToString::to_string</code>, but without panic on OOM.\nA handle that allows awaiting the termination of a task, …\nA handle that allows awaiting the termination of a task, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the task status is <code>Finished</code>.\nReturns <code>true</code> if the task status is <code>Pending</code>.\nReturns <code>true</code> if the task status is <code>Running</code>.\nPolls to check if the process is ready yet to receive …\nMarks the task as finished.\nMarks the task as finished.\nSets the signal handler used for this owned task\nRetrieve the current status.\n<code>ToString::to_string</code>, but without panic on OOM.\nWait until the task finishes.\nAttaches a signal handler\nThis will happen if WASM is running in a thread has not …\nRepresents a linked list of stack snapshots\nRepresents a linked list of stack snapshots\nRepresents the memory layout of the parts that the thread …\nRepresents a running thread which allows a joiner to wait …\nRepresents the ID of a WASI thread\nA guard that ensures a thread is marked as terminated when …\nAdds a stack snapshot and removes dead ones\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a snapshot that was previously addedf\nPiece of memory that is marked as none readable/writable …\nReturns true if a rewind of a particular type has been …\nReturns all the signals that are waiting to be processed\nReturns all the signals that are waiting to be processed\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads a flag that determines if this thread is currently …\nReads a flag that determines if this thread is currently …\nReturns true if this thread is the main thread\nWaits until the thread is finished or the timeout is …\nGet a join handle to watch the task status.\nGets the memory layout for this thread\nMemory stack used to restore the memory stack (thing that …\nReturns the process ID\nReturns all the signals that are waiting to be processed\nReturns all the signals that are waiting to be processed\nGeneric serialized object passed back to the rewind …\nSets a flag that tells others that this thread is currently\nSets a flag that tells others if this thread is currently …\nGets the memory layout for this thread\nGets or sets the exit code based of a signal that was …\nSets that a rewind will take place\nMarks the thread as finished (which will cause anyone that …\nAdds a signal for this thread to process\nThis is the bottom part of the stack (anything more below …\nTotal size of the stack\nThis is the top part of the stack (stacks go backwards)\nPops any rewinds that need to take place\nGets the thread start type for this thread\nReturns the thread ID\nPointer to the thread’s TLS (Thread Local Storage) …\nAttempts to join on the thread\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nWaits for a signal to arrive\nProvides access to a TTY.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nResets the values\nRetrieve the current TTY state.\nSet the TTY state.\n<code>TtyBridge</code> implementation for Unix systems.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents the work that will be done when a thread goes …\nNo value.\nTrait that will be invoked after the rewind has finished …\nThe rewind state after a deep sleep\nSome value of type <code>T</code>.\nReturns the serialized object that is returned on the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFlag that indicates if this rewind is 64-bit or 32-bit …\nLayout of the memory,\nMemory stack used to restore the stack trace back to where …\nState that the thread will be rewound to\nCall stack used to restore the stack trace back to where …\nDescribes the type of thread start\nAll the global data stored in the store\nThis is the work that will be performed before the thread …\nA directory that should be mapped from the host filesystem …\nTrait that all runners have to implement\nThe new alias.\nReturns whether the Runner will be able to run the <code>Command</code>\nThe absolute path specifying where the host directory …\nThe absolute path for a directory on the host filesystem.\nRun a command.\nThe original command.\nWebC container support for running WASI modules\nA handle to an <code>Abortable</code> task.\nThis factory will store and reuse instances between …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis factory will store and reuse instances between …\nReturns the argument unchanged.\nReturns the argument unchanged.\nOnce the instance is running it will\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe shared object that manages the instantiaion of WASI …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe base URI used by a [<code>Dcgi</code>] runner.\nAdd an argument to the WASI executable’s command-line …\nAdd multiple arguments to the WASI executable’s …\nSet callbacks that will be triggered at various points in …\nExpose an environment variable to the guest.\nExpose multiple environment variables to the guest.\nForward all of the host’s environment variables to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nAdd a package that should be available to the instance at …\nAdd packages that should be available to the instance at …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis factory will store and reuse instances between …\nThis factory will store and reuse instances between …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHandler which will process DProxy requests\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWrites bytes asynchronously.\nThe context of an asynchronous task.\nA future represents an asynchronous computation obtained …\nThe type of value produced on completion.\nRepresents that a value is not ready yet.\nA pointer which pins its pointee in place.\nIndicates whether a value is available or if the current …\nRepresents that a value is immediately ready.\nThe URI component of a request.\nGet the authority of this <code>Uri</code>.\nCreates a new builder-style object to manufacture a <code>Uri</code>.\nReturns the argument unchanged.\nAttempt to convert a <code>Bytes</code> buffer to a <code>Uri</code>.\nAttempt to convert a <code>Parts</code> into a <code>Uri</code>.\nConvert a <code>Uri</code> from a static string.\nGet the host of this <code>Uri</code>.\nCalls <code>U::from(self)</code>.\nConvert a <code>Uri</code> into <code>Parts</code>.\nDetermines if this writer has an efficient …\nGet the path of this <code>Uri</code>.\nReturns the path &amp; query components of the Uri\nAttempts to resolve the future to a final value, …\nAttempts to flush the object, ensuring that any buffered …\nInitiates or attempts to shut down this writer, returning …\nAttempt to write bytes from <code>buf</code> into the object.\nLike <code>poll_write</code>, except that it writes from a slice of …\nGet the port part of this <code>Uri</code>.\nGet the port of this <code>Uri</code> as a <code>u16</code>.\nGet the query string of this <code>Uri</code>, starting after the <code>?</code>.\nGet the scheme of this <code>Uri</code>.\nGet the scheme of this <code>Uri</code> as a <code>&amp;str</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA Connector for the WASM processes behind a socket.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a socket that can be used to send and receive ICMP …\nCreates a low level socket that can read and write …\nOpens a UDP socket that listens on a specific IP and Port …\nBridges this local network with a remote network, which is …\nOpens a TCP connection to a particular destination IP …\nAcquires an IP address on the network and configures the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nAdds a default gateway to the routing table\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdds a static IP address to the interface with a netmask …\nClears all the assigned IP addresses for this interface\nLists all the IP addresses currently assigned to this …\nRemoves a static (or dynamic) IP address from the interface\nListens for TCP connections on a specific IP and Port …\nReturns the hardware MAC address for this interface\nPerforms DNS resolution for a specific hostname\nAdds a specific route to the routing table\nClears the routing table for this interface\nLists all the routes defined in the routing table for this …\nRemoves a routing rule from the routing table\nDisconnects from the remote network essentially unbridging …\nThe base URI used by a [<code>DProxy</code>] runner.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrait that all runners have to implement\nReturns whether the Runner will be able to run the <code>Command</code>\nRun a command.\nReturns the current entry function for this <code>WasiRunner</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the current arguments for this <code>WasiRunner</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a new <code>WasiRunner</code>.\nBuilder method to provide CLI args to the runner\nOverride the directory the WASIX instance will start in.\nBuilder method to set the name of the entry function for …\nBuilder method to provide environment variables to the …\nAdd a package that should be available to the instance at …\nAdd packages that should be available to the instance at …\nMount a <code>FileSystem</code> instance at a particular location.\nA directory that should be mapped from the host filesystem …\nThe new alias.\nHACK: We need this so users can mount host directories at …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe absolute path specifying where the host directory …\nThe absolute path for a directory on the host filesystem.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe original command.\nA handle to an <code>Abortable</code> task.\nCallbacks that are triggered at various points in the …\nConfiguration used for creating a new environment\nResult of a create operation on a new environment\nConfiguration used for reusing an new environment\nAbort the <code>Abortable</code> stream/future associated with this …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nChecks whether <code>AbortHandle::abort</code> was <em>called</em> on any …\nCreates an (<code>AbortHandle</code>, <code>AbortRegistration</code>) pair which can …\nCallbacks that are triggered at various points in the …\nConfiguration used for creating a new environment\nResult of a create operation on a new environment\nConfiguration used for reusing an new environment\nCreate the WASI environment\nCreate the WASI environment\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nData was written to stderr by an instance.\nData was written to stderr by an instance.\nReading from stderr failed.\nReading from stderr failed.\nRecycle the WASI environment\nRecycle the WASI environment\nA callback that is called whenever the server starts.\nA callback that is called whenever the server starts.\nThe shared object that manages the instantiaion of WASI …\nRead the instance’s stderr, taking care to preserve …\nDrive the request to completion by streaming the request …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdd an argument to the WASI executable’s command-line …\nAdd multiple arguments to the WASI executable’s …\nSet callbacks that will be triggered at various points in …\nExpose an environment variable to the guest.\nExpose multiple environment variables to the guest.\nForward all of the host’s environment variables to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nAdd a package that should be available to the instance at …\nAdd packages that should be available to the instance at …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRuntime that allows for certain things to be overridden …\nRuntime components used when running WebAssembly programs.\nThe snapshot capturer takes and restores snapshots of the …\nGet a <code>wasmer::Engine</code> for module compilation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a custom HTTP client\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoad the module for a command.\nSync version of <code>Self::load_command_module</code>.\nLoad a a Webassembly module, trying to use a pre-compiled …\nLoad a a Webassembly module, trying to use a pre-compiled …\nLoad a a Webassembly module, trying to use a pre-compiled …\nCache pre-compiled <code>wasmer::Module</code>s.\nA cache for compiled modules.\nProvides access to all the networking related functions …\nCreate a new <code>wasmer::Store</code>.\nCallback thats invokes whenever the instance is tainted, …\nA package loader.\nThe list of all read-only journals which will be used to …\nThe package registry.\nRetrieve the active <code>VirtualTaskManager</code>.\nGet access to the TTY used by the environment.\nThe list of writable journals which will be appended to\nPossible errors that may occur during <code>ModuleCache</code> …\n<code>FallbackCache</code> is a combinator for the <code>ModuleCache</code> trait …\nA cache that saves modules to a folder on the host …\nA cache for compiled WebAssembly modules.\nThe item was not found.\nA catch-all variant for any other errors that may occur.\nA <code>ModuleCache</code> based on a DashMap&lt;ModuleHash, Module&gt;.\nA cache that will cache modules in a thread-local variable.\nCheck if a module is present in the cache.\nGet a <code>ModuleCache</code> which should be good enough for most …\nLoad a module based on its hash.\nSave a module so it can be retrieved with …\n<code>FallbackCache</code> is a combinator for the <code>ModuleCache</code> trait …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA cache that saves modules to a folder on the host …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nChecks if the path exists in the filesystem cache.\nLoads a module from the filesystem cache.\nSaves the module to the filesystem cache.\nA <code>ModuleCache</code> based on a DashMap&lt;ModuleHash, Module&gt;.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA cache that will cache modules in a thread-local variable.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPossible errors that may occur during <code>ModuleCache</code> …\nA cache for compiled WebAssembly modules.\nThe item was not found.\nA catch-all variant for any other errors that may occur.\nCheck if a module is present in the cache.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLoad a module based on its hash.\nSave a module so it can be retrieved with …\n<code>ToString::to_string</code>, but without panic on OOM.\nChain a second <code>ModuleCache</code> that will be used as a fallback …\nChain a second <code>ModuleCache</code> that will be used as a fallback …\nA <code>PackageLoader</code> implementation which will always error out.\nGiven a fully resolved package, load it into memory for …\nLoad a resolved package into memory so it can be executed.\nThe builtin <code>PackageLoader</code> that is used by the <code>wasmer</code> CLI …\nCompute the image hash and fail on a mismatch.\nDefines how to validate package hash integrity.\nDo not validate anything. Best for performance.\nRemove images from the cache if the filename doesn’t …\nCompute the image hash and produce a trace warning on hash …\nJust emit a warning for all images where the filename doesn…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInsert a container into the in-memory hash.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemove entries from the cache that do not pass the …\nScan all the cached webc files and invoke the callback for …\nA mapping from hostnames to tokens\n<code>ToString::to_string</code>, but without panic on OOM.\nValidate image contents with the specified validation mode.\nValidate image contents with the specified validation mode.\nValidate that the cached image file names correspond to …\nSet the validation mode to apply after downloading an …\nAdd an API token that will be used whenever sending …\nThe maximum number of packages that will be loaded in …\nA <code>FileSystem</code> implementation that lets you map the <code>Path</code> to …\nHow many bytes worth of files does a directory contain?\nExtract WebAssembly features from atom metadata if …\nGiven a set of <code>ResolvedFileSystemMapping</code>s and the <code>Container</code>…\nBuild the filesystem for webc v2 packages.\nBuild the filesystem for webc v3 packages.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHACK: Some older packages like <code>sharrattj/bash</code> and …\nGiven a <code>webc::metadata::Command</code>, figure out which atom it …\nGiven a fully resolved package, load it into memory for …\nConvert WebAssembly feature annotations to a Features …\nLoad a resolved package into memory so it can be executed.\nA <code>PackageLoader</code> implementation which will always error out.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nA <code>Source</code> which will resolve dependencies by pinging a …\nA dependency constraint.\nAn acyclic, directed dependency graph.\nInformation used when retrieving a package.\nAn edge in the <code>DependencyGraph</code>.\nA <code>Source</code> that knows how to query files on the filesystem.\nA <code>Source</code> that tracks packages in memory.\nA <code>Source</code> that works by querying multiple <code>Source</code>s in …\nA node in the <code>DependencyGraph</code>.\nInformation about a package’s contents.\nSome metadata a <code>Source</code> can provide about a package without …\nA package that has been resolved, but is not yet runnable.\nSomething that packages can be downloaded from.\nA <code>Source</code> which can query arbitrary packages on the …\nThe SHA-256 hash of a <code>*.webc</code> file.\nThe name used by the package when referring to this …\nCommands this package exposes to the outside world.\nIf encountered, treat <code>QueryError::NoMatches</code> as a non-fatal …\nIf encountered, treat <code>QueryError::NotFound</code> as a non-fatal …\nIf encountered, treat <code>QueryError::Unsupported</code> as a …\nAny dependencies this package may have.\nThe name of the package this volume comes from (current …\nInformation about how the package is distributed.\nThe name of a <code>Command</code> that should be used as this package…\nA mapping from paths to the volumes that should be mounted …\nMerge results from all sources into a single result.\nWhere the volume should be mounted within the resulting …\nThe item’s original name.\nThe path of the mapped item within its original volume.\nThe package this item comes from.\nAsk this source which packages would satisfy a particular …\nGiven the <code>PackageInfo</code> for a root package, resolve its …\nThe volume to be mounted.\nA URL that can be used to download the <code>*.webc</code> file.\nA SHA-256 checksum for the <code>*.webc</code> file.\nA <code>Source</code> which will resolve dependencies by pinging a …\nA local cache for package queries.\nCache entry for a webc lookup by hash.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHas the package been archived?\nCache query results locally.\nA <code>Source</code> that knows how to query files on the filesystem.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA <code>Source</code> that tracks packages in memory.\nAdd a new <code>PackageSummary</code> to the <code>InMemorySource</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRecursively walk a directory, adding all valid WEBC files …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the number of packages in the source.\nA dependency constraint.\nInformation used when retrieving a package.\nInformation about a package’s contents.\nSome metadata a <code>Source</code> can provide about a package without …\nThe SHA-256 hash of a <code>*.webc</code> file.\nCommands this package exposes to the outside world.\nAny dependencies this package may have.\nThe name of the package this volume comes from (current …\nThe name of a <code>Command</code> that should be used as this package…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhere the volume should be mounted within the resulting …\nThe path of the mapped item within its original volume.\nParse a sha256 hash from a hex-encoded string.\nGenerate a new <code>WebcHash</code> based on the SHA-256 hash of some …\n<code>ToString::to_string</code>, but without panic on OOM.\nThe volume to be mounted.\nA URL that can be used to download the <code>*.webc</code> file.\nA SHA-256 checksum for the <code>*.webc</code> file.\nA <code>Source</code> that works by querying multiple <code>Source</code>s in …\nIf encountered, treat <code>QueryError::NoMatches</code> as a non-fatal …\nIf encountered, treat <code>QueryError::NotFound</code> as a non-fatal …\nIf encountered, treat <code>QueryError::Unsupported</code> as a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMerge results from all sources into a single result.\nOverride the strategy used when a <code>Source</code> returns a …\nAn acyclic, directed dependency graph.\nAn edge in the <code>DependencyGraph</code>.\nA node in the <code>DependencyGraph</code>.\nA package that has been resolved, but is not yet runnable.\nThe name used by the package when referring to this …\nInformation about how the package is distributed.\nA mapping from paths to the volumes that should be mounted …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet an iterator over all the packages in this dependency …\nThe item’s original name.\nThe package this item comes from.\nGet a mapping from <code>PackageId</code>s to <code>NodeIndex</code>s.\nVisualise this graph as a DOT program.\nAs a workaround for the lack of “proper” dependency …\nReturns the argument unchanged.\nReturns the argument unchanged.\nAll node indices, in topologically sorted order.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGiven the <code>PackageInfo</code> for a root package, resolve its …\nGiven some <code>DiscoveredPackages</code>, figure out how the …\n<code>ToString::to_string</code>, but without panic on OOM.\nSomething that packages can be downloaded from.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRun <code>Source::query()</code> and get the <code>PackageSummary</code> for the …\nRun <code>Source::query()</code> and get the <code>PackageSummary</code> for the …\nAsk this source which packages would satisfy a particular …\n<code>ToString::to_string</code>, but without panic on OOM.\nPolyfill for <code>Url::from_file_path()</code> that works on …\nClassification of how valid an item is based on filesystem …\nAn item in the cache.\nAn item isn’t in the cache, but could be cached later on.\nThe item isn’t in the cache.\nThe cached item might be invalid, but it has an ETag we …\nThe cached item exists on disk, but we weren’t able to …\nA <code>Source</code> which can query arbitrary packages on the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDownload a package and cache it locally.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the period after which an item should be marked as “…\nDescribes whether a new memory should be created (and, in …\nCallback that will be invoked\nRepresents a WASM task that will be executed on a …\nCallback that will be invoked\nThe properties passed to the task\nCallback that will be invoked\nThe properties passed to the task\nA task executor backed by a thread pool.\nGeneric utility methods for VirtualTaskManager\nBuild a new Webassembly memory.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe instance will be recycled back to this function when …\nPause the current thread of execution.\nRuns the work in the background via the task managers …\nSchedule a blocking task to run on the threadpool, …\nRun a blocking operation on the thread pool.\nRun an asynchronous operation on the thread pool.\nRun a blocking WebAssembly operation on the thread pool.\nReturns the amount of parallelism that is possible on this …\nThe result of the asynchronous trigger serialized into …\nA task manager that uses tokio to spawn tasks.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee <code>VirtualTaskManager::sleep_now</code>.\nSee <code>VirtualTaskManager::task_dedicated</code>.\nSee <code>VirtualTaskManager::task_shared</code>.\nSee <code>VirtualTaskManager::task_wasm</code>.\nSee <code>VirtualTaskManager::thread_parallelism</code>.\nall the rights enabled\nStructure that holds the state of BUS calls to this …\nRepresents a futex which will make threads wait for …\nStores the state of the futexes\nTop level data type containing all* the state with which …\nBuilder system for configuring a <code>WasiState</code> and creating it.\nForking the WasiState is used when either fork or vfork is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a reference to the waker that can be used for …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLinker for loading and linking dynamic modules at runtime. …\nWill wait until either the reactor is triggered or the …\nWakes one of the reactors thats currently waiting\nInternal helper function to get a standard device handle. …\nGet the <code>VirtualFile</code> object at stderr\nGet the <code>VirtualFile</code> object at stdin\nGet the <code>VirtualFile</code> object at stdout\nBuilder for preopened directories.\nThe built version of <code>PreopenDirBuilder</code>\nBuilder API for configuring a <code>WasiEnv</code> environment needed …\nError type returned when bad data is given to …\nAdd an argument.\nAdd multiple arguments.\nAdd an environment variable pair.\nAdd multiple environment variable pairs.\nPreopen a directory with a different name exposed to the …\nMap an atom to a local binary\nMaps a series of atoms to local binaries.\nPreopen a directory and configure it.\nAdds a preopen a directory\nSpecifies one or more journal files that Wasmer will use …\nAdd a signal handler override.\nAdd multiple signal handler overrides.\nAdds a container this module inherits from.\nSpecifies one or more journal files that Wasmer will use …\nMake this preopened directory appear to the WASI program …\nAdd an argument.\nAdd multiple arguments.\nCommand line arguments.\nAttaches a ctrl-c handler which will send signals to the …\nConsumes the <code>WasiEnvBuilder</code> and produces a <code>WasiEnvInit</code>, …\nSet create permissions affecting files in the directory\nPoint the preopened directory to the path given by <code>po_dir</code>\nSets the wasmer engine and overrides the default; only …\nName of entry function. Defaults to running <code>_start</code> if not …\nAdd an environment variable pair.\nAdd multiple environment variable pairs.\nEnvironment variables.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the FileSystem to be used with this WASI instance.\nGet a reference to the configured arguments.\nGet a mutable reference to the configured arguments.\nGet a reference to the configured environment variables.\nGet a mutable reference to the configured environment …\nGet a reference to the configured signal handler overrides.\nGet a mutable reference to the configured signalironment …\nAdds a package that is already included in the …\nAdds packages that is already included in the …\nConsumes the <code>WasiEnvBuilder</code> and produces a <code>WasiEnvInit</code>, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMap an atom to a local binary\nMaps a series of atoms to the local binaries\nList of host commands to map into the WASI instance.\nPreopen a directory with a different name exposed to the …\nPreopen directorys with a different names exposed to the …\nCreates an empty <code>WasiEnvBuilder</code>.\nCreate an empty builder\nPreopen a directory and configure it.\nPreopen a directory\nPreopen multiple directories.\nPreopen the given directories from the Virtual FS.\nPre-opened directories that will be accessible from WASI.\nSet read permissions affecting files in the directory\nSets the WASI runtime implementation and overrides the …\nSets a new sandbox FileSystem to be used with this WASI …\nSets the module hash for the running process. This ensures …\nOverwrite the default WASI <code>stderr</code>, if you want to hold on …\nOverwrite the default WASI <code>stdin</code>, if you want to hold on …\nOverwrite the default WASI <code>stdout</code>, if you want to hold on …\nConfigure the WASI filesystem before running.\nAdd a signal handler override.\nAdd multiple signal handler overrides.\nSignals that should get their handler overridden.\nOverwrite the default WASI <code>stderr</code>, if you want to hold on …\nOverwrite the default WASI <code>stdin</code>, if you want to hold on …\nOverwrite the default WASI <code>stdout</code>, if you want to hold on …\n<code>ToString::to_string</code>, but without panic on OOM.\nAdds a container this module inherits from.\nAdds a list of other containers this module inherits from.\nList of webc dependencies to be injected.\nPre-opened virtual directories that will be accessible …\nSet write permissions affecting files in the directory\nThe environment provided to the WASI imports.\nData required to construct a <code>WasiEnv</code>.\nReturns the active journal or fails with an error\nReturns the number of active threads\nBinary factory attached to this environment\nCleans up all the open files (if this is the main thread)\nConstruct a new <code>WasiEnvBuilder</code> that allows customizing an …\nWhether to call the <code>_initialize</code> function in the WASI …\nIndicates if the calling environment is capable of deep …\nReturns true if this module is capable of deep sleep …\nFlag that indicates the cleanup of the environment is to …\nCalled by most (if not all) syscalls to process pending …\nIs this environment capable and setup for deep sleeping\nEnables an exponential backoff of the process CPU usage …\nEnables the snap shotting functionality\nHelper function to ensure the module isn’t dynamically …\nIndicates if extra tracing should be output\nForking the WasiState is used when either fork or vfork is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnsafe:\nUnsafe:\nReturns true if the environment has an active journal\nReturns true if a particular snapshot trigger is enabled\nProviders safe access to the initialized part of WasiEnv …\nInner functions and references that are loaded before the …\nProvides safe access to the initialized part of WasiEnv …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this thread can go into a deep sleep\nRepresents the layout of the memory\nProviders safe access to the memory (it must be …\nProviders safe access to the memory (it must be …\nAccesses the virtual networking implementation\nCleans up all the open files (if this is the main thread)\nList of the handles that are owned by this context (this …\nSeed used to rotate around the events returned by …\nReturns true if a particular snapshot trigger is enabled\nRepresents the process this environment is attached to\nPorcesses any signals that are batched up\nPorcesses any signals that are batched up or any forced …\nRe-initializes this environment so that it can be executed …\nFlag that indicates if the environment is currently …\nReturns a copy of the current runtime implementation for …\nImplementation of the WASI runtime.\nOverrides the runtime implementation for this environment\nReturns an exit code if the thread or process has been …\nReturns true if the process should perform snapshots or not\nShould stdio be skipped when bootstrapping this module …\nSkip writes to stdout and stderr when bootstrapping from a …\nIndicates triggers that will cause a snapshot to be taken\nGet the WASI state\nShared state of the WASI system. Manages all the data that …\nInternal helper function to get a standard device handle. …\nGet the <code>VirtualFile</code> object at stderr\nGet the <code>VirtualFile</code> object at stdin\nGet the <code>VirtualFile</code> object at stdout\nStop running after the first snapshot is taken\nReturns a copy of the current tasks implementation for …\nRepresents the thread this environment is attached to\nTries to clone the instance from this environment, but …\nProviders safe access to the initialized part of WasiEnv\nProviders safe access to the initialized part of WasiEnv …\nProviders safe access to the memory (it must be …\nCopy the lazy reference so that when it’s initialized …\nProviders safe access to the memory (it must be …\nMake all the commands in a <code>BinaryPackage</code> available to the …\nGiven a list of packages, load them from the registry and …\nRepresents a fork of the process that is currently in play\nReturns true if this WASM process will need and try to use …\nThe default stack size for WASIX - the number itself is …\nBootstraps this main thread and context with any journals …\nGets a reference to the WasiEnvironment\nGets a mutable- reference to the host state in this …\nReturns the argument unchanged.\nGet an <code>Imports</code> for a specific version of WASI detected in …\nLike <code>import_object</code> but containing all the WASI versions …\nInitializes the WasiEnv using the instance exports (this …\nInitializes the WasiEnv using the instance exports and a …\nCalls <code>U::from(self)</code>.\nSafety\nFunction not found at the index\nNo indirect function table available\nThe table does not contain functions\nTable index out of bounds\nVarious <code>TypedFunction</code> and <code>Global</code> handles for an active …\nasyncify_get_state(): call this to get the current value …\nasyncify_start_rewind(data : i32): call this to start …\nasyncify_start_unwind(data : i32): call this to start …\nasyncify_stop_rewind(): call this to note that rewinding …\nasyncify_stop_unwind(): call this to note that unwinding …\nPoints to the end of the data section\nHelper function to ensure the module isn’t dynamically …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFlag that indicates if the stack capture exports are being …\nPoints to the indirect function table\nHelper function to look up a function in the indirect …\nFunction thats invoked to initialize the WASM module (name …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if an indirect_function_table entry is reserved for …\nCan be used to get the <code>WasiModuleInstanceHandles</code> of the …\nSee comments on <code>main_module_instance_handles</code>.\nProviders safe access to the memory (it must be …\nProviders safe access to the memory (it must be …\nRepresents a reference to the memory\nCopy the lazy reference so that when it’s initialized …\nCopy the lazy reference so that when it’s initialized …\nProviders safe access to the memory (it must be …\nProviders safe access to the memory (it must be …\nRepresents the callback for signals (name = “__…\nFlag that indicates if the signal callback has been set by …\nPoints to the higher end of the stack\nPoints to the lower end of the stack\nPoints to the current location of the memory stack pointer\nMain function that will be invoked (name = “_start”)\nHelper function to get the instance handles of a static …\nSee comments on <code>static_module_instance_handles</code>.\nRepresents the callback for spawning a thread (name = “…\nPoints to the start of the TLS area\n<code>ToString::to_string</code>, but without panic on OOM.\nThis pointer provides global access to some instance …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis non-sendable guard provides memory safe access to the …\nThis provides access to the memory inside the instance\nThis non-sendable guard provides memory safe access to the …\nThis handle protects the WasiInstance and makes it …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInner functions and references that are loaded before the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe linker is responsible for loading and linking dynamic …\nAllocate a index for a closure in the indirect function …\nAllocate space on the indirect function table for the …\nTracks which slots in the function table are currently …\nSlots in the indirect function table that were allocated …\nRemove a previously allocated slot for a closure in the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if an indirect_function_table entry is reserved for …\nLoads a side module from the given path, linking it …\nCreates a new linker for the given main module. The module …\nResolves an export from the module corresponding to the …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nSomething didn’t work. ignored as input\nConnection closed. ignored as input\nData available to read\nInvalid request. ignored as input\nData available to write (will still block if data is …\nA wrapper type around Stderr that implements <code>VirtualFile</code>.\nA wrapper type around Stdin that implements <code>VirtualFile</code>.")