searchState.loadedDescShard("wasmer_wasix", 1, "A wrapper type around Stdout that implements <code>VirtualFile</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nPermission denied.\nHas the effects of both <code>Acquire</code> and <code>Release</code> together: For …\nWhen coupled with a load, if the loaded value was written …\nThe address was in use\nThe address could not be found\nAddress in use.\nAddress not available.\nFile or memory access pattern advisory information.\nAddress family not supported.\nResource unavailable, or operation would block.\nConnection already in progress.\nFile exists\nA thread-safe reference-counting pointer. ‘Arc’ stands …\nHelper trait for a value that is convertible to a <code>StoreMut</code>.\nHelper trait for a value that is convertible to a <code>StoreRef</code>.\nAn extension trait that adds utility methods to <code>AsyncSeek</code> …\nWrites bytes to a sink.\nFuture that will be polled by asyncify methods (the return …\nA boolean type which can be safely shared between threads.\nAn integer type which can be safely shared between threads.\nAn integer type which can be safely shared between threads.\nThe memory does not support atomic operations.\nThe size of an IPv4 address in bits.\nThe size of an IPv6 address in bits.\nAn IPv4 address representing the broadcast address: …\nBad file descriptor.\nBad message.\nThe fd given as a base was not a directory so the …\nThe file descriptor or file refers to a block device inode.\nA trait for borrowing data.\nBorrowed data.\nA pipe was closed\nDevice or resource busy.\nA cheaply cloneable and sliceable chunk of contiguous …\nA unique reference to a contiguous slice of memory.\nOperation canceled.\nThe file descriptor or file refers to a character device …\nNo child processes.\nThe time value of clock <code>subscription_clock::id</code> has reached …\nIdentifiers for clocks.\nA Condition Variable\nConnection aborted.\nThe connection was aborted\nThe connection request was refused\nThe connection was reset\nConnection refused.\nConnection reset.\nThe context of an asynchronous task.\nThe operation would cause the size of the memory to exceed …\nA clone-on-write smart pointer.\nResource deadlock would occur.\nUsed for immutable dereferencing operations, like <code>*v</code>.\nUsed for mutable dereferencing operations, like in <code>*v = 1;</code>.\nDestination address required.\nA reference to the offset of a directory entry.\nThe file descriptor or file refers to a directory inode.\nDirectory not Empty\nA directory entry.\nMathematics argument out of domain of function.\nThe application expects that it will not access the …\nReserved.\nA pair of pipes that are connected together.\nA <code>Duration</code> type to represent a span of time, typically …\nA view into a single entry in a map, which may either be …\nThe requested file or directory could not be found\nError codes returned by functions. Not all of these error …\nThe type returned in the event of a conversion error.\nAn event that occurred.\nThe contents of an <code>event</code> for the <code>eventtype::fd_read</code> and …\nThe contents of an <code>event</code>.\nThe state of the file descriptor subscribed to with …\nType of a subscription to an event or its occurrence.\nA nullable first-class reference to a WebAssembly …\nFile exists.\nAn <code>Extern</code> is the runtime representation of an entity that …\nA nullable <code>externref</code> value which can hold opaque data to …\nA 32-bit float.\nA 64-bit float.\nBad address.\nFile too large.\nFile descriptor <code>subscription_fd_readwrite::fd</code> has data …\nFile descriptor <code>subscription_fd_readwrite::fd</code> has capacity …\nFile descriptor flags.\nFile descriptor attributes.\nNon-negative file size or length of a region within a file.\nThe type of a file descriptor or file.\nWill return the result of the invocation\nIndicates that asyncify callback finished and the caller …\nError type for external users\nWhich file time attributes to adjust. TODO: wit appears to …\nA nullable first-class reference to a WebAssembly function.\nA WebAssembly <code>function</code> instance.\nAn external <code>Function</code>.\nAn opaque reference to a function environment. The …\nA temporary handle to a <code>FunctionEnv</code>.\nA user defined error value, used for error cases not …\nA WebAssembly <code>global</code> instance.\nAn external <code>Global</code>.\nA hash map implemented with quadratic probing and SIMD …\nA hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.\nMemory access is outside heap bounds.\nHost is unreachable.\nA 32-bit integer.\nA 64-bit integer.\nSomething failed when doing IO. These errors can generally …\nIdentifier removed.\nIllegal byte sequence.\nThe error type for errors that can never happen.\nOperation in progress.\nA WebAssembly Instance is a stateful, executable instance …\nThe operation was interrupted before it could finish\nObjects that can be converted into an <code>Waker</code>. This trait is …\nInterrupted function.\nInvalid argument.\nInvalid internal data, if the argument data is invalid, …\nThe fd given was not usable\nThe provided data is invalid\nInvalid memory was provided.\nWill call the function again\nI/O error.\nAn IP address, either IPv4 or IPv6.\nAn IPv4 address.\nAn IPv6 address.\nSocket is connected.\nIs a directory.\nAn IPv4 address with the address pointing to localhost: …\nAn IPv6 address representing localhost: <code>::1</code>.\nA thread local storage key which owns its contents.\nThe filesystem has failed to lock a resource.\nLong size used by checkpoints\nToo many levels of symbolic links.\nThe maximum duration.\nThe duration of one microsecond.\nThe duration of one millisecond.\nCaller asked for a maximum memory greater than we can give …\nA WebAssembly <code>memory</code> instance.\nAn external <code>Memory</code>.\nMarker trait for 32-bit memories.\nMarker trait for 64-bit memories.\nError for invalid <code>Memory</code> access.\nError type describing things that can go wrong when …\nReturned when a shared memory is required, but the given …\nTrait for the <code>Memory32</code> and <code>Memory64</code> marker types.\nA WebAssembly <code>memory</code> view.\nMemory access violation.\nFile descriptor value too large.\nCaller asked for more minimum memory than we can give them.\nToo many links.\nA WebAssembly Module contains stateless WebAssembly code …\nThe store-wide monotonic clock, which is defined as a …\nThe store-wide monotonic clock, which is defined as a …\nMessage too large.\nReserved.\nA mutual exclusion primitive useful for protecting shared …\nThe duration of one nanosecond.\nFilename too long.\nType used to pass this value as an argument or return …\nNetwork is down.\nConnection aborted by network.\nNetwork unreachable.\nToo many files open in system.\nThe requested device couldn’t be accessed\nNo buffer space available.\nNo such device.\nNo such file or directory.\nExecutable file format error.\nNo locks available.\nReserved.\nNot enough space.\nNo message of the desired type.\nString is not valid UTF-8.\nA <code>u64</code> that is known not to equal zero.\nProtocol not available.\nThe application expects to access the specified data once …\nThe application has no advice to give on its behavior with …\nNo space left on device.\nFunction not supported.\nExpected a file but found not a file\nCould not perform the operation because there was not an …\nExtension: Capabilities insufficient.\nThe socket is not connected.\nNot a directory or a symbolic link to a directory.\nDirectory not empty.\nState not recoverable.\nNot a socket.\nNot supported, or operation not supported on socket.\nInappropriate I/O control operation.\nNo such device or address.\nOne value used for counting.\nAn occupied entry.\nType used to represent an offset into a memory. This is <code>u32</code>…\nAfter the stack is unwound via asyncify what should the …\nAtomic memory orderings\nValue too large to be stored in data type.\nAddress calculation overflow.\nOwned data.\nPrevious owner died.\nUnits of WebAssembly pages (as specified to be 65,536 …\nA slice of a path (akin to <code>str</code>).\nRepresents that a value is not ready yet.\nOperation not permitted.\nCaller was not allowed to perform this operation\nA pointer which pins its pointee in place.\nBroken pipe.\nIndicates whether a value is available or if the current …\nAn FD operation performed during proc_spawn2, which is the …\nThe CPU-time clock associated with the current process.\nThe CPU-time clock associated with the current process.\nProtocol error.\nProtocol not supported.\nProtocol wrong type for socket.\nThe application expects to access the specified data in a …\nResult too large.\nThe <code>Read</code> trait allows for reading bytes from a source.\nRepresents that a value is immediately ready.\nThe clock measuring real time. Time value zero corresponds …\nThe clock measuring real time. Time value zero corresponds …\nA mutable memory location with dynamically checked borrow …\nLow level error with mmap.\nThe file descriptor or file refers to a regular file inode.\nNo ordering constraints, only atomic operations.\nWhen coupled with a store, all previous operations become …\nHandle rewind types that have a result to be processed\nHandle rewind types that are result-less (generally these …\nFile descriptor rights, determining which actions may be …\nRead-only file system.\nA struct representing an aborted instruction execution, …\nThe duration of one second.\nThe <code>Seek</code> trait provides a cursor which can be moved within …\nLike <code>Acquire</code>/<code>Release</code>/<code>AcqRel</code> (for load, store, and …\nThe application expects to access the specified data …\nSHA-256 hasher.\nCannot send after socket shutdown.\nA signal and its corresponding action.\nIdentifiers for clocks, snapshot0 version.\nAn internet socket address, either IPv4 or IPv6.\nThe file descriptor or file refers to a datagram socket.\nThe file descriptor or file refers to a raw socket.\nThe file descriptor or file refers to a sequential packet …\nThe file descriptor or file refers to a byte-stream socket.\nInvalid seek.\nNo such process.\nReserved.\nThe store represents all global state that can be …\nAn event that occurred. The contents of an <code>event</code>. An event …\nNo error occurred. System call completed successfully.\nThe file refers to a symbolic link inode.\nAn external <code>Table</code>.\nAn external <code>Memory</code>.\nThe resulting type after dereferencing.\nThe CPU-time clock associated with the current thread.\nThe CPU-time clock associated with the current thread.\nThe operation did not complete within the given amount of …\nConnection timed out.\nTimestamp in nanoseconds.\nThread local key\nThread local user data (associated with the value)\nThread local value\nArgument list too long.\nTraps with an error\nAn attempted conversion that consumes <code>self</code>, which may or …\nText file busy.\nA WebAssembly function that can be called natively (using …\nAn IPv4 address representing an unspecified address: …\nAn IPv6 address representing the unspecified address: <code>::</code>.\nPointer to memory is unaligned.\nFound EOF when EOF was not expected\nThe clock type is not known.\nThe clock type is unknown.\nAn unknown error has occured\nThe type of the file descriptor or file is unknown or is …\nThe application expectations are unknown.\nEvent type is unknown\nSome other unhandled error. If you see this, it’s …\nOperation is not supported on this filesystem\nReturned when trying to call a memory operation that is …\nIndicates that asyncify should unwind by immediately …\nA 128-bit number\nAn IPv4 address.\nAn IPv4 socket address.\nAn IPv6 address.\nAn IPv6 socket address.\nA vacant entry.\nWebAssembly computations manipulate values of basic value …\nThis trait relies on your file closing when it goes out of …\nA file descriptor handle.\nA zero-cost type that represents a pointer to something in …\nReference to an array of values in Wasm memory.\nThe application expects to access the specified data in …\nOperation would block, this error lets the caller know …\nA trait for objects which are byte-oriented sinks.\nA call to write returned 0\nCross-device link.\nZero value used for <code>WasmPtr::is_null</code>.\nA duration of zero time.\nAsyncify takes the current thread and blocks on the async …\nAsyncify takes the current thread and blocks on the async …\nAsyncify takes the current thread and blocks on the async …\nPerforms an immutable operation on the socket while …\nPerforms mutable work on a socket under an asynchronous …\nPerforms an immutable operation on the socket while …\nPerforms mutable work on a socket under an asynchronous …\nReplaces a socket with another socket in under an …\nComputes the absolute difference between <code>self</code> and <code>other</code>.\nCreates a <code>WasmAccess</code>\nGains direct access to the memory of this slice\nCalculates an offset from the current pointer address. The …\nReturns a reference to the underlying allocator.\nProduces an iterator over <code>Path</code> and its ancestors.\nProvides in-place mutable access to an occupied entry …\nGets <code>Pin&lt;&amp;mut T&gt;</code> to the underlying pinned value from this …\nReturns the total number of whole microseconds contained …\nReturns the total number of whole milliseconds contained …\nReturns the number of milliseconds contained by this …\nReturns the number of milliseconds contained by this …\nGet the data as mutable\nBorrows a new mutable reference\nGets a mutable reference to the pinned value this <code>Pin&lt;Ptr&gt;</code> …\nYields a mutable reference to the underlying <code>OsStr</code> slice.\nReturns the total number of nanoseconds contained by this …\nYields the underlying <code>OsStr</code> slice.\nReturns a raw pointer to the underlying data in this cell.\nProvides a raw pointer to the data.\nReturns a mutable pointer to the underlying <code>bool</code>.\nReturns a mutable pointer to the underlying integer.\nReturns a mutable pointer to the underlying integer.\nGet a 32-bit <code>WasmPtr</code> for this <code>WasmRef</code>.\nGet a 64-bit <code>WasmPtr</code> for this <code>WasmRef</code>.\nConverts the <code>Value</code> into a <code>RawValue</code>.\nGet the data as reference\nBorrows a new immmutable reference\nGets a shared reference to the pinned value this <code>Pin</code> …\nReturns the number of <em>whole</em> seconds contained by this …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns the number of seconds contained by this <code>Duration</code> …\nGet a <code>SharedMemory</code>.\nReturns a <code>StoreMut</code> pointing to the underlying context.\nReturns a <code>StoreRef</code> pointing to the underlying context.\nConvert a reference to <code>self</code> into a reference …\nConvert a reference to self into a reference to …\nConvert a reference to <code>self</code> into a reference to …\nConvert a reference to <code>self</code> into a reference to …\nConvert a mutable reference to <code>self</code> into a mutable …\nConvert a mutable reference to self into a mutable …\nConvert a mutable reference to <code>self</code> into a mutable …\nConvert a mutable reference to <code>self</code> into a mutable …\nConverts to <code>Arc&lt;[T]&gt;</code>.\nConverts to <code>Arc&lt;T&gt;</code>.\nReturns the intersection of <code>self</code> and <code>rhs</code> as a new …\nReturns the union of <code>self</code> and <code>rhs</code> as a new <code>HashSet&lt;T, S&gt;</code>.\nReturns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …\nImmutably borrows from an owned value.\nImmutably borrows the wrapped value.\nMutably borrows the wrapped value.\nCreates a “by reference” adaptor for this instance of …\nCreates a “by reference” adapter for this instance of …\nTransforms this <code>Read</code> instance to an <code>Iterator</code> over its …\nCalculate number of bytes from pages.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the function.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nCall the typed func and return results.\nReturns the canonical, absolute form of the path with all …\nReturns the number of bytes the <code>BytesMut</code> can hold without …\nReturns the number of elements the map can hold without …\nReturns the number of elements the set can hold without …\nCasts this <code>WasmPtr</code> to a <code>WasmPtr</code> of a different type.\nCreates an adapter which will chain this stream with …\nChecked addition. Computes <code>self + rhs</code>, returning <code>None</code> if …\nChecked <code>Duration</code> addition. Computes <code>self + other</code>, …\nChecked <code>Duration</code> division. Computes <code>self / other</code>, …\nChecked <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nChecked <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nClears the buffer, removing all data.\nClears the buffer, removing all data. Existing capacity is …\nClears the map, removing all key-value pairs. Keeps the …\nClears the set, removing all values.\nClear the poisoned state from a mutex.\nPanics\nMakes a clone of the <code>Arc</code> pointer.\nOverwrites the contents of <code>self</code> with a clone of the …\nPanics\nPanics\nComparison for two <code>Arc</code>s.\nStores a value into the <code>bool</code> if the current value is the …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the <code>bool</code> if the current value is the …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the <code>bool</code> if the current value is the …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nProduces an iterator over the <code>Component</code>s of the path.\nReturns <code>true</code> if the set contains a value.\nReturns <code>true</code> if the map contains a value for the specified …\nThis method will copy a file from a source to this …\nCreates <code>Bytes</code> instance from slice, by copying it.\nCopies a range of the memory and returns it as a vector of …\nThis method will copy a file from a source to this …\nCopies the memory to another new memory object\nAttempts to duplicate this memory (if its clonable) in a …\nCopies the memory and returns it as a vector of bytes\nthe time at which the file was created in nanoseconds as a …\nGet the custom sections of the module given a <code>name</code>.\nThe serial number of the file referred to by this …\nThe length of the name of the directory entry.\nThe offset of the next directory entry stored in this …\nThe type of the file referred to by this directory entry.\nReturns a reference to the host state in this function …\nBorrows a new mutable reference of both the attached Store …\nReturns a mutable- reference to the host state in this …\nReturns the size (in bytes) of the <code>Memory</code>.\nConstructs an event at the debug level.\nDecrements the strong reference count on the <code>Arc&lt;T&gt;</code> …\nDecrements the strong reference count on the <code>Arc&lt;T&gt;</code> …\nPuts the process to deep sleep and wakes it again when the …\nCreates an owned Cow&lt;’a, B&gt; with the default value for …\nCreates an empty <code>HashMap&lt;K, V, S&gt;</code>, with the <code>Default</code> value …\nCreates an empty <code>HashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …\nCreates a <code>RefCell&lt;T&gt;</code>, with the <code>Default</code> value for T.\nCreates a new <code>Arc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.\nCreates an empty str inside an Arc\nCreates an empty CStr inside an Arc\nCreates an empty <code>[T]</code> inside an Arc\nCreates a <code>Condvar</code> which is ready to be waited on and …\nCreates a <code>Mutex&lt;T&gt;</code>, with the <code>Default</code> value for T.\nCreates an <code>AtomicBool</code> initialized to <code>false</code>.\nDereferences the value.\nCreates a <code>WasmRef</code> from this <code>WasmPtr</code> which allows reading …\nMutably dereferences the value.\nDeserializes a serialized Module binary into a <code>Module</code>.\nDeserializes a serialized Module located in a <code>Path</code> into a …\nDeserializes a serialized Module located in a <code>Path</code> into a …\nDeserializes a serialized module binary into a <code>Module</code>.\nVisits the values representing the difference, i.e., the …\nReturns an object that implements <code>Display</code> for safely …\nDivides <code>Duration</code> by <code>Duration</code> and returns <code>f32</code>.\nDivides <code>Duration</code> by <code>Duration</code> and returns <code>f64</code>.\nDivides <code>Duration</code> by <code>f32</code>.\nDivides <code>Duration</code> by <code>f64</code>.\nAttempts to downcast the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a …\nAttempts to downcast the <code>RuntimeError</code> to a concrete type.\nAttempts to downcast the <code>RuntimeError</code> to a concrete type.\nDowncasts the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a concrete …\nCreates a new <code>Weak</code> pointer to this allocation.\nClears the map, returning all key-value pairs as an …\nClears the set, returning all elements as an iterator. …\nDrops the <code>Arc</code>.\nDetermines whether <code>child</code> is a suffix of <code>self</code>.\nReturns the <code>Engine</code>.\nReturns mutable reference to <code>Engine</code>.\nGets the given key’s corresponding entry in the map for …\nGets the given value’s corresponding entry in the set …\nPanics\nEquality for two <code>Arc</code>s.\nIf non-zero, an error that occurred while processing the …\nConstructs an event at the error level.\nReturns <code>true</code> if the path points at an existing entity.\nReturns an iterator over the exported types in the Module.\nThe exports for an instance.\nReturns a reference to the extension data for the current …\nAppends given bytes to this <code>BytesMut</code>.\nExtracts the extension (without the leading dot) of …\nAttempt to access the underlying value of this <code>Value</code>, …\nCreates an iterator which uses a closure to determine if …\nCreates an iterator which uses a closure to determine if a …\nAttempt to access the underlying value of this <code>Value</code>, …\nAttempt to access the underlying value of this <code>Value</code>, …\nAdds to the current value, returning the previous value.\nAdds to the current value, returning the previous value.\nLogical “and” with a boolean value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nLogical “nand” with a boolean value.\nBitwise “nand” with the current value.\nBitwise “nand” with the current value.\nLogical “not” with a boolean value.\nLogical “or” with a boolean value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nSubtracts from the current value, returning the previous …\nSubtracts from the current value, returning the previous …\nFetches the value, and applies a function to it that …\nFetches the value, and applies a function to it that …\nFetches the value, and applies a function to it that …\nLogical “xor” with a boolean value.\nBitwise “xor” with the current value.\nBitwise “xor” with the current value.\nThe file descriptor on which to wait for it to become …\nReturns the final component of the <code>Path</code>, if there is one.\nExtracts the prefix of <code>self.file_name</code>.\nExtracts the stem (non-extension) portion of <code>self.file_name</code>…\nThe state of the file descriptor.\nFlushes this output stream, ensuring that all …\nFlushes this output stream, ensuring that all …\nConverts <code>self</code> into an immutable <code>Bytes</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert self into <code>BytesMut</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>Borrowed</code> variant of <code>Cow</code> from a reference to an …\nConverts a <code>CString</code> into an owned <code>Cow</code> without copying or …\nCreates a <code>Borrowed</code> variant of <code>Cow</code> from a slice.\nConverts a <code>&amp;</code><code>CString</code> into a borrowed <code>Cow</code> without copying or …\nConverts a <code>CStr</code> into a borrowed <code>Cow</code> without copying or …\nConverts a string slice into a <code>Borrowed</code> variant. No heap …\nCreates a <code>Borrowed</code> variant of <code>Cow</code> from a reference to <code>Vec</code>.\nConverts a <code>String</code> into an <code>Owned</code> variant. No heap …\nConverts a <code>String</code> reference into a <code>Borrowed</code> variant. No …\nReturns the argument unchanged.\nCreates an <code>Owned</code> variant of <code>Cow</code> from an owned instance of …\nCreates a clone-on-write pointer from an owned instance of …\nCreates a clone-on-write pointer from a reference to <code>Path</code>.\nConverts the string reference into a <code>Cow::Borrowed</code>.\nConverts the string reference into a <code>Cow::Borrowed</code>.\nMoves the string into a <code>Cow::Owned</code>.\nCreates a clone-on-write pointer from a reference to …\nExamples\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nExamples\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>RefCell&lt;T&gt;</code> containing the given value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>&amp;mut CStr</code> into a <code>Arc&lt;CStr&gt;</code>, by copying the …\nAllocates a reference-counted <code>str</code> and copies <code>v</code> into it.\nMove a boxed object to a new, reference-counted allocation.\nConverts a <code>CString</code> into an Arc&lt;CStr&gt; by moving the <code>CString</code> …\nReturns the argument unchanged.\nConverts an atomically reference-counted string slice into …\nAllocates a reference-counted <code>str</code> and copies <code>v</code> into it.\nConverts a <code>&amp;CStr</code> into a <code>Arc&lt;CStr&gt;</code>, by copying the contents …\nConverts an <code>OsString</code> into an Arc&lt;OsStr&gt; by moving the …\nCreates an atomically reference-counted pointer from a …\nConverts a <code>T</code> into an <code>Arc&lt;T&gt;</code>\nConverts a <code>Path</code> into an <code>Arc</code> by copying the <code>Path</code> data into …\nConverts a <code>Path</code> into an <code>Arc</code> by copying the <code>Path</code> data into …\nConverts a <code>PathBuf</code> into an Arc&lt;Path&gt; by moving the <code>PathBuf</code> …\nConverts a <code>[T; N]</code> into an <code>Arc&lt;[T]&gt;</code>.\nCopies the string into a newly allocated Arc&lt;OsStr&gt;.\nCopies the string into a newly allocated Arc&lt;OsStr&gt;.\nAllocates a reference-counted slice and fills it by …\nAllocates a reference-counted slice and moves <code>v</code>’s items …\nAllocates a reference-counted slice and fills it by …\nAllocates a reference-counted <code>str</code> and copies <code>v</code> into it.\nReturns the argument unchanged.\nCreates a new mutex in an unlocked state ready for use. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>bool</code> into an <code>AtomicBool</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCopies this address to a new <code>IpAddr::V6</code>.\nCreates an <code>IpAddr::V4</code> from a four element byte array.\nReturns the argument unchanged.\nCreates an <code>IpAddr::V6</code> from a sixteen element byte array.\nCopies this address to a new <code>IpAddr::V4</code>.\nCreates an <code>IpAddr::V6</code> from an eight element 16-bit array.\nCreates an <code>Ipv4Addr</code> from a four element byte array.\nReturns the argument unchanged.\nUses <code>Ipv4Addr::from_bits</code> to convert a host byte order <code>u32</code> …\nReturns the argument unchanged.\nCreates an <code>Ipv6Addr</code> from an eight element 16-bit array.\nUses <code>Ipv6Addr::from_bits</code> to convert a host byte order <code>u128</code> …\nCreates an <code>Ipv6Addr</code> from a sixteen element byte array.\nConverts a <code>SocketAddrV4</code> into a <code>SocketAddr::V4</code>.\nConverts a <code>SocketAddrV6</code> into a <code>SocketAddr::V6</code>.\nConverts a tuple struct (Into&lt;<code>IpAddr</code>&gt;, <code>u16</code>) into a …\nReturns the argument unchanged.\nConverts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>u32</code> into an <code>AtomicU32</code>.\nReturns the argument unchanged.\nConverts an <code>u64</code> into an <code>AtomicU64</code>.\nReturns the argument unchanged.\nMoves the value into a <code>Poll::Ready</code> to make a <code>Poll&lt;T&gt;</code>.\nReturns the argument unchanged.\nCreates a new WebAssembly module from a Wasm binary.\nCreates a new WebAssembly module from a Wasm binary, …\nConverts a native byte order <code>u32</code> into an IPv4 address.\nConverts a native byte order <code>u128</code> into an IPv6 address.\nCreates a new <code>Duration</code> from the specified number of days.\nCreates a new WebAssembly module from a file path.\nCreates a new <code>Duration</code> from the specified number of hours.\nTakes each element in the <code>Iterator</code> and collects it into an …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nGets atomic access to a <code>&amp;mut bool</code>.\nGet atomic access to a <code>&amp;mut u32</code>.\nGet atomic access to a <code>&amp;mut u64</code>.\nGets atomic access to a <code>&amp;mut [bool]</code> slice.\nGet atomic access to a <code>&amp;mut [u32]</code> slice.\nGet atomic access to a <code>&amp;mut [u64]</code> slice.\nCreates a new <code>Duration</code> from the specified number of …\nCreates an <code>Ipv4Addr</code> from a four element byte array.\nCreates an <code>Ipv6Addr</code> from a sixteen element byte array.\nCreate Bytes with a buffer whose lifetime is controlled …\nCreates a new <code>AtomicBool</code> from a pointer.\nCreates a new reference to an atomic integer from a …\nCreates a new reference to an atomic integer from a …\nConstructs an <code>Arc&lt;T&gt;</code> from a raw pointer.\nConverts a <code>RawValue</code> to a <code>Value</code>.\nConstructs an <code>Arc&lt;T, A&gt;</code> from a raw pointer.\nCreates a new <code>Duration</code> from the specified number of whole …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates an <code>Ipv6Addr</code> from an eight element 16-bit array.\nCreates a new <code>Bytes</code> from a static slice.\nCreate an <code>Extern</code> from an <code>wasmer_engine::Export</code>.\nCreates a new <code>Context</code> from a <code>&amp;Waker</code>.\nCreates a new <code>Duration</code> from the specified number of weeks.\nFile type.\nFile descriptor flags.\nRights that apply to this file descriptor.\nMaximum set of rights that may be installed on new file …\nAttempt to access the underlying value of this <code>Value</code>, …\nPanics\n‘Greater than or equal to’ comparison for two <code>Arc</code>s.\nReturns a copy of the contained value.\nReturns a reference to the value corresponding to the key.\nReturns a reference to the value in the set, if any, that …\nRetrieves the current value <code>Value</code> that the global has.\nReturns the key-value pair corresponding to the supplied …\nAttempts to get mutable references to <code>N</code> values in the map …\nAttempts to get mutable references to <code>N</code> values in the map …\nReturns a mutable reference to the value corresponding to …\nReturns a mutable reference to the underlying data.\nReturns a mutable reference into the given <code>Arc</code>, if there …\nReturns a mutable reference to the underlying data.\nReturns a mutable reference to the underlying <code>bool</code>.\nGets a mutable reference to the data inside of this <code>Pin</code>.\nReturns a mutable reference to the underlying integer.\nReturns a mutable reference to the underlying integer.\nGets non-atomic access to a <code>&amp;mut [AtomicBool]</code> slice.\nGet non-atomic access to a <code>&amp;mut [AtomicU32]</code> slice\nGet non-atomic access to a <code>&amp;mut [AtomicU64]</code> slice\nReturns a mutable reference into the given <code>Arc</code>, without …\nInserts the given <code>value</code> into the set if it is not present, …\nInserts a value computed from <code>f</code> into the set if the given …\nGets a shared reference out of a pin.\nUsed for “special” files such as <code>stdin</code>, <code>stdout</code> and …\nGets a mutable reference to the data inside of this <code>Pin</code>.\nGrow memory by the specified amount of WebAssembly <code>Pages</code> …\nGrows the memory to at least a minimum size.\nPanics\nGreater-than comparison for two <code>Arc</code>s.\nReturns <code>true</code> if the <code>Path</code> has a root.\nReturns a reference to the map’s <code>BuildHasher</code>.\nReturns a reference to the set’s <code>BuildHasher</code>.\nAttempt to access the underlying value of this <code>Value</code>, …\nAttempt to access the underlying value of this <code>Value</code>, …\nReturns the ID of this store\nReturns an iterator over the imported types in the Module.\nIncrements the strong reference count on the <code>Arc&lt;T&gt;</code> …\nIncrements the strong reference count on the <code>Arc&lt;T&gt;</code> …\nReturns a reference to the value corresponding to the …\nGet a <code>WasmRef</code> to an element in the slice.\nInserts a key-value pair into the map.\nAdds a value to the set.\nSets the value of the entry, and returns an <code>OccupiedEntry</code>.\nVisits the values representing the intersection, i.e., the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the <code>RefCell</code>, returning the wrapped value.\nReturns the inner value, if the <code>Arc</code> has exactly one strong …\nConsumes this mutex, returning the underlying data.\nConsumes the atomic and returns the contained value.\nUnwraps this <code>Pin&lt;Ptr&gt;</code>, returning the underlying pointer.\nConsumes the atomic and returns the contained value.\nConsumes the atomic and returns the contained value.\nUnwraps this <code>Pin&lt;Ptr&gt;</code>, returning the underlying <code>Ptr</code>.\nCreates a consuming iterator, that is, one that moves each …\nCreates a consuming iterator, that is, one that moves each …\nCreates a consuming iterator visiting all the keys in …\nConvert it into a <code>FunctionEnvMut</code>\nExtracts the owned data.\nConverts a <code>Box&lt;Path&gt;</code> into a <code>PathBuf</code> without copying or …\nConsumes the <code>Arc</code>, returning the wrapped pointer.\nConsumes the <code>Arc</code>, returning the wrapped pointer and …\nConverts this <code>Pin&lt;&amp;mut T&gt;</code> into a <code>Pin&lt;&amp;T&gt;</code> with the same …\nConsume <code>self</code> into a reference …\nConsume self into …\nConsume <code>self</code> into <code>crate::backend::sys::function::Function</code>.\nConsume <code>self</code> into a <code>crate::backend::sys::memory::Memory</code>.\nCreates a consuming iterator visiting all the values in …\nConvert this object into a <code>Waker</code>.\nTraits, helpers, and type definitions for core I/O …\nReturns the IP address associated with this socket address.\nReturns true if the <code>RuntimeError</code> is the same as T\nTrue if the memory is 64-bit\nReturns <code>true</code> if the <code>Path</code> is absolute, i.e., if it is …\nReturns <code>true</code> if this address is in a range designated for …\nReturns <code>true</code> if this address part of the <code>198.18.0.0/15</code> …\nReturns <code>true</code> if this is an address reserved for …\nReturns true if the data is borrowed, i.e. if <code>to_mut</code> would …\nReturns <code>true</code> if this is a broadcast address (…\nReturns <code>true</code> if the path exists on disk and is pointing at …\nReturns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …\nReturns <code>true</code> if this address is in a range designated for …\nReturns <code>true</code> if this address is in a range designated for …\nReturns <code>true</code> if this is an address reserved for …\nReturns true if the <code>Bytes</code> has a length of 0.\nReturns true if the <code>BytesMut</code> has a length of 0.\nReturns <code>true</code> if the map contains no elements.\nReturns <code>true</code> if the set contains no elements.\nReturns <code>true</code> if the number of elements is 0.\nReturns <code>true</code> if the path exists on disk and is pointing at …\nChecks whether a value can be used with the given context.\nChecks whether this <code>Extern</code> can be used with the given …\nChecks whether this <code>Function</code> can be used with the given …\nChecks whether this global can be used with the given …\nChecks whether this <code>Memory</code> can be used with the given …\nReturns <code>true</code> if the address appears to be globally …\nReturns <code>true</code> if the address appears to be globally …\nReturns <code>true</code> if the address appears to be globally …\nReturns <code>true</code> if this address is an <code>IPv4</code> address, and <code>false</code> …\nReturns <code>true</code> if the IP address in this <code>SocketAddr</code> is an …\nReturns <code>true</code> if the address is an IPv4-mapped address (…\nReturns <code>true</code> if this address is an <code>IPv6</code> address, and <code>false</code> …\nReturns <code>true</code> if the IP address in this <code>SocketAddr</code> is an …\nReturns <code>true</code> if the address is link-local (<code>169.254.0.0/16</code>).\nReturns <code>true</code> if this is a loopback address.\nReturns <code>true</code> if this is a loopback address (<code>127.0.0.0/8</code>).\nReturns <code>true</code> if this is the loopback address (<code>::1</code>), as …\nReturns <code>true</code> if this is a multicast address.\nReturns <code>true</code> if this is a multicast address (<code>224.0.0.0/4</code>).\nReturns <code>true</code> if this is a multicast address (<code>ff00::/8</code>).\nChecks whether the <code>WasmPtr</code> is null.\nIndicates if the file is opened or closed. This function …\nReturns true if the data is owned, i.e. if <code>to_mut</code> would be …\nReturns <code>true</code> if the poll is a <code>Pending</code> value.\nDetermines whether the mutex is poisoned.\nReturns <code>true</code> if this is a private address.\nDetermines if this <code>Read</code>er has an efficient <code>read_vectored</code> …\nReturns <code>true</code> if the poll is a <code>Poll::Ready</code> value.\nReturns <code>true</code> if the <code>Path</code> is relative, i.e., not absolute.\nReturns <code>true</code> if this address is reserved by IANA for …\nReturns <code>true</code> if this address is part of the Shared Address …\nReturns <code>true</code> if the set is a subset of another, i.e., <code>other</code>…\nReturns <code>true</code> if the set is a superset of another, i.e., …\nReturns <code>true</code> if the path exists on disk and is pointing at …\nReturn true if <code>self</code> is a store from the <code>sys</code> runtime.\nReturns <code>true</code> if this is a unicast address, as defined by …\nReturns <code>true</code> if the address is a globally routable unicast …\nReturns <code>true</code> if the address is a unicast address with …\nReturns true if this is the only reference to the data and …\nReturns <code>true</code> if this is a unique local address (<code>fc00::/7</code>).\nReturns <code>true</code> for the special ‘unspecified’ address.\nReturns <code>true</code> for the special ‘unspecified’ address (…\nReturns <code>true</code> for the special ‘unspecified’ address (<code>::</code>…\nDetermines if this <code>Write</code>r has an efficient <code>write_vectored</code> …\nReturns true if this <code>Duration</code> spans no time.\nAn iterator visiting all key-value pairs in arbitrary …\nAn iterator visiting all elements in arbitrary order. The …\nProduces an iterator over the path’s components viewed …\nGet an iterator over the elements in this slice.\nAn iterator visiting all key-value pairs in arbitrary …\nCreates an owned <code>PathBuf</code> with <code>path</code> adjoined to <code>self</code>.\nReturns a reference to this entry’s key.\nAn iterator visiting all keys in arbitrary order. The …\nthe last time the file was accessed in nanoseconds as a …\nthe last time the file was modified in nanoseconds as a …\nPanics\n‘Less than or equal to’ comparison for two <code>Arc</code>s.\nThese modules provide wrappers and implementations for …\nReturns the number of bytes contained in this <code>Bytes</code>.\nReturns the number of bytes contained in this <code>BytesMut</code>.\nReturns the number of elements in the map.\nReturns the number of elements in the set.\nGet the number of elements in this slice.\nLoads a value from the bool.\nLoads a value from the atomic integer.\nLoads a value from the atomic integer.\nReturns a reference to the <code>LocalWaker</code> for the current task.\nAcquires a mutex, blocking the current thread until it is …\nPanics\nLess-than comparison for two <code>Arc</code>s.\nMakes a mutable reference into the given <code>Arc</code>.\nMaps a <code>Poll&lt;T&gt;</code> to <code>Poll&lt;U&gt;</code> by applying a function to a …\nMaps a <code>Poll::Ready&lt;Option&lt;Result&lt;T, E&gt;&gt;&gt;</code> to …\nMaps a <code>Poll::Ready&lt;Result&lt;T, E&gt;&gt;</code> to …\nMaps a <code>Poll&lt;Result&lt;T, E&gt;&gt;</code> to <code>Poll&lt;Result&lt;U, E&gt;&gt;</code> by …\nMaps a <code>Poll&lt;Option&lt;Result&lt;T, E&gt;&gt;&gt;</code> to …\nConstructs a new pin by mapping the interior value.\nConstructs a new pin by mapping the interior value.\nReturns the largest value that can be represented by the …\nExponentially increasing backoff of CPU usage\nReturns a reference the <code>message</code> stored in <code>Trap</code>.\nQueries the file system to get information about a file, …\nGets the <code>Module</code> associated with this instance.\nMulti-producer, single-consumer FIFO queue communication …\nMultiplies <code>Duration</code> by <code>f32</code>.\nMultiplies <code>Duration</code> by <code>f64</code>.\nReturns the address’s multicast scope if the address is …\nReturns the name of the current module.\nConvert a <code>Native</code> to an <code>Offset</code>.\nThe number of bytes available for reading or writing.\nInequality for two <code>Arc</code>s.\nCreate a new <code>WasmPtr</code> at the given offset.\nCreates a new empty <code>Bytes</code>.\nCreates a new <code>BytesMut</code> with default capacity.\nCreates a new <code>Store</code> with a specific <code>Engine</code>.\nCreates an empty <code>HashMap</code>.\nCreates an empty <code>HashSet</code>.\nCreates a new <code>RefCell</code> containing <code>value</code>.\nDirectly wraps a string slice as a <code>Path</code> slice.\nConstructs a new <code>Arc&lt;T&gt;</code>.\nCreates a new condition variable which is ready to be …\nCreates a new mutex in an unlocked state ready for use.\nCreates a new <code>WasmSlice</code> starting at the given offset in …\nCreates a new WebAssembly Module given the configuration …\nCreates a new <code>Instance</code> from a WebAssembly <code>Module</code> and a set …\nMake a new FunctionEnv\nCreates a new host <code>Function</code> (dynamic) with the provided …\nCreate a new global with the initial <code>Value</code>.\nCreates a new host <code>Memory</code> from the provided <code>MemoryType</code>.\nCreates a new generic <code>RuntimeError</code> with the given <code>message</code>.\nCreates a new <code>AtomicBool</code>.\nCreates a new IPv4 address from four eight-bit octets.\nCreates a new IPv6 address from eight 16-bit segments.\nCreates a new socket address from an IP address and a port …\nConstructs a new <code>Pin&lt;Ptr&gt;</code> around a pointer to some data of …\nCreates a new atomic integer.\nCreates a new atomic integer.\nCreates a new <code>Duration</code> from the specified number of whole …\nCreates a new <code>Instance</code> from a WebAssembly <code>Module</code> and a …\nConstructs a new <code>Arc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the …\nConstructs a new <code>Arc&lt;T, A&gt;</code> in the given allocator while …\nCreate a memory object from an existing memory and …\nCreates <code>RuntimeError</code> from an error and a WasmTrace\nConstructs a new <code>Arc&lt;T&gt;</code> in the provided allocator.\nCreate a mutable global with the initial <code>Value</code>.\nCreates a new host <code>Function</code> from a native function.\nCreates a new host <code>Function</code> with an environment from a …\nConstructs a new <code>Pin&lt;Ptr&gt;</code> around a reference to some data …\nConstructs a new <code>Arc</code> with uninitialized contents.\nConstructs a new <code>Arc</code> with uninitialized contents in the …\nConstructs a new atomically reference-counted slice with …\nConstructs a new atomically reference-counted slice with …\nCreates a new host <code>Function</code> (dynamic) with the provided …\nConstructs a new <code>Arc</code> with uninitialized contents, with the …\nConstructs a new <code>Arc</code> with uninitialized contents, with the …\nConstructs a new atomically reference-counted slice with …\nConstructs a new atomically reference-counted slice with …\nWakes up all blocked threads on this condvar.\nWakes up one blocked thread on this condvar.\nReturns a null <code>UserPtr</code>.\nReturns a null <code>externref</code> value.\nReturns the ObjectMutable\nReturns the four eight-bit integers that make up this …\nReturns the sixteen eight-bit integers the IPv6 address …\nGet the offset into Wasm linear memory for this <code>WasmPtr</code>.\nGet the offset into Wasm linear memory for this <code>WasmSlice</code>.\nConvert an <code>Offset</code> to a <code>Native</code>.\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nEnsures a value is in the entry by inserting, if empty, …\nReturns the number of parameters that this function takes.\nReturns the <code>Path</code> without its final component, if there is …\nParse an IP address from a slice of bytes.\nParse an IPv4 address from a slice of bytes.\nParse an IPv6 address from a slice of bytes.\nParse a socket address from a slice of bytes.\nPanics\nPartial comparison for two <code>Arc</code>s.\nConstructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…\nConstructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator. …\nPolls the file for when there is data to be read\nPolls the file for when it is available for writing\nReturns the port number associated with this socket …\nReturns <code>true</code> if the two <code>Arc</code>s point to the same allocation …\nCreates a raw immutable entry builder for the HashMap.\nCreates a raw entry builder for the HashMap.\nPull some bytes from this source into the specified …\nReads the address pointed to by this <code>WasmPtr</code> in a memory.\nReads an element of this slice.\nSafely reads bytes from the memory at the given offset.\nPull some bytes from this source into the specified buffer.\nReads the exact number of bytes required to fill <code>cursor</code>.\nReturns an iterator over the entries within a directory.\nReads the exact number of bytes required to fill <code>buf</code>.\nReads a symbolic link, returning the file that the link …\nReads the entire slice into the given buffer.\nReads the entire slice into the given uninitialized buffer.\nReads this <code>WasmSlice</code> into a <code>BytesMut</code>\nReads all bytes until EOF in this source, placing them …\nReads this <code>WasmSlice</code> into a <code>slice</code>.\nReads all bytes until EOF in this source, appending them …\nReads this <code>WasmSlice</code> into a <code>Vec</code>.\nSafely reads a single byte from memory at the given offset\nSafely reads bytes from the memory at the given offset.\nReads a sequence of values from this <code>WasmPtr</code> until a value …\nReads a UTF-8 string from the <code>WasmPtr</code> with the given …\nReads a null-terminated UTF-8 string from the <code>WasmPtr</code>.\nLike <code>read</code>, except that it reads into a slice of buffers.\nRemoves a key from the map, returning the value at the key …\nRemoves a value from the set. Returns whether the value was\nRemoves a key from the map, returning the stored key and …\nReplaces the contained value, returning the old value.\nReplaces the contained value, returning the old value.\nAdds a value to the set, replacing the existing value, if …\nReplaces the wrapped value with a new one, returning the …\nReplaces the wrapped value with a new one computed from <code>f</code>, …\nReserves capacity for at least <code>additional</code> more bytes to be …\nReserves capacity for at least <code>additional</code> more elements to …\nReserves capacity for at least <code>additional</code> more elements to …\nResets the memory back to zero length\nResizes the buffer so that <code>len</code> is equal to <code>new_len</code>.\nReturns the number of results this function produces.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nCreates a future which will rewind to the beginning of the …\nRewind to the beginning of a stream.\nChecks whether two stores are identical. A store is …\nSaturating <code>Duration</code> addition. Computes <code>self + other</code>, …\nSaturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nSaturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nSeek to an offset, in bytes, in a stream.\nCreates a future which will seek an IO object, and then …\nSeeks relative to the current position.\nReturns the eight 16-bit segments that make up this …\nSerializes a module into a binary representation that the …\nSerializes a module into a file that the <code>Engine</code> can later …\nSets or initializes the contained value.\nSets or initializes the contained value.\nSets a custom <code>Value</code> to the runtime global.\nAssigns a new value to the memory location pointed to by …\nChanges the IP address associated with this socket address.\nChange the size of the file, if the <code>new_size</code> is greater …\nSets the length of the buffer.\nSets the name of the current module. This is normally …\nChanges the port number associated with this socket …\nsets accessed and modified time\nSet the <code>TrapHandlerFn</code> for this store.\nAttempts to clone this memory (if its clonable) in a new …\nShrinks the capacity of the map with a lower limit. It …\nShrinks the capacity of the set with a lower limit. It …\nShrinks the capacity of the map as much as possible. It …\nShrinks the capacity of the set as much as possible. It …\nShuts down the output stream, ensuring that the value can …\nThe signal handler\nthe size of the file in bytes\nReturns the size (in <code>Pages</code>) of the <code>Memory</code>.\nRetrieve the size of the memory in pages.\nCreates a <code>WasmSlice</code> starting at this <code>WasmPtr</code> which allows …\nReturns a slice of self for the provided range.\nReturns a slice of self that is equivalent to the given …\nReturns the remaining spare capacity of the buffer as a …\nRuns the work in the background via the task managers …\nRuns the work in the background via the task managers …\nRuns the work in the background via the task managers …\nRemoves the bytes from the current view, returning them in …\nSplits the bytes into two at the given index.\nSplits the bytes into two at the given index.\nSplits the bytes into two at the given index.\nSplits the buffer into two at the given index.\nDetermines whether <code>base</code> is a prefix of <code>self</code>.\nGets a pinning mutable reference from a static mutable …\nGets a pinning reference from a <code>&amp;&#39;static</code> reference.\nWrites data to the stderr\nStores a value into the bool.\nStores a value into the atomic integer.\nStores a value into the atomic integer.\nReturns the length of this stream (in bytes).\nCreates a future which will return the current seek …\nReturns the current seek position from the start of the …\nReturns a path that, when joined onto <code>base</code>, yields <code>self</code>.\nGets the number of strong (<code>Arc</code>) pointers to this …\nReturns the difference of <code>self</code> and <code>rhs</code> as a new …\nCalculates an offset from the current pointer address. The …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in …\nGet a <code>WasmSlice</code> for a subslice of this slice.\nSwaps the wrapped value of <code>self</code> with the wrapped value of …\nStores a value into the bool, returning the previous value.\nStores a value into the atomic integer, returning the …\nStores a value into the atomic integer, returning the …\nThis method gets metadata without following symlinks in …\nQueries the metadata about a file without following …\nVisits the values representing the symmetric difference, …\nTakes the contained value, leaving <code>Default::default()</code> in …\nTakes the contained value, leaving <code>Default::default()</code> in …\nRemoves and returns the value in the set, if any, that is …\nCreates an adapter which will read at most <code>limit</code> bytes …\nTakes the wrapped value, leaving <code>Default::default()</code> in its …\nConverts an IPv4 address into a <code>u32</code> representation using …\nConverts an IPv6 address into a <code>u128</code> representation using …\nConverts this address to an <code>IpAddr::V4</code> if it is an …\nConverts this address to an <code>IpAddr::V4</code> if it is an …\nConverts this address to an <code>IPv4</code> address if it is either …\nConverts this address to an <code>IPv4</code> address if it’s an …\nConverts this address to an IPv4-compatible <code>IPv6</code> address.\nConverts this address to an IPv4-mapped <code>IPv6</code> address.\nAcquires a mutable reference to the owned form of the data.\nConverts a <code>Path</code> to an owned <code>PathBuf</code>.\nYields a <code>&amp;str</code> slice if the <code>Path</code> is valid unicode.\nConverts a <code>Path</code> to a <code>Cow&lt;str&gt;</code>.\nReturns trap code, if it’s a Trap\nTo <code>VMExtern</code>.\nReturns a list of function frames in WebAssembly code that …\nConstructs an event at the trace level.\nReinterprets the bits of a value of one type as another …\nShortens the buffer, keeping the first <code>len</code> bytes and …\nShortens the buffer, keeping the first <code>len</code> bytes and …\nImmutably borrows the wrapped value, returning an error if …\nMutably borrows the wrapped value, returning an error if …\nImmutably borrows the wrapped value, returning an error if …\nAttempt to create a new reference to the underlying …\nReturns <code>Ok(true)</code> if the path points at an existing entity.\nThe checked version of <code>from_secs_f32</code>.\nThe checked version of <code>from_secs_f64</code>.\nTries to insert a key-value pair into the map, and returns …\nPerforms the conversion.\nTry to convert self into <code>BytesMut</code>.\nAttempts to acquire this lock.\nConstructs a new <code>Arc&lt;T&gt;</code>, returning an error if allocation …\nConstructs a new <code>Arc&lt;T, A&gt;</code> in the provided allocator, …\nConstructs a new <code>Arc</code> with uninitialized contents, …\nConstructs a new <code>Arc</code> with uninitialized contents, in the …\nConstructs a new <code>Arc</code> with uninitialized contents, with the …\nConstructs a new <code>Arc</code> with uninitialized contents, with the …\nConstructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>, return an error if …\nConstructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator, …\nAttempts to cheaply reclaim already allocated capacity for …\nTries to reserve capacity for at least <code>additional</code> more …\nTries to reserve capacity for at least <code>additional</code> more …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the inner value, if the <code>Arc</code> has exactly one strong …\nAcquires a reference to the value in this TLS key.\nReturns the corresponding <code>Type</code> for this <code>Value</code>.\nReturn the underlying type of the inner <code>Extern</code>.\nReturns the <code>FunctionType</code> of the <code>Function</code>.\nReturns the <code>GlobalType</code> of the global.\nReturns the <code>MemoryType</code> of the <code>Memory</code>.\nType of event that was triggered\nTransform this WebAssembly function into a typed function. …\nThe type of the event that occurred, and the contents of …\nUndo the effect of leaked guards on the borrow state of …\nVisits the values representing the union, i.e., all the …\nRequest deletion of the file\nAbsorbs a <code>BytesMut</code> that was previously split off.\nReturns the underlying value of this <code>Value</code>, panicking if it…\nReturns the underlying value of this <code>Value</code>, panicking if it…\nReturns the underlying value of this <code>Value</code>, panicking if it…\nReturns the underlying value of this <code>Value</code>, panicking if it…\nReturns the underlying value of this <code>Value</code>, panicking if it…\nReturns the underlying value of this <code>Value</code>, panicking if it…\nIf we have the only reference to <code>T</code> then unwrap it. …\nReturns the underlying value of this <code>Value</code>, panicking if it…\nCreates a custom user Error.\nUser-provided value that got attached to …\nAttempt to access the underlying value of this <code>Value</code>, …\nValidates a new WebAssembly Module given the configuration …\nAn iterator visiting all values in arbitrary order. The …\nAn iterator visiting all values mutably in arbitrary order.\nCreates a view into the memory that then allows for read …\nBlocks the current thread until this condition variable …\nWaits on this condition variable for a notification, …\nWaits on this condition variable for a notification, …\nWaits on this condition variable for a notification, …\nBlocks the current thread until the provided condition …\nReturns a reference to the <code>Waker</code> for the current task.\nConstructs an event at the warn level.\nGets the number of <code>Weak</code> pointers to this allocation.\nAcquires a reference to the value in this TLS key.\nCreates an owned <code>PathBuf</code> like <code>self</code> but with the extension …\nAcquires a reference to the contained value.\nAcquires a mutable reference to the contained value.\nCreates a new <code>BytesMut</code> with the specified capacity.\nCreates an empty <code>HashMap</code> with at least the specified …\nCreates an empty <code>HashSet</code> with at least the specified …\nCreates an empty <code>HashMap</code> with at least the specified …\nCreates an empty <code>HashSet</code> with at least the specified …\nCreates an owned <code>PathBuf</code> like <code>self</code> but with the given …\nCreates an owned <code>PathBuf</code> like <code>self</code> but with the given file …\nCreates an empty <code>HashMap</code> which will use the given hash …\nCreates a new empty hash set which will use the given …\nWrites a buffer into this writer, returning how many bytes …\nWrites to the address pointed to by this <code>WasmPtr</code> in a …\nWrites a buffer into this writer, returning how many bytes …\nWrites to an element of this slice.\nSafely writes bytes to the memory at the given offset.\nAttempts to write an entire buffer into this writer.\nAttempts to write an entire buffer into this writer.\nAttempts to write an entire buffer into this writer.\nAttempts to write multiple buffers into this writer.\nWrites a buffer into this writer, advancing the buffer’s …\nWrites an 32-bit floating point type in big-endian order …\nWrites an 32-bit floating point type in little-endian …\nWrites an 64-bit floating point type in big-endian order …\nWrites an 64-bit floating point type in little-endian …\nWrites a formatted string into this writer, returning any …\nWrites to this file using an mmap offset and reference …\nWrites an signed 128-bit integer in big-endian order to the\nWrites an signed 128-bit integer in little-endian order to …\nWrites a signed 16-bit integer in big-endian order to the …\nWrites a signed 16-bit integer in little-endian order to …\nWrites a signed 32-bit integer in big-endian order to the …\nWrites a signed 32-bit integer in little-endian order to …\nWrites an signed 64-bit integer in big-endian order to the …\nWrites an signed 64-bit integer in little-endian order to …\nWrites a signed 8-bit integer to the underlying writer.\nWrite the given slice into this <code>WasmSlice</code>.\nWrites an unsigned 128-bit integer in big-endian order to …\nWrites an unsigned 128-bit integer in little-endian order …\nWrites an unsigned 16-bit integer in big-endian order to …\nWrites an unsigned 16-bit integer in little-endian order …\nWrites an unsigned 32-bit integer in big-endian order to …\nWrites an unsigned 32-bit integer in little-endian order …\nWrites an unsigned 64-bit integer in big-endian order to …\nWrites an unsigned 64-bit integer in little-endian order …\nWrites an unsigned 8-bit integer to the underlying writer.\nSafely writes a single byte from memory at the given offset\nLike <code>write</code>, except that it writes from a slice of buffers.\nLike <code>write</code>, except that it writes from a slice of buffers.\nCreates a new <code>BytesMut</code> containing <code>len</code> zeros.\nThe attempted amount to grow by in pages.\nThe current size in pages.\nThe maximum amount of memory we can allocate.\nThe number of pages requested as the maximum amount of …\nThe number of pages requested as the maximum amount of …\nMessage describing the unsupported operation.\nThe number of pages requested as the minimum amount of …\nThe reason why the provided memory is invalid.\nA socket address could not be bound because the address is …\nA nonexistent interface was requested or the requested …\nAn entity already exists, often a file.\nProgram argument list too long.\nA borrowed byte buffer which is incrementally filled and …\nA writeable view of the unfilled portion of a <code>BorrowedBuf</code>.\nThe operation failed because a pipe was closed.\nA <code>BufRead</code> is a type of <code>Read</code>er which has an internal …\nThe <code>BufReader&lt;R&gt;</code> struct adds buffering to any reader.\nWraps a writer and buffers its output.\nAn iterator over <code>u8</code> values of a reader.\nAdapter to chain together two readers.\nThe connection was aborted (terminated) by the remote …\nThe connection was refused by the remote server.\nThe connection was reset by the remote server.\nCross-device or cross-filesystem (hard) link or rename.\nSets the offset to the current position plus the specified …\nA <code>Cursor</code> wraps an in-memory buffer and provides it with a …\nDeadlock (avoided).\nA non-empty directory was specified where an empty …\n<code>Empty</code> ignores any data written via <code>Write</code>, and will always …\nSets the offset to the size of this object plus the …\nContains the error value\nThe error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…\nA list specifying general categories of I/O error.\nExecutable file is busy.\nFile larger than allowed or supported.\nLoop in the filesystem or IO subsystem; often, too many …\nFilesystem quota was exceeded.\nThe remote host is not reachable.\nThe operation was partially successful and needs to be …\nThis operation was interrupted.\nAn error returned by <code>BufWriter::into_inner</code> which combines …\nData not valid for the operation were encountered.\nA filename was invalid.\nA parameter was incorrect.\nA buffer type used with <code>Write::write_vectored</code>.\nA buffer type used with <code>Read::read_vectored</code>.\nThe filesystem object is, unexpectedly, a directory.\nTrait to determine if a descriptor/handle refers to a …\nWraps a writer and buffers output to it, flushing whenever …\nAn iterator over the lines of an instance of <code>BufRead</code>.\nThe system’s networking is down.\nThe network containing the remote host is not reachable.\nA filesystem object is, unexpectedly, not a directory.\nThe network operation failed because it was not connected …\nAn entity was not found, often a file.\nSeek on unseekable file.\nContains the success value\nA custom error that does not fall under any other I/O …\nAn operation could not be completed, because it failed to …\nThe operation lacked the necessary privileges to complete.\nThe type of raw OS error codes returned by …\nThe <code>Read</code> trait allows for reading bytes from a source.\nThe filesystem or storage medium is read-only, but a write …\nA reader which yields one byte over and over and over and …\nResource is busy.\nA specialized <code>Result</code> type for I/O operations.\nThe <code>Seek</code> trait provides a cursor which can be moved within …\nEnumeration of possible methods to seek within an I/O …\nA writer which will move data into the void.\nAn iterator over the contents of an instance of <code>BufRead</code> …\nStale network file handle.\nSets the offset to the provided number of bytes.\nA handle to the standard error stream of a process.\nA locked reference to the <code>Stderr</code> handle.\nA handle to the standard input stream of a process.\nA locked reference to the <code>Stdin</code> handle.\nA handle to the global standard output stream of the …\nA locked reference to the <code>Stdout</code> handle.\nThe underlying storage (typically, a filesystem) is full.\nReader adapter which limits the bytes read from an …\nThe I/O operation’s timeout expired, causing it to be …\nToo many (hard) links to the same filesystem object.\nAn error returned when an operation could not be completed …\nThis operation is unsupported on this platform.\nThe operation needs to block to complete, but the blocking …\nA trait for objects which are byte-oriented sinks.\nAn error returned when an operation could not be completed …\nError returned for the buffered data from …\nAdvance the internal cursor of the slice.\nAdvance the internal cursor of the slice.\nAdvances the cursor by asserting that <code>n</code> bytes have been …\nAdvance a slice of slices.\nAdvance a slice of slices.\nAdvances the cursor by asserting that <code>n</code> bytes have been …\nAppends data to the cursor, advancing position within its …\nReturns a mutable reference to the whole cursor.\nGet the underlying bytes as a slice with the original …\nReturns a reference to the internally buffered data.\nReturns a reference to the internally buffered data.\nCreates a “by reference” adaptor for this instance of …\nCreates a “by reference” adapter for this instance of …\nTransforms this <code>Read</code> instance to an <code>Iterator</code> over its …\nReturns the number of bytes the internal buffer can hold …\nReturns the number of bytes the internal buffer can hold …\nReturns the total capacity of the buffer.\nReturns the available space in the cursor.\nCreates an adapter which will chain this stream with …\nClears the buffer, resetting the filled region to empty.\nTells this buffer that <code>amt</code> bytes have been consumed from …\nCopies the entire contents of a reader into a writer.\nAttempts to downcast the custom boxed error to <code>E</code>.\nCreates a value that is always at EOF for reads, and …\nInitializes all bytes in the cursor.\nReturns the error which caused the call to …\nReturns the contents of the internal buffer, filling it …\nReturns a shared reference to the filled portion of the …\nReturns a mutable reference to the filled portion of the …\nFlushes this output stream, ensuring that all …\nShows a human-readable description of the <code>ErrorKind</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert the <code>Error</code> to an <code>io::Error</code>, preserving the original …\nConverts an <code>ErrorKind</code> into an <code>Error</code>.\nConverts <code>TryReserveError</code> to an error with …\nReturns the argument unchanged.\nConvert a <code>serde_json::Error</code> into an <code>io::Error</code>.\nConverts a <code>alloc::ffi::NulError</code> into a <code>Error</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new instance of an <code>Error</code> from a particular OS …\nGets a mutable reference to the underlying reader.\nGets a mutable reference to the underlying writer.\nGets a mutable reference to the underlying writer.\nReturns a mutable reference to the inner error wrapped by …\nGets a mutable reference to the underlying value in this …\nGets mutable references to the underlying readers in this …\nGets a mutable reference to the underlying reader.\nGets a reference to the underlying reader.\nGets a reference to the underlying writer.\nGets a reference to the underlying writer.\nReturns a reference to the inner error wrapped by this …\nGets a reference to the underlying value in this cursor.\nGets references to the underlying readers in this <code>Chain</code>.\nGets a reference to the underlying reader.\nChecks if the underlying <code>Read</code> has any data left to be read.\nReturns the length of the initialized part of the buffer.\nReturns a mutable reference to the initialized portion of …\nReturns a shared reference to the initialized portion of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the <code>IntoInnerError</code> and returns the error which …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nUnwraps this <code>BufReader&lt;R&gt;</code>, returning the underlying reader.\nUnwraps this <code>BufWriter&lt;W&gt;</code>, returning the underlying writer.\nReturns the perhaps-unwritten data.  Some of this data may …\nUnwraps this <code>LineWriter</code>, returning the underlying writer.\nConsumes the <code>Error</code>, returning its inner error (if any).\nReturns the buffered writer instance which generated the …\nConsumes this cursor, returning the underlying value.\nConsumes the <code>Chain</code>, returning the wrapped readers.\nConsumes the <code>Take</code>, returning the wrapped reader.\nDisassembles this <code>BufWriter&lt;W&gt;</code>, returning the underlying …\nConsumes the <code>IntoInnerError</code> and returns the error which …\nGet the underlying bytes as a mutable slice with the …\nDetermines if this <code>Read</code>er has an efficient <code>read_vectored</code> …\nReturns <code>true</code> if the descriptor/handle refers to a …\nDetermines if this <code>Write</code>r has an efficient <code>write_vectored</code> …\nReturns the corresponding <code>ErrorKind</code> for this error.\nReturns an error representing the last OS error which …\nReturns the length of the filled part of the buffer.\nReturns the number of bytes that can be read before this …\nConsumes this handle and returns an iterator over input …\nReturns an iterator over the lines of this reader.\nLocks this handle to the standard input stream, returning …\nLocks this handle to the standard output stream, returning …\nLocks this handle to the standard error stream, returning …\nCreates a new <code>BufReader&lt;R&gt;</code> with a default buffer capacity. …\nCreates a new <code>BufWriter&lt;W&gt;</code> with a default buffer capacity. …\nCreates a new <code>LineWriter</code>.\nCreates a new I/O error from a known kind of error as well …\nCreates a new <code>IoSliceMut</code> wrapping a byte slice.\nCreates a new cursor wrapping the provided underlying …\nCreates a new <code>IoSlice</code> wrapping a byte slice.\nCreates a new I/O error from an arbitrary error payload.\nAttempt to look ahead <code>n</code> bytes.\nReturns the current position of this cursor.\nThe I/O Prelude.\nReturns the OS error that this error represents (if any).\nPull some bytes from this source into the specified …\nPull some bytes from this source into the specified buffer.\nReads the exact number of bytes required to fill <code>cursor</code>.\nReads the exact number of bytes required to fill <code>buf</code>.\nLocks this handle and reads a line of input, appending it …\nReads all bytes until a newline (the <code>0xA</code> byte) is reached, …\nThis function is not supported by <code>io::Repeat</code>, because there…\nReads all bytes until EOF in this source, placing them …\nReads all bytes from a reader into a new <code>String</code>.\nThis function is not supported by <code>io::Repeat</code>, because there…\nReads all bytes until EOF in this source, appending them …\nReads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …\nLike <code>read</code>, except that it reads into a slice of buffers.\nReborrows this cursor by cloning it with a smaller …\nCreates an instance of a reader that infinitely repeats …\nRewind to the beginning of a stream.\nSeek to an offset, in bytes, in a stream.\nSeek to an offset, in bytes, in the underlying reader.\nSeek to the offset, in bytes, in the underlying writer.\nSeeks relative to the current position. If the new …\nSeeks relative to the current position.\nSeeks relative to the current position.\nAsserts that the first <code>n</code> bytes of the buffer are …\nAsserts that the first <code>n</code> unfilled bytes of the cursor are …\nSets the number of bytes that can be read before this …\nSets the position of this cursor.\nCreates an instance of a writer which will successfully …\nSkips all bytes until the delimiter <code>byte</code> or EOF is reached.\nReturns an iterator over the contents of this reader split …\nSplits the underlying slice at the cursor position and …\nSplits the underlying slice at the cursor position and …\nConstructs a new handle to the standard error of the …\nConstructs a new handle to the standard input of the …\nConstructs a new handle to the standard output of the …\nReturns the length of this stream (in bytes).\nReturns the current seek position from the start of the …\nReturns the current seek position from the start of the …\nCreates an adapter which will read at most <code>limit</code> bytes …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns a cursor over the unfilled part of the buffer.\nReturns a mutable reference to the uninitialized part of …\nCreates a new <code>BufReader&lt;R&gt;</code> with the specified buffer …\nCreates a new <code>BufWriter&lt;W&gt;</code> with at least the specified …\nCreates a new <code>LineWriter</code> with at least the specified …\nWrites a buffer into this writer, returning how many bytes …\nAttempts to write an entire buffer into this writer.\nAttempts to write multiple buffers into this writer.\nWrites a formatted string into this writer, returning any …\nLike <code>write</code>, except that it writes from a slice of buffers.\nReturns the number of bytes written to this cursor since …\nA <code>BufRead</code> is a type of <code>Read</code>er which has an internal …\nThe <code>Read</code> trait allows for reading bytes from a source.\nThe <code>Seek</code> trait provides a cursor which can be moved within …\nA trait for objects which are byte-oriented sinks.\nCreates a “by reference” adaptor for this instance of …\nCreates a “by reference” adapter for this instance of …\nTransforms this <code>Read</code> instance to an <code>Iterator</code> over its …\nCreates an adapter which will chain this stream with …\nTells this buffer that <code>amt</code> bytes have been consumed from …\nReturns the contents of the internal buffer, filling it …\nFlushes this output stream, ensuring that all …\nChecks if the underlying <code>Read</code> has any data left to be read.\nDetermines if this <code>Read</code>er has an efficient <code>read_vectored</code> …\nDetermines if this <code>Write</code>r has an efficient <code>write_vectored</code> …\nReturns an iterator over the lines of this reader.\nPull some bytes from this source into the specified …\nPull some bytes from this source into the specified buffer.\nReads the exact number of bytes required to fill <code>cursor</code>.\nReads the exact number of bytes required to fill <code>buf</code>.\nReads all bytes until a newline (the <code>0xA</code> byte) is reached, …\nReads all bytes until EOF in this source, placing them …\nReads all bytes until EOF in this source, appending them …\nReads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …\nLike <code>read</code>, except that it reads into a slice of buffers.\nRewind to the beginning of a stream.\nSeek to an offset, in bytes, in a stream.\nSeeks relative to the current position.\nSkips all bytes until the delimiter <code>byte</code> or EOF is reached.\nReturns an iterator over the contents of this reader split …\nReturns the length of this stream (in bytes).\nReturns the current seek position from the start of the …\nCreates an adapter which will read at most <code>limit</code> bytes …\nWrites a buffer into this writer, returning how many bytes …\nAttempts to write an entire buffer into this writer.\nAttempts to write multiple buffers into this writer.\nWrites a formatted string into this writer, returning any …\nLike <code>write</code>, except that it writes from a slice of buffers.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSafety: This function manipulates the memory of the …\nWrapper around <code>syscalls::fd_filestat_get</code> for old Snapshot0\nWrapper around <code>syscalls::fd_seek</code> with extra logic to remap …\nWrapper around <code>syscalls::path_filestat_get</code> for old …\nWrapper around <code>syscalls::poll_oneoff</code> with extra logic to …\nThe <strong>channel</strong>’s sending half has become disconnected, and …\nThe <strong>channel</strong>’s sending half has become disconnected, and …\nThis <code>sync_channel</code>’s receiving half has disconnected, so …\nThis <strong>channel</strong> is currently empty, but the <strong>Sender</strong>(s) have …\nThe data could not be sent on the <code>sync_channel</code> because it …\nAn owning iterator over messages on a <code>Receiver</code>, created by …\nAn iterator over messages on a <code>Receiver</code>, created by <code>iter</code>.\nThe receiving half of Rust’s <code>channel</code> (or <code>sync_channel</code>) …\nAn error returned from the <code>recv</code> function on a <code>Receiver</code>.\nThis enumeration is the list of possible errors that made …\nAn error returned from the <code>Sender::send</code> or <code>SyncSender::send</code>\nThe sending-half of Rust’s asynchronous <code>channel</code> type.\nThe sending-half of Rust’s synchronous <code>sync_channel</code> type.\nThis <strong>channel</strong> is currently empty, but the <strong>Sender</strong>(s) have …\nAn iterator that attempts to yield all pending values for …\nThis enumeration is the list of the possible reasons that …\nThis enumeration is the list of the possible error …\nCreates a new asynchronous channel, returning the …\nClone a sender to send to other threads.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>RecvError</code> into a <code>TryRecvError</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>RecvError</code> into a <code>RecvTimeoutError</code>.\nConverts a <code>SendError&lt;T&gt;</code> into a <code>TrySendError&lt;T&gt;</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nReturns an iterator that will block waiting for messages, …\nAttempts to wait for a value on this receiver, returning …\nAttempts to wait for a value on this receiver, returning …\nAttempts to wait for a value on this receiver, returning …\nAttempts to send a value on this channel, returning it …\nSends a value on this synchronous channel.\nCreates a new synchronous, bounded channel.\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nReturns an iterator that will attempt to yield all pending …\nAttempts to return a pending value on this receiver …\nAttempts to send a value on this channel without blocking.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nThe time value of clock <code>subscription_clock::id</code> has reached …\nType of a subscription to an event or its occurrence.\nFile descriptor <code>subscription_fd_readwrite::fd</code> has data …\nFile descriptor <code>subscription_fd_readwrite::fd</code> has capacity …\nOpen flags used by <code>path_open</code>. TODO: wit appears to not …\n__wasi_option_t\nAn event that occurred. The contents of an <code>event</code>. An event …\nEvent type is unknown\nThe file descriptor on which to wait for it to become …\nfunction for debugging rights issues\nOpen flags used by <code>path_open</code>. TODO: wit appears to not …\nfunction for debugging rights issues\n__wasi_option_t\nThe time value of clock <code>subscription_clock::id</code> has reached …\nType of a subscription to an event or its occurrence.\nFile descriptor <code>subscription_fd_readwrite::fd</code> has data …\nFile descriptor <code>subscription_fd_readwrite::fd</code> has capacity …\nAn event that occurred. The contents of an <code>event</code>. An event …\nEvent type is unknown\nThe file descriptor on which to wait for it to become …\nPermission denied.\nAdd an entry to the interest list of the epoll file …\nAddress in use.\nAddress not available.\nFile or memory access pattern advisory information.\nAddress family not supported.\nResource unavailable, or operation would block.\nConnection already in progress.\nBad file descriptor.\nBad message.\nThe file descriptor or file refers to a block device inode.\nDevice or resource busy.\nOperation canceled.\nThe file descriptor or file refers to a character device …\nNo child processes.\nThe time value of clock <code>subscription_clock::id</code> has reached …\nIdentifiers for clocks.\nConnection aborted.\nConnection refused.\nConnection reset.\nResource deadlock would occur.\nRemove (deregister) the target file descriptor fd from the …\nDestination address required.\nIdentifier for a device containing a file system. Can be …\nA pre-opened directory.\nA reference to the offset of a directory entry.\nThe file descriptor or file refers to a directory inode.\nA directory entry.\nThe type for the <code>dirent::d-namlen</code> field of <code>dirent</code> struct.\nMathematics argument out of domain of function.\nThe application expects that it will not access the …\nReserved.\nEpoll operation.\nAn event that can be triggered\nAn event that can be triggered\nEpoll available event types.\nError codes returned by functions. Not all of these error …\nRepresents an errno and a signal\nAn event that occurred.\nThe contents of an <code>event</code> for the <code>eventtype::fd_read</code> and …\nThe contents of an <code>event</code>.\nThe state of the file descriptor subscribed to with …\nType of a subscription to an event or its occurrence.\nFile exists.\nThe process has exited by a normal exit code\nThe process was terminated by a signal\nA f32 parameter.\nA f64 parameter.\nBad address.\nFile too large.\nA file descriptor handle.\nFile descriptor <code>subscription_fd_readwrite::fd</code> has data …\nFile descriptor <code>subscription_fd_readwrite::fd</code> has capacity …\nFile descriptor flags.\nFile descriptor attributes.\nNon-negative file size or length of a region within a file.\nThe type of a file descriptor or file.\nWhich file time attributes to adjust. TODO: wit appears to …\nHost is unreachable.\nA i32 parameter.\nA i64 parameter.\nIdentifier removed.\nIllegal byte sequence.\nFile serial number that is unique within its file system.\nOperation in progress.\nInterrupted function.\nInvalid argument.\nI/O error.\nSocket is connected.\nIs a directory.\njoin flags.\nWhat has happened with the proccess when we joined on it\nLong size used by checkpoints\nFlags determining the method of how paths are resolved. …\nToo many levels of symbolic links.\nMemory access violation.\nFile descriptor value too large.\nToo many links.\nChange the settings associated with fd in the interest …\nThe store-wide monotonic clock, which is defined as a …\nThe store-wide monotonic clock, which is defined as a …\nMessage too large.\nReserved.\nFilename too long.\nNetwork is down.\nConnection aborted by network.\nNetwork unreachable.\nToo many files open in system.\nNo buffer space available.\nNo such device.\nNo such file or directory.\nExecutable file format error.\nNo locks available.\nReserved.\nNot enough space.\nNo message of the desired type.\nProtocol not available.\nThe application expects to access the specified data once …\nThe application has no advice to give on its behavior with …\nNo space left on device.\nFunction not supported.\nExtension: Capabilities insufficient.\nThe socket is not connected.\nNot a directory or a symbolic link to a directory.\nDirectory not empty.\nNothing has happened\nState not recoverable.\nNot a socket.\nNot supported, or operation not supported on socket.\nInappropriate I/O control operation.\nNo such device or address.\nOpen flags used by <code>path_open</code>. TODO: wit appears to not …\n__wasi_option_t\nValue too large to be stored in data type.\nPrevious owner died.\nOperation not permitted.\nBroken pipe.\nIdentifiers for preopened capabilities.\nAn FD operation performed during proc_spawn2, which is the …\nThe CPU-time clock associated with the current process.\nThe CPU-time clock associated with the current process.\nProtocol error.\nProtocol not supported.\nProtocol wrong type for socket.\nThe application expects to access the specified data in a …\nResult too large.\nThe clock measuring real time. Time value zero corresponds …\nThe clock measuring real time. Time value zero corresponds …\nA structure representing the reflection information for a …\nThe file descriptor or file refers to a regular file inode.\nFile descriptor rights, determining which actions may be …\nRead-only file system.\nThe application expects to access the specified data …\nCannot send after socket shutdown.\nA signal and its corresponding action.\nType names used by low-level WASI interfaces. An array …\nIdentifiers for clocks, snapshot0 version.\nA directory entry, snapshot0 version.\nAn event that occurred.\nThe contents of a <code>subscription</code> when type is …\nThe contents of a <code>subscription</code>, snapshot0 version.\nThe file descriptor or file refers to a datagram socket.\nThe file descriptor or file refers to a raw socket.\nThe file descriptor or file refers to a sequential packet …\nThe file descriptor or file refers to a byte-stream socket.\nInvalid seek.\nNo such process.\nReserved.\nThe process was stopped by a signal and can be resumed …\nFlags determining how to interpret the timestamp provided …\nThe contents of a <code>subscription</code> when type is …\nAn event that occurred. The contents of an <code>event</code>. An event …\nThe contents of a <code>subscription</code>.\nNo error occurred. System call completed successfully.\nThe file refers to a symbolic link inode.\nThe CPU-time clock associated with the current thread.\nThe CPU-time clock associated with the current thread.\nRepresents the thread start object\nthread state flags\nConnection timed out.\nTimestamp in nanoseconds.\nThread local key\nThread local user data (associated with the value)\nThread local value\nArgument list too long.\nText file busy.\nThe clock type is not known.\nThe clock type is unknown.\nAn unknown error has occured\nThe type of the file descriptor or file is unknown or is …\nThe application expectations are unknown.\nEvent type is unknown\nUnknown.\nUnknown.\nUser-provided value that may be attached to objects that …\nA v128 parameter.\nThe type of a WASM value represented at runtime for use …\nThe application expects to access the specified data in …\nCross-device link.\nNumber of arguments the function takes\nWhether the result is cacheable\nThe clock against which to compare the timestamp.\nThe serial number of the file referred to by this …\nThe serial number of the file referred to by this …\nThe length of the name of the directory entry.\nThe length of the name of the directory entry.\nThe offset of the next directory entry stored in this …\nThe offset of the next directory entry stored in this …\nThe type of the file referred to by this directory entry.\nThe type of the file referred to by this directory entry.\nFile descriptor\nAssociated user data\nAssociated user data\nIf non-zero, an error that occurred while processing the …\nIf non-zero, an error that occurred while processing the …\nPointer to the data\nThe exit code that was returned\nFile descriptor\nThe contents of the event, if it is an <code>eventtype::fd_read</code> …\nThe file descriptor on which to wait for it to become …\nFlags specifying whether the timeout is absolute or …\nFlags specifying whether the timeout is absolute or …\nThe state of the file descriptor.\nFile type.\nFile descriptor flags.\nRights that apply to this file descriptor.\nMaximum set of rights that may be installed on new file …\nThe clock against which to compare the timestamp.\nThe user-defined unique identifier of the clock.\nThe number of bytes available for reading or writing.\nThe amount of time that the implementation may wait …\nThe amount of time that the implementation may wait …\nPointer to the data\nNumber of results the function returns\nThe signal that was returned\nThe absolute or relative timestamp.\nThe absolute or relative timestamp.\nType of event that was triggered\nThe type of event that occured\nThe type of the event that occurred, and the contents of …\nUser-provided value that got attached to …\nUser-provided value that got attached to …\n<code>args_get()</code>\n<code>args_sizes_get()</code>\n<code>clock_res_get()</code>\n<code>clock_time_get()</code>\n<code>clock_time_set()</code>\n<code>environ_get()</code>\n<code>environ_sizes_get()</code>\n<code>fd_advise()</code>\n<code>fd_allocate</code>\n<code>fd_close()</code>\n<code>fd_datasync()</code>\n<code>fd_dup()</code>\n<code>fd_event()</code>\n<code>fd_fdstat_get()</code>\n<code>fd_fdstat_set_flags()</code>\n<code>fd_fdstat_set_rights()</code>\n<code>fd_filestat_get()</code>\n<code>fd_filestat_get()</code>\n<code>fd_filestat_get_old()</code>\n<code>fd_filestat_set_size()</code>\n<code>fd_filestat_set_times()</code>\n<code>fd_prestat_get()</code>\n<code>fd_pread()</code>\n<code>fd_read()</code>\n<code>fd_readdir()</code>\n<code>fd_renumber()</code>\n<code>fd_seek()</code>\n<code>fd_sync()</code>\n<code>fd_tell()</code>\n<code>fd_pwrite()</code>\n<code>fd_write()</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>path_create_directory()</code>\n<code>path_filestat_get()</code>\n<code>path_filestat_get_internal()</code>\n<code>path_filestat_get_old()</code>\n<code>path_filestat_set_times()</code>\n<code>path_link()</code>\n<code>path_open()</code>\n<code>path_readlink()</code>\nReturns Errno::Notemtpy if directory is not empty\n<code>path_rename()</code>\n<code>path_symlink()</code>\n<code>path_unlink_file()</code>\nAn event that occurred.\nAn event that occurred.\nIf non-zero, an error that occurred while processing the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe type of the event that occurred, and the contents of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>poll_oneoff()</code>\n<code>poll_oneoff()</code>\nType of event that was triggered\nUser-provided value that got attached to …\n<code>proc_exit()</code>\n<code>proc_raise()</code>\n<code>proc_raise()</code>\n<code>random_get()</code>\n<code>thread_spawn()</code>\nClosures provide a way to generate a WASM function that …\nCall a function from the <code>__indirect_function_table</code> with …\n<code>callback_signal()</code>\n<code>chdir()</code>\nAllocate a new slot in the __indirect_function_table for a …\nFree a previously allocated slot for a closure in the …\nBuild a dynamically linkable WASM module for the given …\nPrepare a closure so that it can be called with a given …\n<code>epoll_create()</code>\n<code>epoll_ctl()</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>epoll_wait()</code>\n<code>fd_dup()</code>\n<code>fd_fdstat_get()</code>\n<code>fd_fdstat_set_flags()</code>\n<code>fd_pipe()</code>\nPoller returns true if its triggered and false if it times …\nReturns the argument unchanged.\nWait for a futex_wake operation to wake us. Returns with …\nCalls <code>U::from(self)</code>.\nWake up one thread that’s blocked on futex_wait on this …\nWake up all threads that are waiting on futex_wait on this …\n<code>getcwd()</code>\n<code>path_open()</code>\n<code>port_addr_add()</code>\n<code>port_addr_clear()</code>\n<code>port_ip_list()</code>\n<code>port_addr_remove()</code>\n<code>port_bridge()</code>\n<code>port_dhcp_acquire()</code>\n<code>port_gateway_set()</code>\n<code>port_mac()</code>\n<code>port_route_add()</code>\n<code>port_route_clear()</code>\n<code>port_route_list()</code>\n<code>port_route_remove()</code>\n<code>port_unbridge()</code>\nReplaces the current process with a new process\nReplaces the current process with a new process\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReplaces the current process with a new process\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>proc_fork()</code>\n<code>proc_id()</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>proc_join()</code>\n<code>proc_parent()</code>\n<code>proc_signal()</code>\n<code>proc_signals_get()</code>\n<code>proc_signals_count_get()</code>\nExplicitly snapshots the process state.\nSpawns a new process within the context of this machine\nReplaces the current process with a new process\nProvides information about a function’s signature.\n<code>resolve()</code>\n<code>sched_yield()</code>\n<code>sock_accept()</code>\n<code>sock_accept_v2()</code>\n<code>sock_addr_local()</code>\n<code>sock_addr_peer()</code>\n<code>sock_bind()</code>\n<code>sock_connect()</code>\n<code>sock_get_opt_flag()</code>\n<code>sock_get_opt_size()</code>\n<code>sock_get_opt_time()</code>\n<code>sock_join_multicast_v4()</code>\n<code>sock_join_multicast_v6()</code>\n<code>sock_leave_multicast_v4()</code>\n<code>sock_leave_multicast_v6()</code>\n<code>sock_listen()</code>\n<code>sock_open()</code>\n<code>sock_pair()</code>\n<code>sock_recv()</code>\n<code>sock_recv()</code>\n<code>sock_recv_from()</code>\n<code>sock_send()</code>\n<code>sock_send_file()</code>\n<code>sock_send_to()</code>\n<code>sock_set_opt_flag()</code>\n`sock_set_opt_size()\n<code>sock_set_opt_time()</code>\n<code>sock_shutdown()</code>\n<code>sock_status()</code>\n<code>stack_checkpoint()</code>\n<code>stack_restore()</code>\n<code>thread_exit()</code>\n<code>thread_id()</code>\n<code>thread_join()</code>\n<code>thread_parallelism()</code>\n<code>thread_signal()</code>\n<code>thread_sleep()</code>\nCalls the module\n<code>thread_spawn()</code>\n<code>tty_get()</code>\n<code>tty_set()</code>\nCreate file if it does not exist.\nThe time value of clock <code>subscription_clock::id</code> has reached …\nFail if not a directory.\nFail if file already exists.\nType of a subscription to an event or its occurrence.\nFile descriptor <code>subscription_fd_readwrite::fd</code> has data …\nFile descriptor <code>subscription_fd_readwrite::fd</code> has capacity …\nOpen flags used by <code>path_open</code>. TODO: wit appears to not …\n__wasi_option_t\nAn event that occurred. The contents of an <code>event</code>. An event …\nTruncate file to size 0.\nEvent type is unknown\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nThe file descriptor on which to wait for it to become …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from a raw integer, preserving any unknown bits. …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nfunction for debugging rights issues\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nOpen flags used by <code>path_open</code>. TODO: wit appears to not …\nfunction for debugging rights issues\n__wasi_option_t\nThe time value of clock <code>subscription_clock::id</code> has reached …\nType of a subscription to an event or its occurrence.\nFile descriptor <code>subscription_fd_readwrite::fd</code> has data …\nFile descriptor <code>subscription_fd_readwrite::fd</code> has capacity …\nAn event that occurred. The contents of an <code>event</code>. An event …\nEvent type is unknown\nThe file descriptor on which to wait for it to become …\nAppend mode: Data written to the file is always appended …\nPermission denied.\nAdd an entry to the interest list of the epoll file …\nAddress in use.\nAddress not available.\nFile or memory access pattern advisory information.\nAddress family not supported.\nResource unavailable, or operation would block.\nConnection already in progress.\nBad file descriptor.\nBad message.\nThe file descriptor or file refers to a block device inode.\nDevice or resource busy.\nClose this file in the child process when spawning one.\nOperation canceled.\nThe file descriptor or file refers to a character device …\nNo child processes.\nThe time value of clock <code>subscription_clock::id</code> has reached …\nIdentifiers for clocks.\nConnection aborted.\nConnection refused.\nConnection reset.\nWrite according to synchronized I/O data integrity …\nResource deadlock would occur.\nRemove (deregister) the target file descriptor fd from the …\nDestination address required.\nIdentifier for a device containing a file system. Can be …\nA pre-opened directory.\nA reference to the offset of a directory entry.\nThe file descriptor or file refers to a directory inode.\nA directory entry.\nThe type for the <code>dirent::d-namlen</code> field of <code>dirent</code> struct.\nMathematics argument out of domain of function.\nThe application expects that it will not access the …\nReserved.\nError condition happened on the associated file …\nRequests edge-triggered notification for the associated …\nHang up happened on the associated file descriptor.\nThe associated file is available for read(2) operations.\nRequests one-shot notification for the associated file …\nThe associated file is available for write(2) operations.\nThere is an exceptional condition on the file descriptor. …\nStream socket peer closed connection, or shut down writing …\nEpoll operation.\nAn event that can be triggered\nAn event that can be triggered\nEpoll available event types.\nError codes returned by functions. Not all of these error …\nRepresents an errno and a signal\nAn event that occurred.\nThe contents of an <code>event</code> for the <code>eventtype::fd_read</code> and …\nThe contents of an <code>event</code>.\nThe state of the file descriptor subscribed to with …\nType of a subscription to an event or its occurrence.\nFile exists.\nThe process has exited by a normal exit code\nThe process was terminated by a signal\nA f32 parameter.\nA f64 parameter.\nThe right to invoke <code>fd_advise</code>.\nThe right to invoke <code>fd_allocate</code>.\nThe right to invoke <code>fd_datasync</code>.\nThe right to invoke <code>fd_fdstat_set_flags</code>.\nThe right to invoke <code>fd_filestat_get</code>.\nThe right to invoke <code>fd_filestat_set_size</code>.\nThe right to invoke <code>fd_filestat_set_times</code>.\nThe right to invoke <code>fd_read</code> and <code>sock_recv</code>.\nThe right to invoke <code>fd_readdir</code>.\nThe peer of this socket has closed or disconnected.\nThe right to invoke <code>fd_seek</code>. This flag implies …\nThe right to invoke <code>fd_sync</code>.\nThe right to invoke <code>fd_seek</code> in such a way that the file …\nThe right to invoke <code>fd_write</code> and <code>sock_send</code>. If …\nBad address.\nFile too large.\nA file descriptor handle.\nFile descriptor <code>subscription_fd_readwrite::fd</code> has data …\nFile descriptor <code>subscription_fd_readwrite::fd</code> has capacity …\nFile descriptor flags.\nFile descriptor attributes.\nNon-negative file size or length of a region within a file.\nThe type of a file descriptor or file.\nWhich file time attributes to adjust. TODO: wit appears to …\nHost is unreachable.\nA i32 parameter.\nA i64 parameter.\nIdentifier removed.\nIllegal byte sequence.\nFile serial number that is unique within its file system.\nOperation in progress.\nInterrupted function.\nInvalid argument.\nI/O error.\nSocket is connected.\nIs a directory.\njoin flags.\nWhat has happened with the proccess when we joined on it\nLong size used by checkpoints\nFlags determining the method of how paths are resolved. …\nToo many levels of symbolic links.\nMemory access violation.\nFile descriptor value too large.\nToo many links.\nChange the settings associated with fd in the interest …\nThe store-wide monotonic clock, which is defined as a …\nThe store-wide monotonic clock, which is defined as a …\nMessage too large.\nReserved.\nNon-blocking mode.\nNon-blocking join on the process\nFilename too long.\nNetwork is down.\nConnection aborted by network.\nNetwork unreachable.\nToo many files open in system.\nNo buffer space available.\nNo such device.\nNo such file or directory.\nExecutable file format error.\nNo locks available.\nReserved.\nNot enough space.\nNo message of the desired type.\nProtocol not available.\nThe application expects to access the specified data once …\nThe application has no advice to give on its behavior with …\nNo space left on device.\nFunction not supported.\nExtension: Capabilities insufficient.\nThe socket is not connected.\nNot a directory or a symbolic link to a directory.\nDirectory not empty.\nNothing has happened\nState not recoverable.\nNot a socket.\nNot supported, or operation not supported on socket.\nInappropriate I/O control operation.\nNo such device or address.\nOpen flags used by <code>path_open</code>. TODO: wit appears to not …\n__wasi_option_t\nValue too large to be stored in data type.\nPrevious owner died.\nThe right to invoke <code>path_create_directory</code>.\nIf <code>rights::path_open</code> is set, the right to invoke <code>path_open</code> …\nThe right to invoke <code>path_filestat_get</code>.\nThe right to change a file’s size (there is no …\nThe right to invoke <code>path_filestat_set_times</code>.\nThe right to invoke <code>path_link</code> with the file descriptor as …\nThe right to invoke <code>path_link</code> with the file descriptor as …\nThe right to invoke <code>path_open</code>.\nThe right to invoke <code>path_readlink</code>.\nThe right to invoke <code>path_remove_directory</code>.\nThe right to invoke <code>path_rename</code> with the file descriptor …\nThe right to invoke <code>path_rename</code> with the file descriptor …\nThe right to invoke <code>path_symlink</code>.\nThe right to invoke <code>path_unlink_file</code>.\nIf <code>rights::fd_read</code> is set, includes the right to invoke …\nOperation not permitted.\nBroken pipe.\nIdentifiers for preopened capabilities.\nAn FD operation performed during proc_spawn2, which is the …\nThe CPU-time clock associated with the current process.\nThe CPU-time clock associated with the current process.\nProtocol error.\nProtocol not supported.\nProtocol wrong type for socket.\nSynchronized read I/O operations.\nThe application expects to access the specified data in a …\nResult too large.\nThe clock measuring real time. Time value zero corresponds …\nThe clock measuring real time. Time value zero corresponds …\nA structure representing the reflection information for a …\nThe file descriptor or file refers to a regular file inode.\nFile descriptor rights, determining which actions may be …\nRead-only file system.\nAdjust the last data access timestamp to the value stored …\nAdjust the last data access timestamp to the time of clock …\nAdjust the last data modification timestamp to the value …\nAdjust the last data modification timestamp to the time of …\nTODO: Found in wasmer-wasi-types rust project, but not in …\nTODO: Found in wasmer-wasi-types rust project, but not in …\nTODO: Found in wasmer-wasi-types rust project, but not in …\nTODO: Found in wasmer-wasi-types rust project, but not in …\nTODO: Found in wasmer-wasi-types rust project, but not in …\nTODO: Found in wasmer-wasi-types rust project, but not in …\nTODO: Found in wasmer-wasi-types rust project, but not in …\nTODO: Found in wasmer-wasi-types rust project, but not in …\nTODO: Found in wasmer-wasi-types rust project, but not in …\nTODO: Found in wasmer-wasi-types rust project, but not in …\nThe right to invoke <code>sock_shutdown</code>.\nIf set, treat the timestamp provided in …\nAs long as the resolved path corresponds to a symbolic …\nWrite according to synchronized I/O file integrity …\nThe application expects to access the specified data …\nCannot send after socket shutdown.\nA signal and its corresponding action.\nType names used by low-level WASI interfaces. An array …\nIdentifiers for clocks, snapshot0 version.\nA directory entry, snapshot0 version.\nAn event that occurred.\nThe contents of a <code>subscription</code> when type is …\nThe contents of a <code>subscription</code>, snapshot0 version.\nThe file descriptor or file refers to a datagram socket.\nThe file descriptor or file refers to a raw socket.\nThe file descriptor or file refers to a sequential packet …\nThe file descriptor or file refers to a byte-stream socket.\nInvalid seek.\nNo such process.\nReserved.\nThe process was stopped by a signal and can be resumed …\nFlags determining how to interpret the timestamp provided …\nThe contents of a <code>subscription</code> when type is …\nAn event that occurred. The contents of an <code>event</code>. An event …\nThe contents of a <code>subscription</code>.\nNo error occurred. System call completed successfully.\nThe file refers to a symbolic link inode.\nThe CPU-time clock associated with the current thread.\nThe CPU-time clock associated with the current thread.\nRepresents the thread start object\nthread state flags\nConnection timed out.\nTimestamp in nanoseconds.\nThread local key\nThread local user data (associated with the value)\nThread local value\nArgument list too long.\nText file busy.\nThe clock type is not known.\nThe clock type is unknown.\nAn unknown error has occured\nThe type of the file descriptor or file is unknown or is …\nThe application expectations are unknown.\nEvent type is unknown\nUnknown.\nUnknown.\nUser-provided value that may be attached to objects that …\nA v128 parameter.\nReturn if a process is stopped\nThe type of a WASM value represented at runtime for use …\nThe application expects to access the specified data in …\nCross-device link.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nNumber of arguments the function takes\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nWhether the result is cacheable\nThe clock against which to compare the timestamp.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nThe serial number of the file referred to by this …\nThe serial number of the file referred to by this …\nThe length of the name of the directory entry.\nThe length of the name of the directory entry.\nThe offset of the next directory entry stored in this …\nThe offset of the next directory entry stored in this …\nThe type of the file referred to by this directory entry.\nThe type of the file referred to by this directory entry.\nFile descriptor\nAssociated user data\nAssociated user data\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nIf non-zero, an error that occurred while processing the …\nIf non-zero, an error that occurred while processing the …\nPointer to the data\nThe exit code that was returned\nFile descriptor\nThe contents of the event, if it is an <code>eventtype::fd_read</code> …\nThe file descriptor on which to wait for it to become …\nFlags specifying whether the timeout is absolute or …\nFlags specifying whether the timeout is absolute or …\nThe state of the file descriptor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from a raw integer, preserving any unknown bits. …\nConvert from a raw integer, preserving any unknown bits. …\nConvert from a raw integer, preserving any unknown bits. …\nConvert from a raw integer, preserving any unknown bits. …\nConvert from a raw integer, preserving any unknown bits. …\nConvert from a raw integer, preserving any unknown bits. …\nConvert from a raw integer, preserving any unknown bits. …\nConvert from a raw integer, preserving any unknown bits. …\nConvert from a raw integer, preserving any unknown bits. …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …")