(function() {
    var type_impls = Object.fromEntries([["wasmer_compiler_llvm",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-MemoryBuffer\" class=\"impl\"><a href=\"#impl-Debug-for-MemoryBuffer\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for MemoryBuffer</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","wasmer_compiler_llvm::config::InkwellMemoryBuffer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-MemoryBuffer\" class=\"impl\"><a href=\"#impl-Drop-for-MemoryBuffer\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for MemoryBuffer</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","wasmer_compiler_llvm::config::InkwellMemoryBuffer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MemoryBuffer\" class=\"impl\"><a href=\"#impl-MemoryBuffer\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MemoryBuffer</h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a class=\"fn\">new</a>(memory_buffer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.pointer.html\">*mut </a>LLVMMemoryBuffer) -&gt; MemoryBuffer</h4></section><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.pointer.html\">*mut </a>LLVMMemoryBuffer</h4></section><section id=\"method.create_from_file\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">create_from_file</a>(path: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;MemoryBuffer, LLVMString&gt;</h4></section><section id=\"method.create_from_stdin\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">create_from_stdin</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;MemoryBuffer, LLVMString&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_from_memory_range\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">create_from_memory_range</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>], name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.str.html\">str</a>) -&gt; MemoryBuffer</h4></section></summary><div class=\"docblock\"><p>This function is likely slightly cheaper than <code>create_from_memory_range_copy</code> since it intentionally\nleaks data to LLVM so that it doesn’t have to reallocate. <code>create_from_memory_range_copy</code> may be removed\nin the future</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_from_memory_range_copy\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">create_from_memory_range_copy</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>], name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.str.html\">str</a>) -&gt; MemoryBuffer</h4></section></summary><div class=\"docblock\"><p>This will create a new <code>MemoryBuffer</code> from the given input.</p>\n<p>This function is likely slightly more expensive than <code>create_from_memory_range</code> since it does not leak\ndata to LLVM, forcing LLVM to make a copy. This function may be removed in the future in favor of\n<code>create_from_memory_range</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Gets a byte slice of this <code>MemoryBuffer</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_size\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Gets the byte size of this <code>MemoryBuffer</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_object_file\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">create_object_file</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ObjectFile, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this <code>MemoryBuffer</code> into an <code>ObjectFile</code>. LLVM does not currently\nprovide any way to determine the cause of error if conversion fails.</p>\n</div></details></div></details>",0,"wasmer_compiler_llvm::config::InkwellMemoryBuffer"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[7399]}