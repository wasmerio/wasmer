(function() {
    var type_impls = Object.fromEntries([["wasmer",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arbitrary%3C'a%3E-for-Box%3CA%3E\" class=\"impl\"><a href=\"#impl-Arbitrary%3C'a%3E-for-Box%3CA%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, A&gt; Arbitrary&lt;'a&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;A&gt;<div class=\"where\">where\n    A: Arbitrary&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary\" class=\"method trait-impl\"><a href=\"#method.arbitrary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary</a>(u: &amp;mut Unstructured&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;A&gt;, Error&gt;</h4></section></summary><div class='docblock'>Generate an arbitrary value of <code>Self</code> from the given unstructured data. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Get a size hint for how many bytes out of an <code>Unstructured</code> this type\nneeds to construct itself. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_size_hint\" class=\"method trait-impl\"><a href=\"#method.try_size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_size_hint</a>(\n    depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;), MaxRecursionReached&gt;</h4></section></summary><div class='docblock'>Get a size hint for how many bytes out of an <code>Unstructured</code> this type\nneeds to construct itself. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary_take_rest\" class=\"method trait-impl\"><a href=\"#method.arbitrary_take_rest\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary_take_rest</a>(u: Unstructured&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Error&gt;</h4></section></summary><div class='docblock'>Generate an arbitrary value of <code>Self</code> from the entirety of the given\nunstructured data. <a>Read more</a></div></details></div></details>","Arbitrary<'a>","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Archive-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-Archive-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Archive for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: ArchiveUnsized + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Archived\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Archived\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Archived</a> = ArchivedBox&lt;&lt;T as ArchiveUnsized&gt;::Archived&gt;</h4></section></summary><div class='docblock'>The archived representation of this type. <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Resolver\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Resolver\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Resolver</a> = BoxResolver</h4></section></summary><div class='docblock'>The resolver for this type. It must contain all the additional\ninformation from serializing needed to make the archived type from\nthe normal type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve\" class=\"method trait-impl\"><a href=\"#method.resolve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">resolve</a>(\n    &amp;self,\n    resolver: &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt; as Archive&gt;::Resolver,\n    out: Place&lt;&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt; as Archive&gt;::Archived&gt;,\n)</h4></section></summary><div class='docblock'>Creates the archived version of this value at the given position and\nwrites it to the given output. <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.COPY_OPTIMIZATION\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.COPY_OPTIMIZATION\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">COPY_OPTIMIZATION</a>: CopyOptimization&lt;Self&gt; = _</h4></section></summary><div class='docblock'>An optimization flag that allows the bytes of this type to be copied\ndirectly to a writer instead of calling <code>serialize</code>. <a>Read more</a></div></details></div></details>","Archive","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsFd-for-Box%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0\">1.64.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/os/fd/owned.rs.html#431\">Source</a></span><a href=\"#impl-AsFd-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/std/os/fd/owned/trait.AsFd.html\" title=\"trait std::os::fd::owned::AsFd\">AsFd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/std/os/fd/owned/trait.AsFd.html\" title=\"trait std::os::fd::owned::AsFd\">AsFd</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/os/fd/owned.rs.html#433\">Source</a><a href=\"#method.as_fd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/os/fd/owned/trait.AsFd.html#tymethod.as_fd\" class=\"fn\">as_fd</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/os/fd/owned/struct.BorrowedFd.html\" title=\"struct std::os::fd::owned::BorrowedFd\">BorrowedFd</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Borrows the file descriptor. <a href=\"https://doc.rust-lang.org/1.84.1/std/os/fd/owned/trait.AsFd.html#tymethod.as_fd\">Read more</a></div></details></div></details>","AsFd","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3CT%3E-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2053\">Source</a></span><a href=\"#impl-AsMut%3CT%3E-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2054\">Source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<T>","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRawFd-for-Box%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/os/fd/raw.rs.html#270\">Source</a></span><a href=\"#impl-AsRawFd-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/std/os/fd/raw/trait.AsRawFd.html\" title=\"trait std::os::fd::raw::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/std/os/fd/raw/trait.AsRawFd.html\" title=\"trait std::os::fd::raw::AsRawFd\">AsRawFd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_raw_fd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/os/fd/raw.rs.html#272\">Source</a><a href=\"#method.as_raw_fd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/os/fd/raw/trait.AsRawFd.html#tymethod.as_raw_fd\" class=\"fn\">as_raw_fd</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Extracts the raw file descriptor. <a href=\"https://doc.rust-lang.org/1.84.1/std/os/fd/raw/trait.AsRawFd.html#tymethod.as_raw_fd\">Read more</a></div></details></div></details>","AsRawFd","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CT%3E-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2046\">Source</a></span><a href=\"#impl-AsRef%3CT%3E-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2047\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<T>","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncFn%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2013\">Source</a><a href=\"#impl-AsyncFn%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFn.html\" title=\"trait core::ops::async_function::AsyncFn\">AsyncFn</a>&lt;Args&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Tuple.html\" title=\"trait core::marker::Tuple\">Tuple</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFn.html\" title=\"trait core::ops::async_function::AsyncFn\">AsyncFn</a>&lt;Args&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.async_call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2014\">Source</a><a href=\"#method.async_call\" class=\"anchor\">§</a><h4 class=\"code-header\">extern &quot;rust-call&quot; fn <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFn.html#tymethod.async_call\" class=\"fn\">async_call</a>(\n    &amp;self,\n    args: Args,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html\" title=\"trait core::ops::async_function::AsyncFnMut\">AsyncFnMut</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html#associatedtype.CallRefFuture\" title=\"type core::ops::async_function::AsyncFnMut::CallRefFuture\">CallRefFuture</a>&lt;'_&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_fn_traits</code>)</span></div></span><div class='docblock'>Call the <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFn.html\" title=\"trait core::ops::async_function::AsyncFn\"><code>AsyncFn</code></a>, returning a future which may borrow from the called closure.</div></details></div></details>","AsyncFn<Args>","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncFnMut%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2001\">Source</a><a href=\"#impl-AsyncFnMut%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html\" title=\"trait core::ops::async_function::AsyncFnMut\">AsyncFnMut</a>&lt;Args&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Tuple.html\" title=\"trait core::marker::Tuple\">Tuple</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html\" title=\"trait core::ops::async_function::AsyncFnMut\">AsyncFnMut</a>&lt;Args&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CallRefFuture\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2002\">Source</a><a href=\"#associatedtype.CallRefFuture\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html#associatedtype.CallRefFuture\" class=\"associatedtype\">CallRefFuture</a>&lt;'a&gt; = &lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html\" title=\"trait core::ops::async_function::AsyncFnMut\">AsyncFnMut</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html#associatedtype.CallRefFuture\" title=\"type core::ops::async_function::AsyncFnMut::CallRefFuture\">CallRefFuture</a>&lt;'a&gt;\n<span class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt;: 'a</span></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_fn_traits</code>)</span></div></span><div class='docblock'>Future returned by <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html#tymethod.async_call_mut\" title=\"method core::ops::async_function::AsyncFnMut::async_call_mut\"><code>AsyncFnMut::async_call_mut</code></a> and <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFn.html#tymethod.async_call\" title=\"method core::ops::async_function::AsyncFn::async_call\"><code>AsyncFn::async_call</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.async_call_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2007\">Source</a><a href=\"#method.async_call_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">extern &quot;rust-call&quot; fn <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html#tymethod.async_call_mut\" class=\"fn\">async_call_mut</a>(\n    &amp;mut self,\n    args: Args,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html\" title=\"trait core::ops::async_function::AsyncFnMut\">AsyncFnMut</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html#associatedtype.CallRefFuture\" title=\"type core::ops::async_function::AsyncFnMut::CallRefFuture\">CallRefFuture</a>&lt;'_&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_fn_traits</code>)</span></div></span><div class='docblock'>Call the <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html\" title=\"trait core::ops::async_function::AsyncFnMut\"><code>AsyncFnMut</code></a>, returning a future which may borrow from the called closure.</div></details></div></details>","AsyncFnMut<Args>","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncFnOnce%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1991\">Source</a><a href=\"#impl-AsyncFnOnce%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html\" title=\"trait core::ops::async_function::AsyncFnOnce\">AsyncFnOnce</a>&lt;Args&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Tuple.html\" title=\"trait core::marker::Tuple\">Tuple</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html\" title=\"trait core::ops::async_function::AsyncFnOnce\">AsyncFnOnce</a>&lt;Args&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1992\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html\" title=\"trait core::ops::async_function::AsyncFnOnce\">AsyncFnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html#associatedtype.Output\" title=\"type core::ops::async_function::AsyncFnOnce::Output\">Output</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_fn_traits</code>)</span></div></span><div class='docblock'>Output type of the called closure’s future.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.CallOnceFuture\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1993\">Source</a><a href=\"#associatedtype.CallOnceFuture\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html#associatedtype.CallOnceFuture\" class=\"associatedtype\">CallOnceFuture</a> = &lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html\" title=\"trait core::ops::async_function::AsyncFnOnce\">AsyncFnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html#associatedtype.CallOnceFuture\" title=\"type core::ops::async_function::AsyncFnOnce::CallOnceFuture\">CallOnceFuture</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_fn_traits</code>)</span></div></span><div class='docblock'>Future returned by <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html#tymethod.async_call_once\" title=\"method core::ops::async_function::AsyncFnOnce::async_call_once\"><code>AsyncFnOnce::async_call_once</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.async_call_once\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1995\">Source</a><a href=\"#method.async_call_once\" class=\"anchor\">§</a><h4 class=\"code-header\">extern &quot;rust-call&quot; fn <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html#tymethod.async_call_once\" class=\"fn\">async_call_once</a>(\n    self,\n    args: Args,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html\" title=\"trait core::ops::async_function::AsyncFnOnce\">AsyncFnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html#associatedtype.CallOnceFuture\" title=\"type core::ops::async_function::AsyncFnOnce::CallOnceFuture\">CallOnceFuture</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_fn_traits</code>)</span></div></span><div class='docblock'>Call the <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html\" title=\"trait core::ops::async_function::AsyncFnOnce\"><code>AsyncFnOnce</code></a>, returning a future which may move out of the called closure.</div></details></div></details>","AsyncFnOnce<Args>","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncIterator-for-Box%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#83\">Source</a><a href=\"#impl-AsyncIterator-for-Box%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html\" title=\"trait core::async_iter::async_iter::AsyncIterator\">AsyncIterator</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html\" title=\"trait core::async_iter::async_iter::AsyncIterator\">AsyncIterator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#84\">Source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = &lt;S as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html\" title=\"trait core::async_iter::async_iter::AsyncIterator\">AsyncIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html#associatedtype.Item\" title=\"type core::async_iter::async_iter::AsyncIterator::Item\">Item</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_iterator</code>)</span></div></span><div class='docblock'>The type of items yielded by the async iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_next\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#86\">Source</a><a href=\"#method.poll_next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html#tymethod.poll_next\" class=\"fn\">poll_next</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html\" title=\"trait core::async_iter::async_iter::AsyncIterator\">AsyncIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html#associatedtype.Item\" title=\"type core::async_iter::async_iter::AsyncIterator::Item\">Item</a>&gt;&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_iterator</code>)</span></div></span><div class='docblock'>Attempts to pull out the next value of this async iterator, registering the\ncurrent task for wakeup if the value is not yet available, and returning\n<code>None</code> if the async iterator is exhausted. <a href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html#tymethod.poll_next\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#90\">Source</a><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_iterator</code>)</span></div></span><div class='docblock'>Returns the bounds on the remaining length of the async iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html#method.size_hint\">Read more</a></div></details></div></details>","AsyncIterator","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3CT%3E-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.1.0\">1.1.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2032\">Source</a></span><a href=\"#impl-Borrow%3CT%3E-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2033\">Source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/1.84.1/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<T>","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowMut%3CT%3E-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.1.0\">1.1.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2039\">Source</a></span><a href=\"#impl-BorrowMut%3CT%3E-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/borrow/trait.BorrowMut.html\" title=\"trait core::borrow::BorrowMut\">BorrowMut</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2040\">Source</a><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class='docblock'>Mutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/1.84.1/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details>","BorrowMut<T>","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1015\">Source</a><a href=\"#impl-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1060\">Source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.from_raw\" class=\"fn\">from_raw</a>(raw: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.pointer.html\">*mut T</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a box from a raw pointer.</p>\n<p>After calling this function, the raw pointer is owned by the\nresulting <code>Box</code>. Specifically, the <code>Box</code> destructor will call\nthe destructor of <code>T</code> and free the allocated memory. For this\nto be safe, the memory must have been allocated in accordance\nwith the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code> .</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>This function is unsafe because improper use may lead to\nmemory problems. For example, a double-free may occur if the\nfunction is called twice on the same raw pointer.</p>\n<p>The safety conditions are described in the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> section.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>Recreate a <code>Box</code> which was previously converted to a raw pointer\nusing <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.into_raw\" title=\"associated function alloc::boxed::Box::into_raw\"><code>Box::into_raw</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = Box::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span>ptr = Box::into_raw(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_raw(ptr) };</code></pre></div>\n<p>Manually create a <code>Box</code> from scratch by using the global allocator:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::alloc::{alloc, Layout};\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>ptr = alloc(Layout::new::&lt;i32&gt;()) <span class=\"kw\">as </span><span class=\"kw-2\">*mut </span>i32;\n    <span class=\"comment\">// In general .write is required to avoid attempting to destruct\n    // the (uninitialized) previous contents of `ptr`, though for this\n    // simple example `*ptr = 5` would have worked as well.\n    </span>ptr.write(<span class=\"number\">5</span>);\n    <span class=\"kw\">let </span>x = Box::from_raw(ptr);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_non_null\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1113\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.from_non_null\" class=\"fn\">from_non_null</a>(ptr: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>box_vec_non_null</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a box from a <code>NonNull</code> pointer.</p>\n<p>After calling this function, the <code>NonNull</code> pointer is owned by\nthe resulting <code>Box</code>. Specifically, the <code>Box</code> destructor will call\nthe destructor of <code>T</code> and free the allocated memory. For this\nto be safe, the memory must have been allocated in accordance\nwith the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code> .</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>This function is unsafe because improper use may lead to\nmemory problems. For example, a double-free may occur if the\nfunction is called twice on the same <code>NonNull</code> pointer.</p>\n<p>The safety conditions are described in the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> section.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Recreate a <code>Box</code> which was previously converted to a <code>NonNull</code>\npointer using <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.into_non_null\" title=\"associated function alloc::boxed::Box::into_non_null\"><code>Box::into_non_null</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_vec_non_null)]\n\n</span><span class=\"kw\">let </span>x = Box::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span>non_null = Box::into_non_null(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_non_null(non_null) };</code></pre></div>\n<p>Manually create a <code>Box</code> from scratch by using the global allocator:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_vec_non_null)]\n\n</span><span class=\"kw\">use </span>std::alloc::{alloc, Layout};\n<span class=\"kw\">use </span>std::ptr::NonNull;\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>non_null = NonNull::new(alloc(Layout::new::&lt;i32&gt;()).cast::&lt;i32&gt;())\n        .expect(<span class=\"string\">\"allocation failed\"</span>);\n    <span class=\"comment\">// In general .write is required to avoid attempting to destruct\n    // the (uninitialized) previous contents of `non_null`.\n    </span>non_null.write(<span class=\"number\">5</span>);\n    <span class=\"kw\">let </span>x = Box::from_non_null(non_null);\n}</code></pre></div>\n</div></details></div></details>",0,"wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#238\">Source</a><a href=\"#impl-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#254\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.new\" class=\"fn\">new</a>(x: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Allocates memory on the heap and then places <code>x</code> into it.</p>\n<p>This doesn’t actually allocate if <code>T</code> is zero-sized.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>five = Box::new(<span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_uninit\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#279\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.new_uninit\" class=\"fn\">new_uninit</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new box with uninitialized contents.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Box::&lt;u32&gt;::new_uninit();\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>five.as_mut_ptr().write(<span class=\"number\">5</span>);\n\n    five.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#305\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>new_zeroed_alloc</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Box</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(new_zeroed_alloc)]\n\n</span><span class=\"kw\">let </span>zero = Box::&lt;u32&gt;::new_zeroed();\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pin\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0\">1.33.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#320\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.pin\" class=\"fn\">pin</a>(x: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <a href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\"><code>Unpin</code></a>, then\n<code>x</code> will be pinned in memory and unable to be moved.</p>\n<p>Constructing and pinning of the <code>Box</code> can also be done in two steps: <code>Box::pin(x)</code>\ndoes the same as <code><a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.into_pin\" title=\"associated function alloc::boxed::Box::into_pin\">Box::into_pin</a>(<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.new\" title=\"associated function alloc::boxed::Box::new\">Box::new</a>(x))</code>. Consider using\n<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.into_pin\" title=\"associated function alloc::boxed::Box::into_pin\"><code>into_pin</code></a> if you already have a <code>Box&lt;T&gt;</code>, or if you want to\nconstruct a (pinned) <code>Box</code> in a different way than with <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.new\" title=\"associated function alloc::boxed::Box::new\"><code>Box::new</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#339\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.try_new\" class=\"fn\">try_new</a>(x: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Allocates memory on the heap then places <code>x</code> into it,\nreturning an error if the allocation fails</p>\n<p>This doesn’t actually allocate if <code>T</code> is zero-sized.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">let </span>five = Box::try_new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_uninit\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#366\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.try_new_uninit\" class=\"fn\">try_new_uninit</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new box with uninitialized contents on the heap,\nreturning an error if the allocation fails</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Box::&lt;u32&gt;::try_new_uninit()<span class=\"question-mark\">?</span>;\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>five.as_mut_ptr().write(<span class=\"number\">5</span>);\n\n    five.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_zeroed\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#392\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.try_new_zeroed\" class=\"fn\">try_new_zeroed</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Box</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes on the heap</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">let </span>zero = Box::&lt;u32&gt;::try_new_zeroed()<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>);</code></pre></div>\n</div></details></div></details>",0,"wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Box%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1118\">Source</a><a href=\"#impl-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1169\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.from_raw_in\" class=\"fn\">from_raw_in</a>(raw: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.pointer.html\">*mut T</a>, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a box from a raw pointer in the given allocator.</p>\n<p>After calling this function, the raw pointer is owned by the\nresulting <code>Box</code>. Specifically, the <code>Box</code> destructor will call\nthe destructor of <code>T</code> and free the allocated memory. For this\nto be safe, the memory must have been allocated in accordance\nwith the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code> .</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>This function is unsafe because improper use may lead to\nmemory problems. For example, a double-free may occur if the\nfunction is called twice on the same raw pointer.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>Recreate a <code>Box</code> which was previously converted to a raw pointer\nusing <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.into_raw_with_allocator\" title=\"associated function alloc::boxed::Box::into_raw_with_allocator\"><code>Box::into_raw_with_allocator</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x = Box::new_in(<span class=\"number\">5</span>, System);\n<span class=\"kw\">let </span>(ptr, alloc) = Box::into_raw_with_allocator(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_raw_in(ptr, alloc) };</code></pre></div>\n<p>Manually create a <code>Box</code> from scratch by using the system allocator:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api, slice_ptr_get)]\n\n</span><span class=\"kw\">use </span>std::alloc::{Allocator, Layout, System};\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>ptr = System.allocate(Layout::new::&lt;i32&gt;())<span class=\"question-mark\">?</span>.as_mut_ptr() <span class=\"kw\">as </span><span class=\"kw-2\">*mut </span>i32;\n    <span class=\"comment\">// In general .write is required to avoid attempting to destruct\n    // the (uninitialized) previous contents of `ptr`, though for this\n    // simple example `*ptr = 5` would have worked as well.\n    </span>ptr.write(<span class=\"number\">5</span>);\n    <span class=\"kw\">let </span>x = Box::from_raw_in(ptr, System);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_non_null_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1223\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.from_non_null_in\" class=\"fn\">from_non_null_in</a>(raw: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;T&gt;, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a box from a <code>NonNull</code> pointer in the given allocator.</p>\n<p>After calling this function, the <code>NonNull</code> pointer is owned by\nthe resulting <code>Box</code>. Specifically, the <code>Box</code> destructor will call\nthe destructor of <code>T</code> and free the allocated memory. For this\nto be safe, the memory must have been allocated in accordance\nwith the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code> .</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>This function is unsafe because improper use may lead to\nmemory problems. For example, a double-free may occur if the\nfunction is called twice on the same raw pointer.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Recreate a <code>Box</code> which was previously converted to a <code>NonNull</code> pointer\nusing <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.into_non_null_with_allocator\" title=\"associated function alloc::boxed::Box::into_non_null_with_allocator\"><code>Box::into_non_null_with_allocator</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api, box_vec_non_null)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x = Box::new_in(<span class=\"number\">5</span>, System);\n<span class=\"kw\">let </span>(non_null, alloc) = Box::into_non_null_with_allocator(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_non_null_in(non_null, alloc) };</code></pre></div>\n<p>Manually create a <code>Box</code> from scratch by using the system allocator:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api, box_vec_non_null, slice_ptr_get)]\n\n</span><span class=\"kw\">use </span>std::alloc::{Allocator, Layout, System};\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>non_null = System.allocate(Layout::new::&lt;i32&gt;())<span class=\"question-mark\">?</span>.cast::&lt;i32&gt;();\n    <span class=\"comment\">// In general .write is required to avoid attempting to destruct\n    // the (uninitialized) previous contents of `non_null`.\n    </span>non_null.write(<span class=\"number\">5</span>);\n    <span class=\"kw\">let </span>x = Box::from_non_null_in(non_null, System);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1278\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.into_raw\" class=\"fn\">into_raw</a>(b: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.pointer.html\">*mut T</a></h4></section></summary><div class=\"docblock\"><p>Consumes the <code>Box</code>, returning a wrapped raw pointer.</p>\n<p>The pointer will be properly aligned and non-null.</p>\n<p>After calling this function, the caller is responsible for the\nmemory previously managed by the <code>Box</code>. In particular, the\ncaller should properly destroy <code>T</code> and release the memory, taking\ninto account the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code>. The easiest way to\ndo this is to convert the raw pointer back into a <code>Box</code> with the\n<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.from_raw\" title=\"associated function alloc::boxed::Box::from_raw\"><code>Box::from_raw</code></a> function, allowing the <code>Box</code> destructor to perform\nthe cleanup.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Box::into_raw(b)</code> instead of <code>b.into_raw()</code>. This\nis so that there is no conflict with a method on the inner type.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Converting the raw pointer back into a <code>Box</code> with <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.from_raw\" title=\"associated function alloc::boxed::Box::from_raw\"><code>Box::from_raw</code></a>\nfor automatic cleanup:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = Box::new(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>ptr = Box::into_raw(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_raw(ptr) };</code></pre></div>\n<p>Manual cleanup by explicitly running the destructor and deallocating\nthe memory:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::alloc::{dealloc, Layout};\n<span class=\"kw\">use </span>std::ptr;\n\n<span class=\"kw\">let </span>x = Box::new(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>ptr = Box::into_raw(x);\n<span class=\"kw\">unsafe </span>{\n    ptr::drop_in_place(ptr);\n    dealloc(ptr <span class=\"kw\">as </span><span class=\"kw-2\">*mut </span>u8, Layout::new::&lt;String&gt;());\n}</code></pre></div>\n<p>Note: This is equivalent to the following:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = Box::new(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>ptr = Box::into_raw(x);\n<span class=\"kw\">unsafe </span>{\n    drop(Box::from_raw(ptr));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_non_null\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1338\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.into_non_null\" class=\"fn\">into_non_null</a>(b: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;T&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>box_vec_non_null</code>)</span></div></span></summary><div class=\"docblock\"><p>Consumes the <code>Box</code>, returning a wrapped <code>NonNull</code> pointer.</p>\n<p>The pointer will be properly aligned.</p>\n<p>After calling this function, the caller is responsible for the\nmemory previously managed by the <code>Box</code>. In particular, the\ncaller should properly destroy <code>T</code> and release the memory, taking\ninto account the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code>. The easiest way to\ndo this is to convert the <code>NonNull</code> pointer back into a <code>Box</code> with the\n<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.from_non_null\" title=\"associated function alloc::boxed::Box::from_non_null\"><code>Box::from_non_null</code></a> function, allowing the <code>Box</code> destructor to\nperform the cleanup.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Box::into_non_null(b)</code> instead of <code>b.into_non_null()</code>.\nThis is so that there is no conflict with a method on the inner type.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Converting the <code>NonNull</code> pointer back into a <code>Box</code> with <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.from_non_null\" title=\"associated function alloc::boxed::Box::from_non_null\"><code>Box::from_non_null</code></a>\nfor automatic cleanup:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_vec_non_null)]\n\n</span><span class=\"kw\">let </span>x = Box::new(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>non_null = Box::into_non_null(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_non_null(non_null) };</code></pre></div>\n<p>Manual cleanup by explicitly running the destructor and deallocating\nthe memory:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_vec_non_null)]\n\n</span><span class=\"kw\">use </span>std::alloc::{dealloc, Layout};\n\n<span class=\"kw\">let </span>x = Box::new(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>non_null = Box::into_non_null(x);\n<span class=\"kw\">unsafe </span>{\n    non_null.drop_in_place();\n    dealloc(non_null.as_ptr().cast::&lt;u8&gt;(), Layout::new::&lt;String&gt;());\n}</code></pre></div>\n<p>Note: This is equivalent to the following:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_vec_non_null)]\n\n</span><span class=\"kw\">let </span>x = Box::new(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>non_null = Box::into_non_null(x);\n<span class=\"kw\">unsafe </span>{\n    drop(Box::from_non_null(non_null));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw_with_allocator\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1392\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.into_raw_with_allocator\" class=\"fn\">into_raw_with_allocator</a>(b: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.pointer.html\">*mut T</a>, A)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Consumes the <code>Box</code>, returning a wrapped raw pointer and the allocator.</p>\n<p>The pointer will be properly aligned and non-null.</p>\n<p>After calling this function, the caller is responsible for the\nmemory previously managed by the <code>Box</code>. In particular, the\ncaller should properly destroy <code>T</code> and release the memory, taking\ninto account the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code>. The easiest way to\ndo this is to convert the raw pointer back into a <code>Box</code> with the\n<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.from_raw_in\" title=\"associated function alloc::boxed::Box::from_raw_in\"><code>Box::from_raw_in</code></a> function, allowing the <code>Box</code> destructor to perform\nthe cleanup.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Box::into_raw_with_allocator(b)</code> instead of <code>b.into_raw_with_allocator()</code>. This\nis so that there is no conflict with a method on the inner type.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<p>Converting the raw pointer back into a <code>Box</code> with <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.from_raw_in\" title=\"associated function alloc::boxed::Box::from_raw_in\"><code>Box::from_raw_in</code></a>\nfor automatic cleanup:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x = Box::new_in(String::from(<span class=\"string\">\"Hello\"</span>), System);\n<span class=\"kw\">let </span>(ptr, alloc) = Box::into_raw_with_allocator(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_raw_in(ptr, alloc) };</code></pre></div>\n<p>Manual cleanup by explicitly running the destructor and deallocating\nthe memory:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::{Allocator, Layout, System};\n<span class=\"kw\">use </span>std::ptr::{<span class=\"self\">self</span>, NonNull};\n\n<span class=\"kw\">let </span>x = Box::new_in(String::from(<span class=\"string\">\"Hello\"</span>), System);\n<span class=\"kw\">let </span>(ptr, alloc) = Box::into_raw_with_allocator(x);\n<span class=\"kw\">unsafe </span>{\n    ptr::drop_in_place(ptr);\n    <span class=\"kw\">let </span>non_null = NonNull::new_unchecked(ptr);\n    alloc.deallocate(non_null.cast(), Layout::new::&lt;String&gt;());\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_non_null_with_allocator\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1453\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.into_non_null_with_allocator\" class=\"fn\">into_non_null_with_allocator</a>(b: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; (<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;T&gt;, A)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Consumes the <code>Box</code>, returning a wrapped <code>NonNull</code> pointer and the allocator.</p>\n<p>The pointer will be properly aligned.</p>\n<p>After calling this function, the caller is responsible for the\nmemory previously managed by the <code>Box</code>. In particular, the\ncaller should properly destroy <code>T</code> and release the memory, taking\ninto account the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code>. The easiest way to\ndo this is to convert the <code>NonNull</code> pointer back into a <code>Box</code> with the\n<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.from_non_null_in\" title=\"associated function alloc::boxed::Box::from_non_null_in\"><code>Box::from_non_null_in</code></a> function, allowing the <code>Box</code> destructor to\nperform the cleanup.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Box::into_non_null_with_allocator(b)</code> instead of\n<code>b.into_non_null_with_allocator()</code>. This is so that there is no\nconflict with a method on the inner type.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<p>Converting the <code>NonNull</code> pointer back into a <code>Box</code> with\n<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.from_non_null_in\" title=\"associated function alloc::boxed::Box::from_non_null_in\"><code>Box::from_non_null_in</code></a> for automatic cleanup:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api, box_vec_non_null)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x = Box::new_in(String::from(<span class=\"string\">\"Hello\"</span>), System);\n<span class=\"kw\">let </span>(non_null, alloc) = Box::into_non_null_with_allocator(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_non_null_in(non_null, alloc) };</code></pre></div>\n<p>Manual cleanup by explicitly running the destructor and deallocating\nthe memory:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api, box_vec_non_null)]\n\n</span><span class=\"kw\">use </span>std::alloc::{Allocator, Layout, System};\n\n<span class=\"kw\">let </span>x = Box::new_in(String::from(<span class=\"string\">\"Hello\"</span>), System);\n<span class=\"kw\">let </span>(non_null, alloc) = Box::into_non_null_with_allocator(x);\n<span class=\"kw\">unsafe </span>{\n    non_null.drop_in_place();\n    alloc.deallocate(non_null.cast::&lt;u8&gt;(), Layout::new::&lt;String&gt;());\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1507\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.as_mut_ptr\" class=\"fn\">as_mut_ptr</a>(b: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.pointer.html\">*mut T</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>box_as_ptr</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns a raw mutable pointer to the <code>Box</code>’s contents.</p>\n<p>The caller must ensure that the <code>Box</code> outlives the pointer this\nfunction returns, or else it will end up dangling.</p>\n<p>This method guarantees that for the purpose of the aliasing model, this method\ndoes not materialize a reference to the underlying memory, and thus the returned pointer\nwill remain valid when mixed with other calls to <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.as_ptr\" title=\"associated function alloc::boxed::Box::as_ptr\"><code>as_ptr</code></a> and <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.as_mut_ptr\" title=\"associated function alloc::boxed::Box::as_mut_ptr\"><code>as_mut_ptr</code></a>.\nNote that calling other methods that materialize references to the memory\nmay still invalidate this pointer.\nSee the example below for how this guarantee can be used.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<p>Due to the aliasing guarantee, the following code is legal:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_as_ptr)]\n\n</span><span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>b = Box::new(<span class=\"number\">0</span>);\n    <span class=\"kw\">let </span>ptr1 = Box::as_mut_ptr(<span class=\"kw-2\">&amp;mut </span>b);\n    ptr1.write(<span class=\"number\">1</span>);\n    <span class=\"kw\">let </span>ptr2 = Box::as_mut_ptr(<span class=\"kw-2\">&amp;mut </span>b);\n    ptr2.write(<span class=\"number\">2</span>);\n    <span class=\"comment\">// Notably, the write to `ptr2` did *not* invalidate `ptr1`:\n    </span>ptr1.write(<span class=\"number\">3</span>);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1556\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.as_ptr\" class=\"fn\">as_ptr</a>(b: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.pointer.html\">*const T</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>box_as_ptr</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns a raw pointer to the <code>Box</code>’s contents.</p>\n<p>The caller must ensure that the <code>Box</code> outlives the pointer this\nfunction returns, or else it will end up dangling.</p>\n<p>The caller must also ensure that the memory the pointer (non-transitively) points to\nis never written to (except inside an <code>UnsafeCell</code>) using this pointer or any pointer\nderived from it. If you need to mutate the contents of the <code>Box</code>, use <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.as_mut_ptr\" title=\"associated function alloc::boxed::Box::as_mut_ptr\"><code>as_mut_ptr</code></a>.</p>\n<p>This method guarantees that for the purpose of the aliasing model, this method\ndoes not materialize a reference to the underlying memory, and thus the returned pointer\nwill remain valid when mixed with other calls to <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.as_ptr\" title=\"associated function alloc::boxed::Box::as_ptr\"><code>as_ptr</code></a> and <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.as_mut_ptr\" title=\"associated function alloc::boxed::Box::as_mut_ptr\"><code>as_mut_ptr</code></a>.\nNote that calling other methods that materialize mutable references to the memory,\nas well as writing to this memory, may still invalidate this pointer.\nSee the example below for how this guarantee can be used.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<p>Due to the aliasing guarantee, the following code is legal:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_as_ptr)]\n\n</span><span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = Box::new(<span class=\"number\">0</span>);\n    <span class=\"kw\">let </span>ptr1 = Box::as_ptr(<span class=\"kw-2\">&amp;</span>v);\n    <span class=\"kw\">let </span>ptr2 = Box::as_mut_ptr(<span class=\"kw-2\">&amp;mut </span>v);\n    <span class=\"kw\">let </span>_val = ptr2.read();\n    <span class=\"comment\">// No write to this memory has happened yet, so `ptr1` is still valid.\n    </span><span class=\"kw\">let </span>_val = ptr1.read();\n    <span class=\"comment\">// However, once we do a write...\n    </span>ptr2.write(<span class=\"number\">1</span>);\n    <span class=\"comment\">// ... `ptr1` is no longer valid.\n    // This would be UB: let _val = ptr1.read();\n</span>}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.allocator\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1570\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.allocator\" class=\"fn\">allocator</a>(b: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;A</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns a reference to the underlying allocator.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Box::allocator(&amp;b)</code> instead of <code>b.allocator()</code>. This\nis so that there is no conflict with a method on the inner type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leak\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.26.0\">1.26.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1619-1621\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.leak\" class=\"fn\">leak</a>&lt;'a&gt;(b: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;'a mut T</a><div class=\"where\">where\n    A: 'a,</div></h4></section></summary><div class=\"docblock\"><p>Consumes and leaks the <code>Box</code>, returning a mutable reference,\n<code>&amp;'a mut T</code>.</p>\n<p>Note that the type <code>T</code> must outlive the chosen lifetime <code>'a</code>. If the type\nhas only static references, or none at all, then this may be chosen to be\n<code>'static</code>.</p>\n<p>This function is mainly useful for data that lives for the remainder of\nthe program’s life. Dropping the returned reference will cause a memory\nleak. If this is not acceptable, the reference should first be wrapped\nwith the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.from_raw\" title=\"associated function alloc::boxed::Box::from_raw\"><code>Box::from_raw</code></a> function producing a <code>Box</code>. This <code>Box</code> can\nthen be dropped which will properly destroy <code>T</code> and release the\nallocated memory.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Box::leak(b)</code> instead of <code>b.leak()</code>. This\nis so that there is no conflict with a method on the inner type.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<p>Simple usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = Box::new(<span class=\"number\">41</span>);\n<span class=\"kw\">let </span>static_ref: <span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'static </span><span class=\"kw-2\">mut </span>usize = Box::leak(x);\n<span class=\"kw-2\">*</span>static_ref += <span class=\"number\">1</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>static_ref, <span class=\"number\">42</span>);</code></pre></div>\n<p>Unsized data:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].into_boxed_slice();\n<span class=\"kw\">let </span>static_ref = Box::leak(x);\nstatic_ref[<span class=\"number\">0</span>] = <span class=\"number\">4</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>static_ref, [<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_pin\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0, const unstable\">1.63.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/92521\" title=\"Tracking issue for const_box\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1658-1660\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.into_pin\" class=\"fn\">into_pin</a>(boxed: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;&gt;<div class=\"where\">where\n    A: 'static,</div></h4></section></summary><div class=\"docblock\"><p>Converts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <a href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\"><code>Unpin</code></a>, then\n<code>*boxed</code> will be pinned in memory and unable to be moved.</p>\n<p>This conversion does not allocate on the heap and happens in place.</p>\n<p>This is also available via <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\"><code>From</code></a>.</p>\n<p>Constructing and pinning a <code>Box</code> with <code>Box::into_pin(<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.new\" title=\"associated function alloc::boxed::Box::new\">Box::new</a>(x))</code>\ncan also be written more concisely using <code><a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.pin\" title=\"associated function alloc::boxed::Box::pin\">Box::pin</a>(x)</code>.\nThis <code>into_pin</code> method is useful if you already have a <code>Box&lt;T&gt;</code>, or you are\nconstructing a (pinned) <code>Box</code> in a different way than with <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.new\" title=\"associated function alloc::boxed::Box::new\"><code>Box::new</code></a>.</p>\n<h5 id=\"notes\"><a class=\"doc-anchor\" href=\"#notes\">§</a>Notes</h5>\n<p>It’s not recommended that crates add an impl like <code>From&lt;Box&lt;T&gt;&gt; for Pin&lt;T&gt;</code>,\nas it’ll introduce an ambiguity when calling <code>Pin::from</code>.\nA demonstration of such a poor impl is shown below.</p>\n\n<div class=\"example-wrap compile_fail\"><a href=\"#\" class=\"tooltip\" title=\"This example deliberately fails to compile\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">struct </span>Foo; <span class=\"comment\">// A type defined in this crate.\n</span><span class=\"kw\">impl </span>From&lt;Box&lt;()&gt;&gt; <span class=\"kw\">for </span>Pin&lt;Foo&gt; {\n    <span class=\"kw\">fn </span>from(<span class=\"kw\">_</span>: Box&lt;()&gt;) -&gt; Pin&lt;Foo&gt; {\n        Pin::new(Foo)\n    }\n}\n\n<span class=\"kw\">let </span>foo = Box::new(());\n<span class=\"kw\">let </span>bar = Pin::from(foo);</code></pre></div>\n</div></details></div></details>",0,"wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Box%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#397\">Source</a><a href=\"#impl-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#415-417\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.new_in\" class=\"fn\">new_in</a>(x: T, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Allocates memory in the given allocator then places <code>x</code> into it.</p>\n<p>This doesn’t actually allocate if <code>T</code> is zero-sized.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>five = Box::new_in(<span class=\"number\">5</span>, System);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#443-445\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.try_new_in\" class=\"fn\">try_new_in</a>(x: T, alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Allocates memory in the given allocator then places <code>x</code> into it,\nreturning an error if the allocation fails</p>\n<p>This doesn’t actually allocate if <code>T</code> is zero-sized.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>five = Box::try_new_in(<span class=\"number\">5</span>, System)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_uninit_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#478-480\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.new_uninit_in\" class=\"fn\">new_uninit_in</a>(alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new box with uninitialized contents in the provided allocator.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Box::&lt;u32, <span class=\"kw\">_</span>&gt;::new_uninit_in(System);\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>five.as_mut_ptr().write(<span class=\"number\">5</span>);\n\n    five.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_uninit_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#515-517\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.try_new_uninit_in\" class=\"fn\">try_new_uninit_in</a>(alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new box with uninitialized contents in the provided allocator,\nreturning an error if the allocation fails</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Box::&lt;u32, <span class=\"kw\">_</span>&gt;::try_new_uninit_in(System)<span class=\"question-mark\">?</span>;\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>five.as_mut_ptr().write(<span class=\"number\">5</span>);\n\n    five.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#552-554\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.new_zeroed_in\" class=\"fn\">new_zeroed_in</a>(alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Box</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes in the provided allocator.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>zero = Box::&lt;u32, <span class=\"kw\">_</span>&gt;::new_zeroed_in(System);\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_zeroed_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#589-591\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.try_new_zeroed_in\" class=\"fn\">try_new_zeroed_in</a>(alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Box</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes in the provided allocator,\nreturning an error if the allocation fails,</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>zero = Box::&lt;u32, <span class=\"kw\">_</span>&gt;::try_new_zeroed_in(System)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pin_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#613-615\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.pin_in\" class=\"fn\">pin_in</a>(x: T, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;&gt;<div class=\"where\">where\n    A: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Pin&lt;Box&lt;T, A&gt;&gt;</code>. If <code>T</code> does not implement <a href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\"><code>Unpin</code></a>, then\n<code>x</code> will be pinned in memory and unable to be moved.</p>\n<p>Constructing and pinning of the <code>Box</code> can also be done in two steps: <code>Box::pin_in(x, alloc)</code>\ndoes the same as <code><a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.into_pin\" title=\"associated function alloc::boxed::Box::into_pin\">Box::into_pin</a>(<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.new_in\" title=\"associated function alloc::boxed::Box::new_in\">Box::new_in</a>(x, alloc))</code>. Consider using\n<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.into_pin\" title=\"associated function alloc::boxed::Box::into_pin\"><code>into_pin</code></a> if you already have a <code>Box&lt;T, A&gt;</code>, or if you want to\nconstruct a (pinned) <code>Box</code> in a different way than with <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.new_in\" title=\"associated function alloc::boxed::Box::new_in\"><code>Box::new_in</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_slice\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#624\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.into_boxed_slice\" class=\"fn\">into_boxed_slice</a>(boxed: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.slice.html\">[T]</a>, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>box_into_boxed_slice</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a <code>Box&lt;T&gt;</code> into a <code>Box&lt;[T]&gt;</code></p>\n<p>This conversion does not allocate on the heap and happens in place.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#642\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(boxed: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; T</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>box_into_inner</code>)</span></div></span></summary><div class=\"docblock\"><p>Consumes the <code>Box</code>, returning the wrapped value.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_into_inner)]\n\n</span><span class=\"kw\">let </span>c = Box::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert_eq!</span>(Box::into_inner(c), <span class=\"number\">5</span>);</code></pre></div>\n</div></details></div></details>",0,"wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Buf-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-Buf-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Buf for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: Buf + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.remaining\" class=\"method trait-impl\"><a href=\"#method.remaining\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remaining</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the number of bytes between the current position and the end of\nthe buffer. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chunk\" class=\"method trait-impl\"><a href=\"#method.chunk\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">chunk</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Returns a slice starting at the current position and of length between 0\nand <code>Buf::remaining()</code>. Note that this <em>can</em> return a shorter slice (this\nallows non-continuous internal representation). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chunks_vectored\" class=\"method trait-impl\"><a href=\"#method.chunks_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">chunks_vectored</a>&lt;'b&gt;(&amp;'b self, dst: &amp;mut [<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'b&gt;]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Fills <code>dst</code> with potentially multiple slices starting at <code>self</code>’s\ncurrent position. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.advance\" class=\"method trait-impl\"><a href=\"#method.advance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">advance</a>(&amp;mut self, cnt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Advance the internal cursor of the Buf <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_remaining\" class=\"method trait-impl\"><a href=\"#method.has_remaining\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_remaining</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if there are any more bytes to consume <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copy_to_slice\" class=\"method trait-impl\"><a href=\"#method.copy_to_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">copy_to_slice</a>(&amp;mut self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Copies bytes from <code>self</code> into <code>dst</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u8\" class=\"method trait-impl\"><a href=\"#method.get_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u8</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Gets an unsigned 8 bit integer from <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i8\" class=\"method trait-impl\"><a href=\"#method.get_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i8</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Gets a signed 8 bit integer from <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u16\" class=\"method trait-impl\"><a href=\"#method.get_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u16</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u16_le\" class=\"method trait-impl\"><a href=\"#method.get_u16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u16_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u16_ne\" class=\"method trait-impl\"><a href=\"#method.get_u16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u16_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i16\" class=\"method trait-impl\"><a href=\"#method.get_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i16</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i16_le\" class=\"method trait-impl\"><a href=\"#method.get_i16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i16_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i16_ne\" class=\"method trait-impl\"><a href=\"#method.get_i16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i16_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u32\" class=\"method trait-impl\"><a href=\"#method.get_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u32</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in the big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u32_le\" class=\"method trait-impl\"><a href=\"#method.get_u32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u32_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in the little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u32_ne\" class=\"method trait-impl\"><a href=\"#method.get_u32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u32_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i32\" class=\"method trait-impl\"><a href=\"#method.get_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i32</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i32_le\" class=\"method trait-impl\"><a href=\"#method.get_i32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i32_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i32_ne\" class=\"method trait-impl\"><a href=\"#method.get_i32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i32_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u64\" class=\"method trait-impl\"><a href=\"#method.get_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u64</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u64_le\" class=\"method trait-impl\"><a href=\"#method.get_u64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u64_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u64_ne\" class=\"method trait-impl\"><a href=\"#method.get_u64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u64_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i64\" class=\"method trait-impl\"><a href=\"#method.get_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i64</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i64_le\" class=\"method trait-impl\"><a href=\"#method.get_i64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i64_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i64_ne\" class=\"method trait-impl\"><a href=\"#method.get_i64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i64_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u128\" class=\"method trait-impl\"><a href=\"#method.get_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u128</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u128_le\" class=\"method trait-impl\"><a href=\"#method.get_u128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u128_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u128_ne\" class=\"method trait-impl\"><a href=\"#method.get_u128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u128_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i128\" class=\"method trait-impl\"><a href=\"#method.get_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i128</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i128_le\" class=\"method trait-impl\"><a href=\"#method.get_i128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i128_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i128_ne\" class=\"method trait-impl\"><a href=\"#method.get_i128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i128_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_uint\" class=\"method trait-impl\"><a href=\"#method.get_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_uint</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_uint_le\" class=\"method trait-impl\"><a href=\"#method.get_uint_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_uint_le</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_uint_ne\" class=\"method trait-impl\"><a href=\"#method.get_uint_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_uint_ne</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_int\" class=\"method trait-impl\"><a href=\"#method.get_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_int</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_int_le\" class=\"method trait-impl\"><a href=\"#method.get_int_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_int_le</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_int_ne\" class=\"method trait-impl\"><a href=\"#method.get_int_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_int_ne</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f32\" class=\"method trait-impl\"><a href=\"#method.get_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_f32</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f32_le\" class=\"method trait-impl\"><a href=\"#method.get_f32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_f32_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f32_ne\" class=\"method trait-impl\"><a href=\"#method.get_f32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_f32_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f64\" class=\"method trait-impl\"><a href=\"#method.get_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_f64</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f64_le\" class=\"method trait-impl\"><a href=\"#method.get_f64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_f64_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f64_ne\" class=\"method trait-impl\"><a href=\"#method.get_f64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_f64_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_copy_to_slice\" class=\"method trait-impl\"><a href=\"#method.try_copy_to_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_copy_to_slice</a>(&amp;mut self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Copies bytes from <code>self</code> into <code>dst</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u8\" class=\"method trait-impl\"><a href=\"#method.try_get_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u8</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 8 bit integer from <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i8\" class=\"method trait-impl\"><a href=\"#method.try_get_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i8</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i8.html\">i8</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 8 bit integer from <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u16\" class=\"method trait-impl\"><a href=\"#method.try_get_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u16</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u16_le\" class=\"method trait-impl\"><a href=\"#method.try_get_u16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u16_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u16_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_u16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u16_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i16\" class=\"method trait-impl\"><a href=\"#method.try_get_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i16</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i16_le\" class=\"method trait-impl\"><a href=\"#method.try_get_i16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i16_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an signed 16 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i16_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_i16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i16_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u32\" class=\"method trait-impl\"><a href=\"#method.try_get_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u32</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u32_le\" class=\"method trait-impl\"><a href=\"#method.try_get_u32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u32_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u32_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_u32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u32_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i32\" class=\"method trait-impl\"><a href=\"#method.try_get_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i32</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i32_le\" class=\"method trait-impl\"><a href=\"#method.try_get_i32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i32_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i32_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_i32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i32_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u64\" class=\"method trait-impl\"><a href=\"#method.try_get_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u64</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u64_le\" class=\"method trait-impl\"><a href=\"#method.try_get_u64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u64_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u64_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_u64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u64_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i64\" class=\"method trait-impl\"><a href=\"#method.try_get_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i64</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i64_le\" class=\"method trait-impl\"><a href=\"#method.try_get_i64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i64_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i64_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_i64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i64_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u128\" class=\"method trait-impl\"><a href=\"#method.try_get_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u128</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u128_le\" class=\"method trait-impl\"><a href=\"#method.try_get_u128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u128_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u128_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_u128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u128_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i128\" class=\"method trait-impl\"><a href=\"#method.try_get_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i128</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i128_le\" class=\"method trait-impl\"><a href=\"#method.try_get_i128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i128_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i128_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_i128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i128_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_uint\" class=\"method trait-impl\"><a href=\"#method.try_get_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_uint</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_uint_le\" class=\"method trait-impl\"><a href=\"#method.try_get_uint_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_uint_le</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_uint_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_uint_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_uint_ne</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_int\" class=\"method trait-impl\"><a href=\"#method.try_get_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_int</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_int_le\" class=\"method trait-impl\"><a href=\"#method.try_get_int_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_int_le</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_int_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_int_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_int_ne</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f32\" class=\"method trait-impl\"><a href=\"#method.try_get_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_f32</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f32.html\">f32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f32_le\" class=\"method trait-impl\"><a href=\"#method.try_get_f32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_f32_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f32.html\">f32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f32_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_f32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_f32_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f32.html\">f32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f64\" class=\"method trait-impl\"><a href=\"#method.try_get_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_f64</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f64_le\" class=\"method trait-impl\"><a href=\"#method.try_get_f64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_f64_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f64_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_f64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_f64_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copy_to_bytes\" class=\"method trait-impl\"><a href=\"#method.copy_to_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">copy_to_bytes</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; Bytes</h4></section></summary><div class='docblock'>Consumes <code>len</code> bytes inside self and returns new instance of <code>Bytes</code>\nwith this data. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">take</a>(self, limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; Take&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adaptor which will read at most <code>limit</code> bytes from <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">chain</a>&lt;U&gt;(self, next: U) -&gt; Chain&lt;Self, U&gt;<div class=\"where\">where\n    U: Buf,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adaptor which will chain this buffer with another. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reader\" class=\"method trait-impl\"><a href=\"#method.reader\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reader</a>(self) -&gt; Reader&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adaptor which implements the <code>Read</code> trait for <code>self</code>. <a>Read more</a></div></details></div></details>","Buf","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BufMut-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-BufMut-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; BufMut for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: BufMut + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.remaining_mut\" class=\"method trait-impl\"><a href=\"#method.remaining_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remaining_mut</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the number of bytes that can be written from the current\nposition until the end of the buffer is reached. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chunk_mut\" class=\"method trait-impl\"><a href=\"#method.chunk_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">chunk_mut</a>(&amp;mut self) -&gt; &amp;mut UninitSlice</h4></section></summary><div class='docblock'>Returns a mutable slice starting at the current BufMut position and of\nlength between 0 and <code>BufMut::remaining_mut()</code>. Note that this <em>can</em> be shorter than the\nwhole remainder of the buffer (this allows non-continuous implementation). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.advance_mut\" class=\"method trait-impl\"><a href=\"#method.advance_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">advance_mut</a>(&amp;mut self, cnt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Advance the internal cursor of the BufMut <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_slice\" class=\"method trait-impl\"><a href=\"#method.put_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor by the\nnumber of bytes written. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u8\" class=\"method trait-impl\"><a href=\"#method.put_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u8</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 8 bit integer to <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i8\" class=\"method trait-impl\"><a href=\"#method.put_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i8</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Writes a signed 8 bit integer to <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u16\" class=\"method trait-impl\"><a href=\"#method.put_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u16</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 16 bit integer to <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u16_le\" class=\"method trait-impl\"><a href=\"#method.put_u16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u16_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 16 bit integer to <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u16_ne\" class=\"method trait-impl\"><a href=\"#method.put_u16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u16_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 16 bit integer to <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i16\" class=\"method trait-impl\"><a href=\"#method.put_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i16</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Writes a signed 16 bit integer to <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i16_le\" class=\"method trait-impl\"><a href=\"#method.put_i16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i16_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Writes a signed 16 bit integer to <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i16_ne\" class=\"method trait-impl\"><a href=\"#method.put_i16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i16_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Writes a signed 16 bit integer to <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u32\" class=\"method trait-impl\"><a href=\"#method.put_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u32</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 32 bit integer to <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u32_le\" class=\"method trait-impl\"><a href=\"#method.put_u32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u32_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 32 bit integer to <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u32_ne\" class=\"method trait-impl\"><a href=\"#method.put_u32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u32_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 32 bit integer to <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i32\" class=\"method trait-impl\"><a href=\"#method.put_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i32</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Writes a signed 32 bit integer to <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i32_le\" class=\"method trait-impl\"><a href=\"#method.put_i32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i32_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Writes a signed 32 bit integer to <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i32_ne\" class=\"method trait-impl\"><a href=\"#method.put_i32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i32_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Writes a signed 32 bit integer to <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u64\" class=\"method trait-impl\"><a href=\"#method.put_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u64</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 64 bit integer to <code>self</code> in the big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u64_le\" class=\"method trait-impl\"><a href=\"#method.put_u64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u64_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 64 bit integer to <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u64_ne\" class=\"method trait-impl\"><a href=\"#method.put_u64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u64_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 64 bit integer to <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i64\" class=\"method trait-impl\"><a href=\"#method.put_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i64</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Writes a signed 64 bit integer to <code>self</code> in the big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i64_le\" class=\"method trait-impl\"><a href=\"#method.put_i64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i64_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Writes a signed 64 bit integer to <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i64_ne\" class=\"method trait-impl\"><a href=\"#method.put_i64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i64_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Writes a signed 64 bit integer to <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_remaining_mut\" class=\"method trait-impl\"><a href=\"#method.has_remaining_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_remaining_mut</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if there is space in <code>self</code> for more bytes. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method trait-impl\"><a href=\"#method.put\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put</a>&lt;T&gt;(&amp;mut self, src: T)<div class=\"where\">where\n    T: Buf,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor by the\nnumber of bytes written. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_bytes\" class=\"method trait-impl\"><a href=\"#method.put_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_bytes</a>(&amp;mut self, val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>, cnt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Put <code>cnt</code> bytes <code>val</code> into <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u128\" class=\"method trait-impl\"><a href=\"#method.put_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u128</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 128 bit integer to <code>self</code> in the big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u128_le\" class=\"method trait-impl\"><a href=\"#method.put_u128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u128_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 128 bit integer to <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u128_ne\" class=\"method trait-impl\"><a href=\"#method.put_u128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u128_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 128 bit integer to <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i128\" class=\"method trait-impl\"><a href=\"#method.put_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i128</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Writes a signed 128 bit integer to <code>self</code> in the big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i128_le\" class=\"method trait-impl\"><a href=\"#method.put_i128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i128_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Writes a signed 128 bit integer to <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i128_ne\" class=\"method trait-impl\"><a href=\"#method.put_i128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i128_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Writes a signed 128 bit integer to <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_uint\" class=\"method trait-impl\"><a href=\"#method.put_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_uint</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes an unsigned n-byte integer to <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_uint_le\" class=\"method trait-impl\"><a href=\"#method.put_uint_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_uint_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes an unsigned n-byte integer to <code>self</code> in the little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_uint_ne\" class=\"method trait-impl\"><a href=\"#method.put_uint_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_uint_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes an unsigned n-byte integer to <code>self</code> in the native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_int\" class=\"method trait-impl\"><a href=\"#method.put_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_int</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes low <code>nbytes</code> of a signed integer to <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_int_le\" class=\"method trait-impl\"><a href=\"#method.put_int_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_int_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes low <code>nbytes</code> of a signed integer to <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_int_ne\" class=\"method trait-impl\"><a href=\"#method.put_int_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_int_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes low <code>nbytes</code> of a signed integer to <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_f32\" class=\"method trait-impl\"><a href=\"#method.put_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_f32</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f32.html\">f32</a>)</h4></section></summary><div class='docblock'>Writes an IEEE754 single-precision (4 bytes) floating point number to\n<code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_f32_le\" class=\"method trait-impl\"><a href=\"#method.put_f32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_f32_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f32.html\">f32</a>)</h4></section></summary><div class='docblock'>Writes an IEEE754 single-precision (4 bytes) floating point number to\n<code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_f32_ne\" class=\"method trait-impl\"><a href=\"#method.put_f32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_f32_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f32.html\">f32</a>)</h4></section></summary><div class='docblock'>Writes an IEEE754 single-precision (4 bytes) floating point number to\n<code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_f64\" class=\"method trait-impl\"><a href=\"#method.put_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_f64</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Writes an IEEE754 double-precision (8 bytes) floating point number to\n<code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_f64_le\" class=\"method trait-impl\"><a href=\"#method.put_f64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_f64_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Writes an IEEE754 double-precision (8 bytes) floating point number to\n<code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_f64_ne\" class=\"method trait-impl\"><a href=\"#method.put_f64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_f64_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Writes an IEEE754 double-precision (8 bytes) floating point number to\n<code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limit\" class=\"method trait-impl\"><a href=\"#method.limit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">limit</a>(self, limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; Limit&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adaptor which can write at most <code>limit</code> bytes to <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.writer\" class=\"method trait-impl\"><a href=\"#method.writer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">writer</a>(self) -&gt; Writer&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adaptor which implements the <code>Write</code> trait for <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain_mut\" class=\"method trait-impl\"><a href=\"#method.chain_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">chain_mut</a>&lt;U&gt;(self, next: U) -&gt; Chain&lt;Self, U&gt;<div class=\"where\">where\n    U: BufMut,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adapter which will chain this buffer with another. <a>Read more</a></div></details></div></details>","BufMut","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BufRead-for-Box%3CB%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#206\">Source</a></span><a href=\"#impl-BufRead-for-Box%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.BufRead.html\" title=\"trait std::io::BufRead\">BufRead</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.BufRead.html\" title=\"trait std::io::BufRead\">BufRead</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fill_buf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#208\">Source</a><a href=\"#method.fill_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.BufRead.html#tymethod.fill_buf\" class=\"fn\">fill_buf</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>], <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Returns the contents of the internal buffer, filling it with more data\nfrom the inner reader if it is empty. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.BufRead.html#tymethod.fill_buf\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.consume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#213\">Source</a><a href=\"#method.consume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.BufRead.html#tymethod.consume\" class=\"fn\">consume</a>(&amp;mut self, amt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Tells this buffer that <code>amt</code> bytes have been consumed from the buffer,\nso they should no longer be returned in calls to <code>read</code>. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.BufRead.html#tymethod.consume\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_until\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#218\">Source</a><a href=\"#method.read_until\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.BufRead.html#method.read_until\" class=\"fn\">read_until</a>(&amp;mut self, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF is reached. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.BufRead.html#method.read_until\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_line\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#223\">Source</a><a href=\"#method.read_line\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.BufRead.html#method.read_line\" class=\"fn\">read_line</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes until a newline (the <code>0xA</code> byte) is reached, and append\nthem to the provided <code>String</code> buffer. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.BufRead.html#method.read_line\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_data_left\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#2335\">Source</a><a href=\"#method.has_data_left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.BufRead.html#method.has_data_left\" class=\"fn\">has_data_left</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>buf_read_has_data_left</code>)</span></div></span><div class='docblock'>Checks if the underlying <code>Read</code> has any data left to be read. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.BufRead.html#method.has_data_left\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_until\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.83.0\">1.83.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#2454\">Source</a></span><a href=\"#method.skip_until\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.BufRead.html#method.skip_until\" class=\"fn\">skip_until</a>(&amp;mut self, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Skips all bytes until the delimiter <code>byte</code> or EOF is reached. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.BufRead.html#method.skip_until\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#2560-2562\">Source</a></span><a href=\"#method.split\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.BufRead.html#method.split\" class=\"fn\">split</a>(self, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/struct.Split.html\" title=\"struct std::io::Split\">Split</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator over the contents of this reader split on the byte\n<code>byte</code>. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.BufRead.html#method.split\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lines\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#2597-2599\">Source</a></span><a href=\"#method.lines\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.BufRead.html#method.lines\" class=\"fn\">lines</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/struct.Lines.html\" title=\"struct std::io::Lines\">Lines</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator over the lines of this reader. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.BufRead.html#method.lines\">Read more</a></div></details></div></details>","BufRead","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1722\">Source</a></span><a href=\"#impl-Clone-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1738\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a new box with a <code>clone()</code> of this box’s contents.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = Box::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span>y = x.clone();\n\n<span class=\"comment\">// The value is the same\n</span><span class=\"macro\">assert_eq!</span>(x, y);\n\n<span class=\"comment\">// But they are unique objects\n</span><span class=\"macro\">assert_ne!</span>(<span class=\"kw-2\">&amp;*</span>x <span class=\"kw\">as </span><span class=\"kw-2\">*const </span>i32, <span class=\"kw-2\">&amp;*</span>y <span class=\"kw\">as </span><span class=\"kw-2\">*const </span>i32);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1765\">Source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Copies <code>source</code>’s contents into <code>self</code> without creating a new allocation.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = Box::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>y = Box::new(<span class=\"number\">10</span>);\n<span class=\"kw\">let </span>yp: <span class=\"kw-2\">*const </span>i32 = <span class=\"kw-2\">&amp;*</span>y;\n\ny.clone_from(<span class=\"kw-2\">&amp;</span>x);\n\n<span class=\"comment\">// The value is the same\n</span><span class=\"macro\">assert_eq!</span>(x, y);\n\n<span class=\"comment\">// And no allocation occurred\n</span><span class=\"macro\">assert_eq!</span>(yp, <span class=\"kw-2\">&amp;*</span>y);</code></pre></div>\n</div></details></div></details>","Clone","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Coroutine%3CR%3E-for-Box%3CG,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2085\">Source</a><a href=\"#impl-Coroutine%3CR%3E-for-Box%3CG,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;G, R, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html\" title=\"trait core::ops::coroutine::Coroutine\">Coroutine</a>&lt;R&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;G, A&gt;<div class=\"where\">where\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html\" title=\"trait core::ops::coroutine::Coroutine\">Coroutine</a>&lt;R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Yield\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2086\">Source</a><a href=\"#associatedtype.Yield\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#associatedtype.Yield\" class=\"associatedtype\">Yield</a> = &lt;G as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html\" title=\"trait core::ops::coroutine::Coroutine\">Coroutine</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#associatedtype.Yield\" title=\"type core::ops::coroutine::Coroutine::Yield\">Yield</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>coroutine_trait</code>)</span></div></span><div class='docblock'>The type of value this coroutine yields. <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#associatedtype.Yield\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Return\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2087\">Source</a><a href=\"#associatedtype.Return\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#associatedtype.Return\" class=\"associatedtype\">Return</a> = &lt;G as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html\" title=\"trait core::ops::coroutine::Coroutine\">Coroutine</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#associatedtype.Return\" title=\"type core::ops::coroutine::Coroutine::Return\">Return</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>coroutine_trait</code>)</span></div></span><div class='docblock'>The type of value this coroutine returns. <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#associatedtype.Return\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2089\">Source</a><a href=\"#method.resume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#tymethod.resume\" class=\"fn\">resume</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;G, A&gt;&gt;,\n    arg: R,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/enum.CoroutineState.html\" title=\"enum core::ops::coroutine::CoroutineState\">CoroutineState</a>&lt;&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;G, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html\" title=\"trait core::ops::coroutine::Coroutine\">Coroutine</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#associatedtype.Yield\" title=\"type core::ops::coroutine::Coroutine::Yield\">Yield</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;G, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html\" title=\"trait core::ops::coroutine::Coroutine\">Coroutine</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#associatedtype.Return\" title=\"type core::ops::coroutine::Coroutine::Return\">Return</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>coroutine_trait</code>)</span></div></span><div class='docblock'>Resumes the execution of this coroutine. <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#tymethod.resume\">Read more</a></div></details></div></details>","Coroutine<R>","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1929\">Source</a></span><a href=\"#impl-Debug-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1930\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Box%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1688\">Source</a></span><a href=\"#impl-Default-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1691\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <code>Box&lt;T&gt;</code>, with the <code>Default</code> value for T.</p>\n</div></details></div></details>","Default","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1946\">Source</a></span><a href=\"#impl-Deref-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1947\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = T</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1949\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1955\">Source</a></span><a href=\"#impl-DerefMut-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1956\">Source</a><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/deref/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/impls.rs.html#1965-1969\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/impls.rs.html#1965-1969\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1922\">Source</a></span><a href=\"#impl-Display-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1923\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DoubleEndedFallibleIterator-for-Box%3CI%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#1006\">Source</a><a href=\"#impl-DoubleEndedFallibleIterator-for-Box%3CI%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.DoubleEndedFallibleIterator.html\" title=\"trait fallible_iterator::DoubleEndedFallibleIterator\">DoubleEndedFallibleIterator</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.DoubleEndedFallibleIterator.html\" title=\"trait fallible_iterator::DoubleEndedFallibleIterator\">DoubleEndedFallibleIterator</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_back\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#1008\">Source</a><a href=\"#method.next_back\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.DoubleEndedFallibleIterator.html#tymethod.next_back\" class=\"fn\">next_back</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, &lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Advances the end of the iterator, returning the last value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rfold\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#1020-1023\">Source</a><a href=\"#method.rfold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.DoubleEndedFallibleIterator.html#method.rfold\" class=\"fn\">rfold</a>&lt;B, F&gt;(self, init: B, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Applies a function over the elements of the iterator in reverse order, producing a single final value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_rfold\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#1032-1036\">Source</a><a href=\"#method.try_rfold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.DoubleEndedFallibleIterator.html#method.try_rfold\" class=\"fn\">try_rfold</a>&lt;B, E, F&gt;(&amp;mut self, init: B, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, E&gt;,</div></h4></section></summary><div class='docblock'>Applies a function over the elements of the iterator in reverse, producing a single final value. <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.DoubleEndedFallibleIterator.html#method.try_rfold\">Read more</a></div></details></div></details>","DoubleEndedFallibleIterator","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DoubleEndedIterator-for-Box%3CI,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#61\">Source</a></span><a href=\"#impl-DoubleEndedIterator-for-Box%3CI,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;I, A&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_back\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#62\">Source</a><a href=\"#method.next_back\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#tymethod.next_back\" class=\"fn\">next_back</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class='docblock'>Removes and returns an element from the end of the iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#tymethod.next_back\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_back\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#65\">Source</a><a href=\"#method.nth_back\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.nth_back\" class=\"fn\">nth_back</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class='docblock'>Returns the <code>n</code>th element from the end of the iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.nth_back\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.advance_back_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/double_ended.rs.html#138\">Source</a><a href=\"#method.advance_back_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.advance_back_by\" class=\"fn\">advance_back_by</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_advance_by</code>)</span></div></span><div class='docblock'>Advances the iterator from the back by <code>n</code> elements. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.advance_back_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_rfold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/double_ended.rs.html#230-234\">Source</a></span><a href=\"#method.try_rfold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.try_rfold\" class=\"fn\">try_rfold</a>&lt;B, F, R&gt;(&amp;mut self, init: B, f: F) -&gt; R<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = B&gt;,</div></h4></section></summary><div class='docblock'>This is the reverse version of <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_fold\" title=\"method core::iter::traits::iterator::Iterator::try_fold\"><code>Iterator::try_fold()</code></a>: it takes\nelements starting from the back of the iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.try_rfold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rfold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/double_ended.rs.html#301-304\">Source</a></span><a href=\"#method.rfold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.rfold\" class=\"fn\">rfold</a>&lt;B, F&gt;(self, init: B, f: F) -&gt; B<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>An iterator method that reduces the iterator’s elements to a single,\nfinal value, starting from the back. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.rfold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rfind\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/double_ended.rs.html#356-359\">Source</a></span><a href=\"#method.rfind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.rfind\" class=\"fn\">rfind</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Searches for an element of an iterator from the back that satisfies a predicate. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.rfind\">Read more</a></div></details></div></details>","DoubleEndedIterator","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1670\">Source</a></span><a href=\"#impl-Drop-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1672\">Source</a><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Error-for-Box%3CE%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2117\">Source</a></span><a href=\"#impl-Error-for-Box%3CE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;E&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.description\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2119\">Source</a><a href=\"#method.description\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html#method.description\" class=\"fn\">description</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.42.0: use the Display impl or to_string()</span></div></span><div class='docblock'> <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html#method.description\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cause\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2124\">Source</a><a href=\"#method.cause\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html#method.cause\" class=\"fn\">cause</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.33.0: replaced by Error::source, which can support downcasting</span></div></span></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.source\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2128\">Source</a><a href=\"#method.source\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html#method.source\" class=\"fn\">source</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns the lower-level source of this error, if any. <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html#method.source\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.provide\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2132\">Source</a><a href=\"#method.provide\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html#method.provide\" class=\"fn\">provide</a>&lt;'b&gt;(&amp;'b self, request: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/error/struct.Request.html\" title=\"struct core::error::Request\">Request</a>&lt;'b&gt;)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>error_generic_member_access</code>)</span></div></span><div class='docblock'>Provides type-based access to context intended for error reports. <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html#method.provide\">Read more</a></div></details></div></details>","Error","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExactSizeIterator-for-Box%3CI,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#70\">Source</a></span><a href=\"#impl-ExactSizeIterator-for-Box%3CI,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;I, A&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#71\">Source</a><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/exact_size/trait.ExactSizeIterator.html#method.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the exact remaining length of the iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/exact_size/trait.ExactSizeIterator.html#method.len\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#74\">Source</a><a href=\"#method.is_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/exact_size/trait.ExactSizeIterator.html#method.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>exact_size_is_empty</code>)</span></div></span><div class='docblock'>Returns <code>true</code> if the iterator is empty. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/exact_size/trait.ExactSizeIterator.html#method.is_empty\">Read more</a></div></details></div></details>","ExactSizeIterator","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FallibleIterator-for-Box%3CI%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#985\">Source</a><a href=\"#impl-FallibleIterator-for-Box%3CI%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#986\">Source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = &lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a></h4></section></summary><div class='docblock'>The type being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#987\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a></h4></section></summary><div class='docblock'>The error type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#990\">Source</a><a href=\"#method.next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#tymethod.next\" class=\"fn\">next</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, &lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Advances the iterator and returns the next value. <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#tymethod.next\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#995\">Source</a><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Returns bounds on the remaining length of the iterator. <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.size_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#1000\">Source</a><a href=\"#method.nth\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.nth\" class=\"fn\">nth</a>(\n    &amp;mut self,\n    n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, &lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Returns the <code>n</code>th element of the iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#148-150\">Source</a><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.count\" class=\"fn\">count</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Consumes the iterator, returning the number of remaining items.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#157-159\">Source</a><a href=\"#method.last\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.last\" class=\"fn\">last</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns the last element of the iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.step_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#182-184\">Source</a><a href=\"#method.step_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.step_by\" class=\"fn\">step_by</a>(self, step: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.StepBy.html\" title=\"struct fallible_iterator::StepBy\">StepBy</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator starting at the same point, but stepping by the given amount at each iteration. <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.step_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#197-200\">Source</a><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.chain\" class=\"fn\">chain</a>&lt;I&gt;(self, it: I) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Chain.html\" title=\"struct fallible_iterator::Chain\">Chain</a>&lt;Self, I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>, Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator which yields the elements of this iterator followed\nby another.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#212-215\">Source</a><a href=\"#method.zip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.zip\" class=\"fn\">zip</a>&lt;I&gt;(\n    self,\n    o: I,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Zip.html\" title=\"struct fallible_iterator::Zip\">Zip</a>&lt;Self, &lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html#associatedtype.IntoFallibleIter\" title=\"type fallible_iterator::IntoFallibleIterator::IntoFallibleIter\">IntoFallibleIter</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator that yields pairs of this iterator’s and another\niterator’s values.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#223-226\">Source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.map\" class=\"fn\">map</a>&lt;F, B&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Map.html\" title=\"struct fallible_iterator::Map\">Map</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator which applies a fallible transform to the elements\nof the underlying iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.for_each\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#233-236\">Source</a><a href=\"#method.for_each\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.for_each\" class=\"fn\">for_each</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Calls a fallible closure on each element of an iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#245-248\">Source</a><a href=\"#method.filter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.filter\" class=\"fn\">filter</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Filter.html\" title=\"struct fallible_iterator::Filter\">Filter</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator which uses a predicate to determine which values\nshould be yielded. The predicate may fail; such failures are passed to\nthe caller.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#256-259\">Source</a><a href=\"#method.filter_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.filter_map\" class=\"fn\">filter_map</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.FilterMap.html\" title=\"struct fallible_iterator::FilterMap\">FilterMap</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator which both filters and maps. The closure may fail;\nsuch failures are passed along to the consumer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enumerate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#267-269\">Source</a><a href=\"#method.enumerate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.enumerate\" class=\"fn\">enumerate</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Enumerate.html\" title=\"struct fallible_iterator::Enumerate\">Enumerate</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator which yields the current iteration count as well\nas the value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peekable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#277-279\">Source</a><a href=\"#method.peekable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.peekable\" class=\"fn\">peekable</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Peekable.html\" title=\"struct fallible_iterator::Peekable\">Peekable</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator that can peek at the next element without consuming\nit.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_while\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#289-292\">Source</a><a href=\"#method.skip_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.skip_while\" class=\"fn\">skip_while</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.SkipWhile.html\" title=\"struct fallible_iterator::SkipWhile\">SkipWhile</a>&lt;Self, P&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator that skips elements based on a predicate.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_while\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#303-306\">Source</a><a href=\"#method.take_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.take_while\" class=\"fn\">take_while</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.TakeWhile.html\" title=\"struct fallible_iterator::TakeWhile\">TakeWhile</a>&lt;Self, P&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator that yields elements based on a predicate.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#317-319\">Source</a><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.skip\" class=\"fn\">skip</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Skip.html\" title=\"struct fallible_iterator::Skip\">Skip</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator which skips the first <code>n</code> values of this iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#327-329\">Source</a><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.take\" class=\"fn\">take</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Take.html\" title=\"struct fallible_iterator::Take\">Take</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator that yields only the first <code>n</code> values of this\niterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.scan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#340-343\">Source</a><a href=\"#method.scan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.scan\" class=\"fn\">scan</a>&lt;St, B, F&gt;(self, initial_state: St, f: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Scan.html\" title=\"struct fallible_iterator::Scan\">Scan</a>&lt;Self, St, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut St</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator which applies a stateful map to values of this\niterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flat_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#354-358\">Source</a><a href=\"#method.flat_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.flat_map\" class=\"fn\">flat_map</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.FlatMap.html\" title=\"struct fallible_iterator::FlatMap\">FlatMap</a>&lt;Self, U, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;U, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator which maps this iterator’s elements to iterators, yielding those iterators’ values.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flatten\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#368-371\">Source</a><a href=\"#method.flatten\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.flatten\" class=\"fn\">flatten</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Flatten.html\" title=\"struct fallible_iterator::Flatten\">Flatten</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator which flattens an iterator of iterators, yielding those iterators’ values.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fuse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#386-388\">Source</a><a href=\"#method.fuse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.fuse\" class=\"fn\">fuse</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Fuse.html\" title=\"struct fallible_iterator::Fuse\">Fuse</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator which yields this iterator’s elements and ends after\nthe first <code>Ok(None)</code>. <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.fuse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inspect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#398-401\">Source</a><a href=\"#method.inspect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.inspect\" class=\"fn\">inspect</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Inspect.html\" title=\"struct fallible_iterator::Inspect\">Inspect</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator which passes each element to a closure before returning it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#411-413\">Source</a><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Borrow an iterator rather than consuming it. <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#422-425\">Source</a><a href=\"#method.collect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.collect\" class=\"fn\">collect</a>&lt;T&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transforms the iterator into a collection. <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.collect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partition\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#432-436\">Source</a><a href=\"#method.partition\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.partition\" class=\"fn\">partition</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.tuple.html\">(B, B)</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Transforms the iterator into two collections, partitioning elements by a closure.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#456-459\">Source</a><a href=\"#method.fold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.fold\" class=\"fn\">fold</a>&lt;B, F&gt;(self, init: B, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Applies a function over the elements of the iterator, producing a single\nfinal value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#468-472\">Source</a><a href=\"#method.try_fold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.try_fold\" class=\"fn\">try_fold</a>&lt;B, E, F&gt;(&amp;mut self, init: B, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, E&gt;,</div></h4></section></summary><div class='docblock'>Applies a function over the elements of the iterator, producing a single final value. <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.try_fold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#482-485\">Source</a><a href=\"#method.all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.all\" class=\"fn\">all</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Determines if all elements of this iterator match a predicate.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#499-502\">Source</a><a href=\"#method.any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.any\" class=\"fn\">any</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Determines if any element of this iterator matches a predicate.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#516-519\">Source</a><a href=\"#method.find\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.find\" class=\"fn\">find</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns the first element of the iterator that matches a predicate.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#533-536\">Source</a><a href=\"#method.find_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.find_map\" class=\"fn\">find_map</a>&lt;B, F&gt;(&amp;mut self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Applies a function to the elements of the iterator, returning the first non-<code>None</code> result.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.position\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#545-548\">Source</a><a href=\"#method.position\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.position\" class=\"fn\">position</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns the position of the first element of this iterator that matches\na predicate. The predicate may fail; such failures are returned to the\ncaller.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#562-565\">Source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.max\" class=\"fn\">max</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class='docblock'>Returns the maximal element of the iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_by_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#573-577\">Source</a><a href=\"#method.max_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.max_by_key\" class=\"fn\">max_by_key</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns the element of the iterator which gives the maximum value from\nthe function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#597-600\">Source</a><a href=\"#method.max_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.max_by\" class=\"fn\">max_by</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns the element that gives the maximum value with respect to the function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#619-622\">Source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.min\" class=\"fn\">min</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class='docblock'>Returns the minimal element of the iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_by_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#630-634\">Source</a><a href=\"#method.min_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.min_by_key\" class=\"fn\">min_by_key</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns the element of the iterator which gives the minimum value from\nthe function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#654-657\">Source</a><a href=\"#method.min_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.min_by\" class=\"fn\">min_by</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns the element that gives the minimum value with respect to the function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rev\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#677-679\">Source</a><a href=\"#method.rev\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.rev\" class=\"fn\">rev</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Rev.html\" title=\"struct fallible_iterator::Rev\">Rev</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.DoubleEndedFallibleIterator.html\" title=\"trait fallible_iterator::DoubleEndedFallibleIterator\">DoubleEndedFallibleIterator</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator that yields this iterator’s items in the opposite\norder.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#686-690\">Source</a><a href=\"#method.unzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.unzip\" class=\"fn\">unzip</a>&lt;A, B, FromA, FromB&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.tuple.html\">(FromA, FromB)</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>Converts an iterator of pairs into a pair of containers.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#706-709\">Source</a><a href=\"#method.cloned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.cloned\" class=\"fn\">cloned</a>&lt;'a, T&gt;(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Cloned.html\" title=\"struct fallible_iterator::Cloned\">Cloned</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;'a T</a>&gt;,\n    T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator which clones all of its elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cycle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#716-718\">Source</a><a href=\"#method.cycle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.cycle\" class=\"fn\">cycle</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Cycle.html\" title=\"struct fallible_iterator::Cycle\">Cycle</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator which repeats this iterator endlessly.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#729-733\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.cmp\" class=\"fn\">cmp</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>, Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class='docblock'>Lexicographically compares the elements of this iterator to that of\nanother.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#753-757\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.partial_cmp\" class=\"fn\">partial_cmp</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::IntoFallibleIterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Lexicographically compares the elements of this iterator to that of\nanother.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#777-781\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.eq\" class=\"fn\">eq</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::IntoFallibleIterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Determines if the elements of this iterator are equal to those of\nanother.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#801-805\">Source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.ne\" class=\"fn\">ne</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::IntoFallibleIterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Determines if the elements of this iterator are not equal to those of\nanother.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#825-829\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.lt\" class=\"fn\">lt</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::IntoFallibleIterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Determines if the elements of this iterator are lexicographically less\nthan those of another.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#851-855\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.le\" class=\"fn\">le</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::IntoFallibleIterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Determines if the elements of this iterator are lexicographically less\nthan or equal to those of another.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#877-881\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.gt\" class=\"fn\">gt</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::IntoFallibleIterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Determines if the elements of this iterator are lexicographically\ngreater than those of another.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#903-907\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.ge\" class=\"fn\">ge</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::IntoFallibleIterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Determines if the elements of this iterator are lexicographically\ngreater than or equal to those of another.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iterator\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#928-930\">Source</a><a href=\"#method.iterator\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.iterator\" class=\"fn\">iterator</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Iterator.html\" title=\"struct fallible_iterator::Iterator\">Iterator</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns a normal (non-fallible) iterator over <code>Result&lt;Item, Error&gt;</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_err\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#938-941\">Source</a><a href=\"#method.map_err\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.map_err\" class=\"fn\">map_err</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.MapErr.html\" title=\"struct fallible_iterator::MapErr\">MapErr</a>&lt;Self, F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>) -&gt; B,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator which applies a transform to the errors of the\nunderlying iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#948-951\">Source</a><a href=\"#method.unwrap\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.unwrap\" class=\"fn\">unwrap</a>&lt;T&gt;(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Unwrap.html\" title=\"struct fallible_iterator::Unwrap\">Unwrap</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&lt;Item = T&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator which unwraps all of its elements.</div></details></div></details>","FallibleIterator","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Fn%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1984\">Source</a></span><a href=\"#impl-Fn%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>&lt;Args&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Tuple.html\" title=\"trait core::marker::Tuple\">Tuple</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>&lt;Args&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1985\">Source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">extern &quot;rust-call&quot; fn <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.Fn.html#tymethod.call\" class=\"fn\">call</a>(\n    &amp;self,\n    args: Args,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html#associatedtype.Output\" title=\"type core::ops::function::FnOnce::Output\">Output</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>fn_traits</code>)</span></div></span><div class='docblock'>Performs the call operation.</div></details></div></details>","Fn<Args>","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FnMut%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1977\">Source</a></span><a href=\"#impl-FnMut%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>&lt;Args&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Tuple.html\" title=\"trait core::marker::Tuple\">Tuple</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>&lt;Args&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1978\">Source</a><a href=\"#method.call_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">extern &quot;rust-call&quot; fn <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html#tymethod.call_mut\" class=\"fn\">call_mut</a>(\n    &amp;mut self,\n    args: Args,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html#associatedtype.Output\" title=\"type core::ops::function::FnOnce::Output\">Output</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>fn_traits</code>)</span></div></span><div class='docblock'>Performs the call operation.</div></details></div></details>","FnMut<Args>","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FnOnce%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1968\">Source</a></span><a href=\"#impl-FnOnce%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>&lt;Args&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Tuple.html\" title=\"trait core::marker::Tuple\">Tuple</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>&lt;Args&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1969\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html#associatedtype.Output\" title=\"type core::ops::function::FnOnce::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after the call operator is used.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_once\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1971\">Source</a><a href=\"#method.call_once\" class=\"anchor\">§</a><h4 class=\"code-header\">extern &quot;rust-call&quot; fn <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html#tymethod.call_once\" class=\"fn\">call_once</a>(\n    self,\n    args: Args,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html#associatedtype.Output\" title=\"type core::ops::function::FnOnce::Output\">Output</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>fn_traits</code>)</span></div></span><div class='docblock'>Performs the call operation.</div></details></div></details>","FnOnce<Args>","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-Box%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#23\">Source</a></span><a href=\"#impl-From%3CT%3E-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#37\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a <code>T</code> into a <code>Box&lt;T&gt;</code></p>\n<p>The conversion allocates on the heap and moves <code>t</code>\nfrom the stack into it.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"number\">5</span>;\n<span class=\"kw\">let </span>boxed = Box::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert_eq!</span>(Box::from(x), boxed);</code></pre></div>\n</div></details></div></details>","From<T>","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Future-for-Box%3CF,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.36.0\">1.36.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2108\">Source</a></span><a href=\"#impl-Future-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2109\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.1/core/future/future/trait.Future.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section></summary><div class='docblock'>The type of value produced on completion.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2111\">Source</a><a href=\"#method.poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/future/future/trait.Future.html#tymethod.poll\" class=\"fn\">poll</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>Attempts to resolve the future to a final value, registering\nthe current task for wakeup if the value is not yet available. <a href=\"https://doc.rust-lang.org/1.84.1/core/future/future/trait.Future.html#tymethod.poll\">Read more</a></div></details></div></details>","Future","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1863\">Source</a></span><a href=\"#impl-Hash-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1864\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hasher-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1870\">Source</a></span><a href=\"#impl-Hasher-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.finish\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1871\">Source</a><a href=\"#method.finish\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#tymethod.finish\" class=\"fn\">finish</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the hash value for the values written so far. <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#tymethod.finish\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1874\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Writes some data into this <code>Hasher</code>. <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#tymethod.write\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1877\">Source</a><a href=\"#method.write_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_u8\" class=\"fn\">write_u8</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Writes a single <code>u8</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1880\">Source</a><a href=\"#method.write_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_u16\" class=\"fn\">write_u16</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Writes a single <code>u16</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1883\">Source</a><a href=\"#method.write_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_u32\" class=\"fn\">write_u32</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Writes a single <code>u32</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1886\">Source</a><a href=\"#method.write_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_u64\" class=\"fn\">write_u64</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Writes a single <code>u64</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1889\">Source</a><a href=\"#method.write_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_u128\" class=\"fn\">write_u128</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Writes a single <code>u128</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1892\">Source</a><a href=\"#method.write_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_usize\" class=\"fn\">write_usize</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes a single <code>usize</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1895\">Source</a><a href=\"#method.write_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_i8\" class=\"fn\">write_i8</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Writes a single <code>i8</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1898\">Source</a><a href=\"#method.write_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_i16\" class=\"fn\">write_i16</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Writes a single <code>i16</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1901\">Source</a><a href=\"#method.write_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_i32\" class=\"fn\">write_i32</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Writes a single <code>i32</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1904\">Source</a><a href=\"#method.write_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_i64\" class=\"fn\">write_i64</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Writes a single <code>i64</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1907\">Source</a><a href=\"#method.write_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_i128\" class=\"fn\">write_i128</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Writes a single <code>i128</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1910\">Source</a><a href=\"#method.write_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_isize\" class=\"fn\">write_isize</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Writes a single <code>isize</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_length_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1913\">Source</a><a href=\"#method.write_length_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_length_prefix\" class=\"fn\">write_length_prefix</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>hasher_prefixfree_extras</code>)</span></div></span><div class='docblock'>Writes a length prefix into this hasher, as part of being prefix-free. <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_length_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1916\">Source</a><a href=\"#method.write_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_str\" class=\"fn\">write_str</a>(&amp;mut self, s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>hasher_prefixfree_extras</code>)</span></div></span><div class='docblock'>Writes a single <code>str</code> into this hasher. <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_str\">Read more</a></div></details></div></details>","Hasher","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Iterator-for-Box%3CI,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#18\">Source</a></span><a href=\"#impl-Iterator-for-Box%3CI,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;I, A&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#19\">Source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#20\">Source</a><a href=\"#method.next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#tymethod.next\" class=\"fn\">next</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class='docblock'>Advances the iterator and returns the next value. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#tymethod.next\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#23\">Source</a><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Returns the bounds on the remaining length of the iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.size_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#26\">Source</a><a href=\"#method.nth\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.nth\" class=\"fn\">nth</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class='docblock'>Returns the <code>n</code>th element of the iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.nth\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#29\">Source</a><a href=\"#method.last\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.last\" class=\"fn\">last</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class='docblock'>Consumes the iterator, returning the last element. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.last\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_chunk\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#109-113\">Source</a><a href=\"#method.next_chunk\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.next_chunk\" class=\"fn\">next_chunk</a>&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.array.html\">N</a>], <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, N&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_next_chunk</code>)</span></div></span><div class='docblock'>Advances the iterator and returns an array containing the next <code>N</code> values. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.next_chunk\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#221-223\">Source</a></span><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.count\" class=\"fn\">count</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Consumes the iterator, counting the number of iterations and returning it. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.count\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.advance_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#296\">Source</a><a href=\"#method.advance_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.advance_by\" class=\"fn\">advance_by</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_advance_by</code>)</span></div></span><div class='docblock'>Advances the iterator by <code>n</code> elements. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.advance_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.step_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#397-399\">Source</a></span><a href=\"#method.step_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.step_by\" class=\"fn\">step_by</a>(self, step: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/step_by/struct.StepBy.html\" title=\"struct core::iter::adapters::step_by::StepBy\">StepBy</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.step_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#468-471\">Source</a></span><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.chain\" class=\"fn\">chain</a>&lt;U&gt;(self, other: U) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/chain/struct.Chain.html\" title=\"struct core::iter::adapters::chain::Chain\">Chain</a>&lt;Self, &lt;U as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Takes two iterators and creates a new iterator over both in sequence. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#586-589\">Source</a></span><a href=\"#method.zip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.zip\" class=\"fn\">zip</a>&lt;U&gt;(self, other: U) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/zip/struct.Zip.html\" title=\"struct core::iter::adapters::zip::Zip\">Zip</a>&lt;Self, &lt;U as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,</div></h4></section></summary><div class='docblock'>‘Zips up’ two iterators into a single iterator of pairs. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.zip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersperse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#628-631\">Source</a><a href=\"#method.intersperse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.intersperse\" class=\"fn\">intersperse</a>(self, separator: Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/intersperse/struct.Intersperse.html\" title=\"struct core::iter::adapters::intersperse::Intersperse\">Intersperse</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_intersperse</code>)</span></div></span><div class='docblock'>Creates a new iterator which places a copy of <code>separator</code> between adjacent\nitems of the original iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.intersperse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersperse_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#686-689\">Source</a><a href=\"#method.intersperse_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.intersperse_with\" class=\"fn\">intersperse_with</a>&lt;G&gt;(self, separator: G) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/intersperse/struct.IntersperseWith.html\" title=\"struct core::iter::adapters::intersperse::IntersperseWith\">IntersperseWith</a>&lt;Self, G&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>() -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_intersperse</code>)</span></div></span><div class='docblock'>Creates a new iterator which places an item generated by <code>separator</code>\nbetween adjacent items of the original iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.intersperse_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#745-748\">Source</a></span><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.map\" class=\"fn\">map</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/map/struct.Map.html\" title=\"struct core::iter::adapters::map::Map\">Map</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Takes a closure and creates an iterator which calls that closure on each\nelement. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.for_each\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#790-793\">Source</a></span><a href=\"#method.for_each\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.for_each\" class=\"fn\">for_each</a>&lt;F&gt;(self, f: F)<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>),</div></h4></section></summary><div class='docblock'>Calls a closure on each element of an iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.for_each\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#866-869\">Source</a></span><a href=\"#method.filter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.filter\" class=\"fn\">filter</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/filter/struct.Filter.html\" title=\"struct core::iter::adapters::filter::Filter\">Filter</a>&lt;Self, P&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which uses a closure to determine if an element\nshould be yielded. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.filter\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter_map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#911-914\">Source</a></span><a href=\"#method.filter_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.filter_map\" class=\"fn\">filter_map</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/filter_map/struct.FilterMap.html\" title=\"struct core::iter::adapters::filter_map::FilterMap\">FilterMap</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator that both filters and maps. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.filter_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enumerate\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#958-960\">Source</a></span><a href=\"#method.enumerate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.enumerate\" class=\"fn\">enumerate</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/enumerate/struct.Enumerate.html\" title=\"struct core::iter::adapters::enumerate::Enumerate\">Enumerate</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which gives the current iteration count as well as\nthe next value. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.enumerate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peekable\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1029-1031\">Source</a></span><a href=\"#method.peekable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.peekable\" class=\"fn\">peekable</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/peekable/struct.Peekable.html\" title=\"struct core::iter::adapters::peekable::Peekable\">Peekable</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which can use the <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/peekable/struct.Peekable.html#method.peek\" title=\"method core::iter::adapters::peekable::Peekable::peek\"><code>peek</code></a> and <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/peekable/struct.Peekable.html#method.peek_mut\" title=\"method core::iter::adapters::peekable::Peekable::peek_mut\"><code>peek_mut</code></a> methods\nto look at the next element of the iterator without consuming it. See\ntheir documentation for more information. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.peekable\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_while\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1094-1097\">Source</a></span><a href=\"#method.skip_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.skip_while\" class=\"fn\">skip_while</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/skip_while/struct.SkipWhile.html\" title=\"struct core::iter::adapters::skip_while::SkipWhile\">SkipWhile</a>&lt;Self, P&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.skip\" title=\"method core::iter::traits::iterator::Iterator::skip\"><code>skip</code></a>s elements based on a predicate. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.skip_while\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_while\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1175-1178\">Source</a></span><a href=\"#method.take_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.take_while\" class=\"fn\">take_while</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/take_while/struct.TakeWhile.html\" title=\"struct core::iter::adapters::take_while::TakeWhile\">TakeWhile</a>&lt;Self, P&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that yields elements based on a predicate. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.take_while\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_while\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.57.0\">1.57.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1263-1266\">Source</a></span><a href=\"#method.map_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.map_while\" class=\"fn\">map_while</a>&lt;B, P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/map_while/struct.MapWhile.html\" title=\"struct core::iter::adapters::map_while::MapWhile\">MapWhile</a>&lt;Self, P&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator that both yields elements based on a predicate and maps. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.map_while\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1292-1294\">Source</a></span><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.skip\" class=\"fn\">skip</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/skip/struct.Skip.html\" title=\"struct core::iter::adapters::skip::Skip\">Skip</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that skips the first <code>n</code> elements. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.skip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1345-1347\">Source</a></span><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.take\" class=\"fn\">take</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/take/struct.Take.html\" title=\"struct core::iter::adapters::take::Take\">Take</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that yields the first <code>n</code> elements, or fewer\nif the underlying iterator ends sooner. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.take\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.scan\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1392-1395\">Source</a></span><a href=\"#method.scan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.scan\" class=\"fn\">scan</a>&lt;St, B, F&gt;(self, initial_state: St, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/scan/struct.Scan.html\" title=\"struct core::iter::adapters::scan::Scan\">Scan</a>&lt;Self, St, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut St</a>, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>An iterator adapter which, like <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.fold\" title=\"method core::iter::traits::iterator::Iterator::fold\"><code>fold</code></a>, holds internal state, but\nunlike <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.fold\" title=\"method core::iter::traits::iterator::Iterator::fold\"><code>fold</code></a>, produces a new iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.scan\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flat_map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1430-1434\">Source</a></span><a href=\"#method.flat_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.flat_map\" class=\"fn\">flat_map</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/flatten/struct.FlatMap.html\" title=\"struct core::iter::adapters::flatten::FlatMap\">FlatMap</a>&lt;Self, U, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; U,</div></h4></section></summary><div class='docblock'>Creates an iterator that works like map, but flattens nested structure. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.flat_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flatten\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.29.0\">1.29.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1514-1517\">Source</a></span><a href=\"#method.flatten\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.flatten\" class=\"fn\">flatten</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/flatten/struct.Flatten.html\" title=\"struct core::iter::adapters::flatten::Flatten\">Flatten</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that flattens nested structure. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.flatten\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_windows\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1670-1673\">Source</a><a href=\"#method.map_windows\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.map_windows\" class=\"fn\">map_windows</a>&lt;F, R, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/map_windows/struct.MapWindows.html\" title=\"struct core::iter::adapters::map_windows::MapWindows\">MapWindows</a>&lt;Self, F, N&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;[Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.array.html\">N</a>]) -&gt; R,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_map_windows</code>)</span></div></span><div class='docblock'>Calls the given function <code>f</code> for each contiguous window of size <code>N</code> over\n<code>self</code> and returns an iterator over the outputs of <code>f</code>. Like <a href=\"https://doc.rust-lang.org/1.84.1/std/primitive.slice.html#method.windows\" title=\"method slice::windows\"><code>slice::windows()</code></a>,\nthe windows during mapping overlap as well. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.map_windows\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fuse\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1736-1738\">Source</a></span><a href=\"#method.fuse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.fuse\" class=\"fn\">fuse</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/fuse/struct.Fuse.html\" title=\"struct core::iter::adapters::fuse::Fuse\">Fuse</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which ends after the first <a href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.fuse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inspect\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1820-1823\">Source</a></span><a href=\"#method.inspect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.inspect\" class=\"fn\">inspect</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/inspect/struct.Inspect.html\" title=\"struct core::iter::adapters::inspect::Inspect\">Inspect</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>),</div></h4></section></summary><div class='docblock'>Does something with each element of an iterator, passing the value on. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.inspect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1848-1850\">Source</a></span><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Borrows an iterator, rather than consuming it. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1967-1969\">Source</a></span><a href=\"#method.collect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.collect\" class=\"fn\">collect</a>&lt;B&gt;(self) -&gt; B<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transforms an iterator into a collection. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.collect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_collect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2045-2049\">Source</a><a href=\"#method.try_collect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_collect\" class=\"fn\">try_collect</a>&lt;B&gt;(\n    &amp;mut self,\n) -&gt; &lt;&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;B&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Residual.html#associatedtype.TryType\" title=\"type core::ops::try_trait::Residual::TryType\">TryType</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>,\n    &lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;B&gt;,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html#associatedtype.Output\" title=\"type core::ops::try_trait::Try::Output\">Output</a>&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iterator_try_collect</code>)</span></div></span><div class='docblock'>Fallibly transforms an iterator into a collection, short circuiting if\na failure is encountered. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_collect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2117-2119\">Source</a><a href=\"#method.collect_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.collect_into\" class=\"fn\">collect_into</a>&lt;E&gt;(self, collection: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut E</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_collect_into</code>)</span></div></span><div class='docblock'>Collects all the items from an iterator into a collection. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.collect_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partition\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2149-2153\">Source</a></span><a href=\"#method.partition\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.partition\" class=\"fn\">partition</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.tuple.html\">(B, B)</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Consumes an iterator, creating two collections from it. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.partition\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partition_in_place\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2211-2214\">Source</a><a href=\"#method.partition_in_place\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.partition_in_place\" class=\"fn\">partition_in_place</a>&lt;'a, T, P&gt;(self, predicate: P) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    T: 'a,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_partition_in_place</code>)</span></div></span><div class='docblock'>Reorders the elements of this iterator <em>in-place</em> according to the given predicate,\nsuch that all those that return <code>true</code> precede all those that return <code>false</code>.\nReturns the number of <code>true</code> elements found. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.partition_in_place\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_partitioned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2268-2271\">Source</a><a href=\"#method.is_partitioned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.is_partitioned\" class=\"fn\">is_partitioned</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_is_partitioned</code>)</span></div></span><div class='docblock'>Checks if the elements of this iterator are partitioned according to the given predicate,\nsuch that all those that return <code>true</code> precede all those that return <code>false</code>. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.is_partitioned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2362-2366\">Source</a></span><a href=\"#method.try_fold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_fold\" class=\"fn\">try_fold</a>&lt;B, F, R&gt;(&amp;mut self, init: B, f: F) -&gt; R<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = B&gt;,</div></h4></section></summary><div class='docblock'>An iterator method that applies a function as long as it returns\nsuccessfully, producing a single, final value. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_fold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_for_each\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2420-2424\">Source</a></span><a href=\"#method.try_for_each\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_for_each\" class=\"fn\">try_for_each</a>&lt;F, R&gt;(&amp;mut self, f: F) -&gt; R<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class='docblock'>An iterator method that applies a fallible function to each item in the\niterator, stopping at the first error and returning that error. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_for_each\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2539-2542\">Source</a></span><a href=\"#method.fold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.fold\" class=\"fn\">fold</a>&lt;B, F&gt;(self, init: B, f: F) -&gt; B<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Folds every element into an accumulator by applying an operation,\nreturning the final result. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.fold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reduce\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2576-2579\">Source</a></span><a href=\"#method.reduce\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.reduce\" class=\"fn\">reduce</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>,</div></h4></section></summary><div class='docblock'>Reduces the elements to a single one, by repeatedly applying a reducing\noperation. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.reduce\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reduce\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2647-2653\">Source</a><a href=\"#method.try_reduce\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_reduce\" class=\"fn\">try_reduce</a>&lt;R&gt;(\n    &amp;mut self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n) -&gt; &lt;&lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html#associatedtype.Output\" title=\"type core::ops::try_trait::Try::Output\">Output</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Residual.html#associatedtype.TryType\" title=\"type core::ops::try_trait::Residual::TryType\">TryType</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    &lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iterator_try_reduce</code>)</span></div></span><div class='docblock'>Reduces the elements to a single one by repeatedly applying a reducing operation. If the\nclosure returns a failure, the failure is propagated back to the caller immediately. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_reduce\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.all\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2705-2708\">Source</a></span><a href=\"#method.all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.all\" class=\"fn\">all</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Tests if every element of the iterator matches a predicate. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.all\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.any\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2758-2761\">Source</a></span><a href=\"#method.any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.any\" class=\"fn\">any</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Tests if any element of the iterator matches a predicate. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.any\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2821-2824\">Source</a></span><a href=\"#method.find\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.find\" class=\"fn\">find</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Searches for an element of an iterator that satisfies a predicate. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.find\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.30.0\">1.30.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2852-2855\">Source</a></span><a href=\"#method.find_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.find_map\" class=\"fn\">find_map</a>&lt;B, F&gt;(&amp;mut self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>Applies function to the elements of iterator and returns\nthe first non-none result. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.find_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_find\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2910-2916\">Source</a><a href=\"#method.try_find\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_find\" class=\"fn\">try_find</a>&lt;R&gt;(\n    &amp;mut self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n) -&gt; &lt;&lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Residual.html#associatedtype.TryType\" title=\"type core::ops::try_trait::Residual::TryType\">TryType</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>&gt;,\n    &lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_find</code>)</span></div></span><div class='docblock'>Applies function to the elements of iterator and returns\nthe first true result or the first error. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_find\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.position\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2993-2996\">Source</a></span><a href=\"#method.position\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.position\" class=\"fn\">position</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Searches for an element in an iterator, returning its index. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.position\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rposition\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3057-3060\">Source</a></span><a href=\"#method.rposition\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.rposition\" class=\"fn\">rposition</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a>,</div></h4></section></summary><div class='docblock'>Searches for an element in an iterator from the right, returning its\nindex. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.rposition\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3106-3109\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.max\" class=\"fn\">max</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class='docblock'>Returns the maximum element of an iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3142-3145\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.min\" class=\"fn\">min</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class='docblock'>Returns the minimum element of an iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_by_key\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3164-3167\">Source</a></span><a href=\"#method.max_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.max_by_key\" class=\"fn\">max_by_key</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Returns the element that gives the maximum value from the\nspecified function. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.max_by_key\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.15.0\">1.15.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3197-3200\">Source</a></span><a href=\"#method.max_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.max_by\" class=\"fn\">max_by</a>&lt;F&gt;(self, compare: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class='docblock'>Returns the element that gives the maximum value with respect to the\nspecified comparison function. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.max_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_by_key\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3224-3227\">Source</a></span><a href=\"#method.min_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.min_by_key\" class=\"fn\">min_by_key</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Returns the element that gives the minimum value from the\nspecified function. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.min_by_key\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.15.0\">1.15.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3257-3260\">Source</a></span><a href=\"#method.min_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.min_by\" class=\"fn\">min_by</a>&lt;F&gt;(self, compare: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class='docblock'>Returns the element that gives the minimum value with respect to the\nspecified comparison function. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.min_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rev\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3294-3296\">Source</a></span><a href=\"#method.rev\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.rev\" class=\"fn\">rev</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/rev/struct.Rev.html\" title=\"struct core::iter::adapters::rev::Rev\">Rev</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a>,</div></h4></section></summary><div class='docblock'>Reverses an iterator’s direction. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.rev\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unzip\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3330-3334\">Source</a></span><a href=\"#method.unzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.unzip\" class=\"fn\">unzip</a>&lt;A, B, FromA, FromB&gt;(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.tuple.html\">(FromA, FromB)</a><div class=\"where\">where\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.tuple.html\">(A, B)</a>&gt;,</div></h4></section></summary><div class='docblock'>Converts an iterator of pairs into a pair of containers. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.unzip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.36.0\">1.36.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3361-3364\">Source</a></span><a href=\"#method.copied\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.copied\" class=\"fn\">copied</a>&lt;'a, T&gt;(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/copied/struct.Copied.html\" title=\"struct core::iter::adapters::copied::Copied\">Copied</a>&lt;Self&gt;<div class=\"where\">where\n    T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator which copies all of its elements. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.copied\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3409-3412\">Source</a></span><a href=\"#method.cloned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.cloned\" class=\"fn\">cloned</a>&lt;'a, T&gt;(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/cloned/struct.Cloned.html\" title=\"struct core::iter::adapters::cloned::Cloned\">Cloned</a>&lt;Self&gt;<div class=\"where\">where\n    T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator which <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#tymethod.clone\" title=\"method core::clone::Clone::clone\"><code>clone</code></a>s all of its elements. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.cloned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cycle\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3441-3443\">Source</a></span><a href=\"#method.cycle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.cycle\" class=\"fn\">cycle</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/cycle/struct.Cycle.html\" title=\"struct core::iter::adapters::cycle::Cycle\">Cycle</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Repeats an iterator endlessly. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.cycle\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.array_chunks\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3484-3486\">Source</a><a href=\"#method.array_chunks\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.array_chunks\" class=\"fn\">array_chunks</a>&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/array_chunks/struct.ArrayChunks.html\" title=\"struct core::iter::adapters::array_chunks::ArrayChunks\">ArrayChunks</a>&lt;Self, N&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_array_chunks</code>)</span></div></span><div class='docblock'>Returns an iterator over <code>N</code> elements of the iterator at a time. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.array_chunks\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.11.0\">1.11.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3515-3518\">Source</a></span><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.sum\" class=\"fn\">sum</a>&lt;S&gt;(self) -&gt; S<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Sums the elements of an iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.sum\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.11.0\">1.11.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3547-3550\">Source</a></span><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.product\" class=\"fn\">product</a>&lt;P&gt;(self) -&gt; P<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Iterates over the entire iterator, multiplying all the elements <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.product\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3568-3572\">Source</a></span><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.cmp\" class=\"fn\">cmp</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">Lexicographically</a> compares the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> with those\nof another. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3595-3599\">Source</a><a href=\"#method.cmp_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.cmp_by\" class=\"fn\">cmp_by</a>&lt;I, F&gt;(self, other: I, cmp: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_order_by</code>)</span></div></span><div class='docblock'><a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">Lexicographically</a> compares the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> with those\nof another with respect to the specified comparison function. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.cmp_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3651-3655\">Source</a></span><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp\" class=\"fn\">partial_cmp</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">Lexicographically</a> compares the <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\"><code>PartialOrd</code></a> elements of\nthis <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> with those of another. The comparison works like short-circuit\nevaluation, returning a result without comparing the remaining elements.\nAs soon as an order can be determined, the evaluation stops and a result is returned. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3687-3691\">Source</a><a href=\"#method.partial_cmp_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp_by\" class=\"fn\">partial_cmp_by</a>&lt;I, F&gt;(self, other: I, partial_cmp: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_order_by</code>)</span></div></span><div class='docblock'><a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">Lexicographically</a> compares the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> with those\nof another with respect to the specified comparison function. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3720-3724\">Source</a></span><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.eq\" class=\"fn\">eq</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are equal to those of\nanother. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3743-3747\">Source</a><a href=\"#method.eq_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.eq_by\" class=\"fn\">eq_by</a>&lt;I, F&gt;(self, other: I, eq: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_order_by</code>)</span></div></span><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are equal to those of\nanother with respect to the specified equality function. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.eq_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3775-3779\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.ne\" class=\"fn\">ne</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are not equal to those of\nanother. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3796-3800\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.lt\" class=\"fn\">lt</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">lexicographically</a>\nless than those of another. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3817-3821\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.le\" class=\"fn\">le</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">lexicographically</a>\nless or equal to those of another. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3838-3842\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.gt\" class=\"fn\">gt</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">lexicographically</a>\ngreater than those of another. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3859-3863\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.ge\" class=\"fn\">ge</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">lexicographically</a>\ngreater than or equal to those of another. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sorted\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3888-3891\">Source</a></span><a href=\"#method.is_sorted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted\" class=\"fn\">is_sorted</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Checks if the elements of this iterator are sorted. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sorted_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3914-3917\">Source</a></span><a href=\"#method.is_sorted_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by\" class=\"fn\">is_sorted_by</a>&lt;F&gt;(self, compare: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Checks if the elements of this iterator are sorted using the given comparator function. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sorted_by_key\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3958-3962\">Source</a></span><a href=\"#method.is_sorted_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by_key\" class=\"fn\">is_sorted_by_key</a>&lt;F, K&gt;(self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; K,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Checks if the elements of this iterator are sorted using the given key extraction\nfunction. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by_key\">Read more</a></div></details></div></details>","Iterator","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Log-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/log/0.4.27/src/log/lib.rs.html#1236-1238\">Source</a><a href=\"#impl-Log-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/log/0.4.27/log/trait.Log.html\" title=\"trait log::Log\">Log</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/log/0.4.27/log/trait.Log.html\" title=\"trait log::Log\">Log</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/log/0.4.27/src/log/lib.rs.html#1240\">Source</a><a href=\"#method.enabled\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/log/0.4.27/log/trait.Log.html#tymethod.enabled\" class=\"fn\">enabled</a>(&amp;self, metadata: &amp;<a class=\"struct\" href=\"https://docs.rs/log/0.4.27/log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determines if a log message with the specified metadata would be\nlogged. <a href=\"https://docs.rs/log/0.4.27/log/trait.Log.html#tymethod.enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.log\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/log/0.4.27/src/log/lib.rs.html#1244\">Source</a><a href=\"#method.log\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/log/0.4.27/log/trait.Log.html#tymethod.log\" class=\"fn\">log</a>(&amp;self, record: &amp;<a class=\"struct\" href=\"https://docs.rs/log/0.4.27/log/struct.Record.html\" title=\"struct log::Record\">Record</a>&lt;'_&gt;)</h4></section></summary><div class='docblock'>Logs the <code>Record</code>. <a href=\"https://docs.rs/log/0.4.27/log/trait.Log.html#tymethod.log\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/log/0.4.27/src/log/lib.rs.html#1247\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/log/0.4.27/log/trait.Log.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;self)</h4></section></summary><div class='docblock'>Flushes any buffered records. <a href=\"https://docs.rs/log/0.4.27/log/trait.Log.html#tymethod.flush\">Read more</a></div></details></div></details>","Log","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1852\">Source</a></span><a href=\"#impl-Ord-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1854\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/cmp.rs.html#980-982\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/cmp.rs.html#1001-1003\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/cmp.rs.html#1027-1029\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Parse%3C'a%3E-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-Parse%3C'a%3E-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; Parse&lt;'a&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: Parse&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">parse</a>(parser: Parser&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;, Error&gt;</h4></section></summary><div class='docblock'>Attempts to parse <code>Self</code> from <code>parser</code>, returning an error if it could\nnot be parsed. <a>Read more</a></div></details></div></details>","Parse<'a>","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1816\">Source</a></span><a href=\"#impl-PartialEq-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1818\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1822\">Source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1828\">Source</a></span><a href=\"#impl-PartialOrd-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1830\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1834\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1838\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1842\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1846\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details></div></details>","PartialOrd","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pointer-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1936\">Source</a></span><a href=\"#impl-Pointer-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1937\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Pointer.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Pointer.html#tymethod.fmt\">Read more</a></div></details></div></details>","Pointer","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Read-for-Box%3CR%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#121\">Source</a></span><a href=\"#impl-Read-for-Box%3CR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;R&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#123\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Pull some bytes from this source into the specified buffer, returning\nhow many bytes were read. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_buf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#128\">Source</a><a href=\"#method.read_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.read_buf\" class=\"fn\">read_buf</a>(&amp;mut self, cursor: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/io/borrowed_buf/struct.BorrowedCursor.html\" title=\"struct core::io::borrowed_buf::BorrowedCursor\">BorrowedCursor</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>read_buf</code>)</span></div></span><div class='docblock'>Pull some bytes from this source into the specified buffer. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.read_buf\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#133\">Source</a><a href=\"#method.read_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.read_vectored\" class=\"fn\">read_vectored</a>(&amp;mut self, bufs: &amp;mut [<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/struct.IoSliceMut.html\" title=\"struct std::io::IoSliceMut\">IoSliceMut</a>&lt;'_&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Like <code>read</code>, except that it reads into a slice of buffers. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.read_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_read_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#138\">Source</a><a href=\"#method.is_read_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.is_read_vectored\" class=\"fn\">is_read_vectored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>can_vector</code>)</span></div></span><div class='docblock'>Determines if this <code>Read</code>er has an efficient <code>read_vectored</code>\nimplementation. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.is_read_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_to_end\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#143\">Source</a><a href=\"#method.read_to_end\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.read_to_end\" class=\"fn\">read_to_end</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes until EOF in this source, placing them into <code>buf</code>. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.read_to_end\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_to_string\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#148\">Source</a><a href=\"#method.read_to_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.read_to_string\" class=\"fn\">read_to_string</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes until EOF in this source, appending them to <code>buf</code>. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.read_to_string\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#153\">Source</a><a href=\"#method.read_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.read_exact\" class=\"fn\">read_exact</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads the exact number of bytes required to fill <code>buf</code>. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.read_exact\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_buf_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#157\">Source</a><a href=\"#method.read_buf_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.read_buf_exact\" class=\"fn\">read_buf_exact</a>(&amp;mut self, cursor: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/io/borrowed_buf/struct.BorrowedCursor.html\" title=\"struct core::io::borrowed_buf::BorrowedCursor\">BorrowedCursor</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>read_buf</code>)</span></div></span><div class='docblock'>Reads the exact number of bytes required to fill <code>cursor</code>. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.read_buf_exact\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#1046-1048\">Source</a></span><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates a “by reference” adaptor for this instance of <code>Read</code>. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bytes\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#1089-1091\">Source</a></span><a href=\"#method.bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.bytes\" class=\"fn\">bytes</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/struct.Bytes.html\" title=\"struct std::io::Bytes\">Bytes</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transforms this <code>Read</code> instance to an <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> over its bytes. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#1127-1129\">Source</a></span><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.chain\" class=\"fn\">chain</a>&lt;R&gt;(self, next: R) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/struct.Chain.html\" title=\"struct std::io::Chain\">Chain</a>&lt;Self, R&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adapter which will chain this stream with another. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#1166-1168\">Source</a></span><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.take\" class=\"fn\">take</a>(self, limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/struct.Take.html\" title=\"struct std::io::Take\">Take</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adapter which will read at most <code>limit</code> bytes from it. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Read.html#method.take\">Read more</a></div></details></div></details>","Read","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Seek-for-Box%3CS%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#194\">Source</a></span><a href=\"#impl-Seek-for-Box%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Seek.html\" title=\"trait std::io::Seek\">Seek</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Seek.html\" title=\"trait std::io::Seek\">Seek</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.seek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#196\">Source</a><a href=\"#method.seek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Seek.html#tymethod.seek\" class=\"fn\">seek</a>(&amp;mut self, pos: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/std/io/enum.SeekFrom.html\" title=\"enum std::io::SeekFrom\">SeekFrom</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Seek to an offset, in bytes, in a stream. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Seek.html#tymethod.seek\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stream_position\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#201\">Source</a><a href=\"#method.stream_position\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Seek.html#method.stream_position\" class=\"fn\">stream_position</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Returns the current seek position from the start of the stream. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Seek.html#method.stream_position\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rewind\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.55.0\">1.55.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#2006\">Source</a></span><a href=\"#method.rewind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Seek.html#method.rewind\" class=\"fn\">rewind</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Rewind to the beginning of a stream. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Seek.html#method.rewind\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stream_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#2046\">Source</a><a href=\"#method.stream_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Seek.html#method.stream_len\" class=\"fn\">stream_len</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>seek_stream_len</code>)</span></div></span><div class='docblock'>Returns the length of this stream (in bytes). <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Seek.html#method.stream_len\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.seek_relative\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.80.0\">1.80.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#2111\">Source</a></span><a href=\"#method.seek_relative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Seek.html#method.seek_relative\" class=\"fn\">seek_relative</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Seeks relative to the current position. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Seek.html#method.seek_relative\">Read more</a></div></details></div></details>","Seek","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize%3CS%3E-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-Serialize%3CS%3E-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; Serialize&lt;S&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: SerializeUnsized&lt;S&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    S: Fallible + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize</a>(\n    &amp;self,\n    serializer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut S</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt; as Archive&gt;::Resolver, &lt;S as Fallible&gt;::Error&gt;</h4></section></summary><div class='docblock'>Writes the dependencies for the object and returns a resolver that can\ncreate the archived type.</div></details></div></details>","Serialize<S>","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/ser/impls.rs.html#535-539\">Source</a><a href=\"#impl-Serialize-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/ser/impls.rs.html#535-539\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Subscriber-for-Box%3CS%3E\" class=\"impl\"><a href=\"#impl-Subscriber-for-Box%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; Subscriber for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;<div class=\"where\">where\n    S: Subscriber + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_callsite\" class=\"method trait-impl\"><a href=\"#method.register_callsite\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">register_callsite</a>(&amp;self, metadata: &amp;'static Metadata&lt;'static&gt;) -&gt; Interest</h4></section></summary><div class='docblock'>Registers a new <a href=\"crate::callsite\">callsite</a> with this subscriber, returning whether or not\nthe subscriber is interested in being notified about the callsite. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enabled\" class=\"method trait-impl\"><a href=\"#method.enabled\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">enabled</a>(&amp;self, metadata: &amp;Metadata&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if a span or event with the specified <a href=\"super::metadata::Metadata\">metadata</a> would be\nrecorded. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_level_hint\" class=\"method trait-impl\"><a href=\"#method.max_level_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_level_hint</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;LevelFilter&gt;</h4></section></summary><div class='docblock'>Returns the highest <a href=\"super::Level\">verbosity level</a> that this <code>Subscriber</code> will\nenable, or <code>None</code>, if the subscriber does not implement level-based\nfiltering or chooses not to implement this method. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_span\" class=\"method trait-impl\"><a href=\"#method.new_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_span</a>(&amp;self, span: &amp;Attributes&lt;'_&gt;) -&gt; Id</h4></section></summary><div class='docblock'>Visit the construction of a new span, returning a new <a href=\"super::span::Id\">span ID</a> for the\nspan being constructed. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">record</a>(&amp;self, span: &amp;Id, values: &amp;Record&lt;'_&gt;)</h4></section></summary><div class='docblock'>Record a set of values on a span. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.record_follows_from\" class=\"method trait-impl\"><a href=\"#method.record_follows_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">record_follows_from</a>(&amp;self, span: &amp;Id, follows: &amp;Id)</h4></section></summary><div class='docblock'>Adds an indication that <code>span</code> follows from the span with the id\n<code>follows</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.event_enabled\" class=\"method trait-impl\"><a href=\"#method.event_enabled\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">event_enabled</a>(&amp;self, event: &amp;Event&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determine if an [<code>Event</code>] should be recorded. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.event\" class=\"method trait-impl\"><a href=\"#method.event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">event</a>(&amp;self, event: &amp;Event&lt;'_&gt;)</h4></section></summary><div class='docblock'>Records that an <a href=\"super::event::Event\"><code>Event</code></a> has occurred. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enter\" class=\"method trait-impl\"><a href=\"#method.enter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">enter</a>(&amp;self, span: &amp;Id)</h4></section></summary><div class='docblock'>Records that a span has been entered. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exit\" class=\"method trait-impl\"><a href=\"#method.exit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">exit</a>(&amp;self, span: &amp;Id)</h4></section></summary><div class='docblock'>Records that a span has been exited. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_span\" class=\"method trait-impl\"><a href=\"#method.clone_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clone_span</a>(&amp;self, id: &amp;Id) -&gt; Id</h4></section></summary><div class='docblock'>Notifies the subscriber that a <a href=\"super::span::Id\">span ID</a> has been cloned. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_close\" class=\"method trait-impl\"><a href=\"#method.try_close\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_close</a>(&amp;self, id: Id) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Notifies the subscriber that a <a href=\"super::span::Id\">span ID</a> has been dropped, and returns\n<code>true</code> if there are now 0 IDs that refer to that span. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop_span\" class=\"method trait-impl\"><a href=\"#method.drop_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">drop_span</a>(&amp;self, id: Id)</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.1.2: use <code>Subscriber::try_close</code> instead</span></div></span><div class='docblock'><strong>This method is deprecated.</strong> <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_span\" class=\"method trait-impl\"><a href=\"#method.current_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_span</a>(&amp;self) -&gt; Current</h4></section></summary><div class='docblock'>Returns a type representing this subscriber’s view of the current span. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downcast_raw\" class=\"method trait-impl\"><a href=\"#method.downcast_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">downcast_raw</a>(&amp;self, id: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>If <code>self</code> is the same type as the provided <code>TypeId</code>, returns an untyped\n<code>*const</code> pointer to that type. Otherwise, returns <code>None</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_register_dispatch\" class=\"method trait-impl\"><a href=\"#method.on_register_dispatch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_register_dispatch</a>(&amp;self, subscriber: &amp;Dispatch)</h4></section></summary><div class='docblock'>Invoked when this subscriber becomes a [<code>Dispatch</code>]. <a>Read more</a></div></details></div></details>","Subscriber","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-Value-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Value for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: Value + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">record</a>(&amp;self, key: &amp;Field, visitor: &amp;mut dyn Visit)</h4></section></summary><div class='docblock'>Visits this value with the given <code>Visitor</code>.</div></details></div></details>","Value","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VisitOperator%3C'a%3E-for-Box%3CV%3E\" class=\"impl\"><a href=\"#impl-VisitOperator%3C'a%3E-for-Box%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, V&gt; VisitOperator&lt;'a&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt;<div class=\"where\">where\n    V: VisitOperator&lt;'a&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;V as VisitOperator&lt;'a&gt;&gt;::Output</h4></section></summary><div class='docblock'>The result type of the visitor.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_operator\" class=\"method trait-impl\"><a href=\"#method.visit_operator\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_operator</a>(\n    &amp;mut self,\n    op: &amp;Operator&lt;'a&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section></summary><div class='docblock'>Visits the [<code>Operator</code>] <code>op</code> using the given <code>offset</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_visitor\" class=\"method trait-impl\"><a href=\"#method.simd_visitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">simd_visitor</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut dyn VisitSimdOperator&lt;'a, Output = &lt;V as VisitOperator&lt;'a&gt;&gt;::Output&gt;&gt;</h4></section></summary><div class='docblock'>Returns a mutable reference to a [<code>VisitSimdOperator</code>] visitor. <a>Read more</a></div></details><section id=\"method.visit_unreachable\" class=\"method trait-impl\"><a href=\"#method.visit_unreachable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_unreachable</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_nop\" class=\"method trait-impl\"><a href=\"#method.visit_nop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_nop</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_block\" class=\"method trait-impl\"><a href=\"#method.visit_block\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_block</a>(\n    &amp;mut self,\n    blockty: BlockType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_loop\" class=\"method trait-impl\"><a href=\"#method.visit_loop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_loop</a>(\n    &amp;mut self,\n    blockty: BlockType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_if\" class=\"method trait-impl\"><a href=\"#method.visit_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_if</a>(\n    &amp;mut self,\n    blockty: BlockType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_else\" class=\"method trait-impl\"><a href=\"#method.visit_else\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_else</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_end\" class=\"method trait-impl\"><a href=\"#method.visit_end\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_end</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_br\" class=\"method trait-impl\"><a href=\"#method.visit_br\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_br</a>(\n    &amp;mut self,\n    relative_depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_br_if\" class=\"method trait-impl\"><a href=\"#method.visit_br_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_br_if</a>(\n    &amp;mut self,\n    relative_depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_br_table\" class=\"method trait-impl\"><a href=\"#method.visit_br_table\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_br_table</a>(\n    &amp;mut self,\n    targets: BrTable&lt;'a&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_return\" class=\"method trait-impl\"><a href=\"#method.visit_return\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_return</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_call\" class=\"method trait-impl\"><a href=\"#method.visit_call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_call</a>(\n    &amp;mut self,\n    function_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_call_indirect\" class=\"method trait-impl\"><a href=\"#method.visit_call_indirect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_call_indirect</a>(\n    &amp;mut self,\n    type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    table_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_drop\" class=\"method trait-impl\"><a href=\"#method.visit_drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_drop</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_select\" class=\"method trait-impl\"><a href=\"#method.visit_select\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_select</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_local_get\" class=\"method trait-impl\"><a href=\"#method.visit_local_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_local_get</a>(\n    &amp;mut self,\n    local_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_local_set\" class=\"method trait-impl\"><a href=\"#method.visit_local_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_local_set</a>(\n    &amp;mut self,\n    local_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_local_tee\" class=\"method trait-impl\"><a href=\"#method.visit_local_tee\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_local_tee</a>(\n    &amp;mut self,\n    local_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_get\" class=\"method trait-impl\"><a href=\"#method.visit_global_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_get</a>(\n    &amp;mut self,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_set\" class=\"method trait-impl\"><a href=\"#method.visit_global_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_set</a>(\n    &amp;mut self,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_load\" class=\"method trait-impl\"><a href=\"#method.visit_i32_load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_load</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_load\" class=\"method trait-impl\"><a href=\"#method.visit_i64_load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_load</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_load\" class=\"method trait-impl\"><a href=\"#method.visit_f32_load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_load</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_load\" class=\"method trait-impl\"><a href=\"#method.visit_f64_load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_load</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_load8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_load8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_load8_s</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_load8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_load8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_load8_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_load16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_load16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_load16_s</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_load16_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_load16_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_load16_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_load8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_load8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_load8_s</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_load8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_load8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_load8_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_load16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_load16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_load16_s</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_load16_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_load16_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_load16_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_load32_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_load32_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_load32_s</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_load32_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_load32_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_load32_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_store\" class=\"method trait-impl\"><a href=\"#method.visit_i32_store\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_store</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_store\" class=\"method trait-impl\"><a href=\"#method.visit_i64_store\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_store</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_store\" class=\"method trait-impl\"><a href=\"#method.visit_f32_store\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_store</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_store\" class=\"method trait-impl\"><a href=\"#method.visit_f64_store\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_store</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_store8\" class=\"method trait-impl\"><a href=\"#method.visit_i32_store8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_store8</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_store16\" class=\"method trait-impl\"><a href=\"#method.visit_i32_store16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_store16</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_store8\" class=\"method trait-impl\"><a href=\"#method.visit_i64_store8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_store8</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_store16\" class=\"method trait-impl\"><a href=\"#method.visit_i64_store16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_store16</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_store32\" class=\"method trait-impl\"><a href=\"#method.visit_i64_store32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_store32</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_memory_size\" class=\"method trait-impl\"><a href=\"#method.visit_memory_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_memory_size</a>(\n    &amp;mut self,\n    mem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_memory_grow\" class=\"method trait-impl\"><a href=\"#method.visit_memory_grow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_memory_grow</a>(\n    &amp;mut self,\n    mem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_const\" class=\"method trait-impl\"><a href=\"#method.visit_i32_const\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_const</a>(\n    &amp;mut self,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_const\" class=\"method trait-impl\"><a href=\"#method.visit_i64_const\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_const</a>(\n    &amp;mut self,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_const\" class=\"method trait-impl\"><a href=\"#method.visit_f32_const\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_const</a>(\n    &amp;mut self,\n    value: Ieee32,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_const\" class=\"method trait-impl\"><a href=\"#method.visit_f64_const\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_const</a>(\n    &amp;mut self,\n    value: Ieee64,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_eqz\" class=\"method trait-impl\"><a href=\"#method.visit_i32_eqz\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_eqz</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_eq\" class=\"method trait-impl\"><a href=\"#method.visit_i32_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_ne\" class=\"method trait-impl\"><a href=\"#method.visit_i32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_lt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_lt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_lt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_lt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_lt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_lt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_gt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_gt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_gt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_gt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_gt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_gt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_le_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_le_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_le_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_le_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_le_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_le_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_ge_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_ge_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_ge_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_ge_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_ge_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_ge_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_eqz\" class=\"method trait-impl\"><a href=\"#method.visit_i64_eqz\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_eqz</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_eq\" class=\"method trait-impl\"><a href=\"#method.visit_i64_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_ne\" class=\"method trait-impl\"><a href=\"#method.visit_i64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_lt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_lt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_lt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_lt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_lt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_lt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_gt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_gt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_gt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_gt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_gt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_gt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_le_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_le_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_le_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_le_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_le_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_le_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_ge_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_ge_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_ge_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_ge_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_ge_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_ge_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_eq\" class=\"method trait-impl\"><a href=\"#method.visit_f32_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_ne\" class=\"method trait-impl\"><a href=\"#method.visit_f32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_lt\" class=\"method trait-impl\"><a href=\"#method.visit_f32_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_lt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_gt\" class=\"method trait-impl\"><a href=\"#method.visit_f32_gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_gt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_le\" class=\"method trait-impl\"><a href=\"#method.visit_f32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_le</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_ge\" class=\"method trait-impl\"><a href=\"#method.visit_f32_ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_ge</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_eq\" class=\"method trait-impl\"><a href=\"#method.visit_f64_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_ne\" class=\"method trait-impl\"><a href=\"#method.visit_f64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_lt\" class=\"method trait-impl\"><a href=\"#method.visit_f64_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_lt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_gt\" class=\"method trait-impl\"><a href=\"#method.visit_f64_gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_gt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_le\" class=\"method trait-impl\"><a href=\"#method.visit_f64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_le</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_ge\" class=\"method trait-impl\"><a href=\"#method.visit_f64_ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_ge</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_clz\" class=\"method trait-impl\"><a href=\"#method.visit_i32_clz\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_clz</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_ctz\" class=\"method trait-impl\"><a href=\"#method.visit_i32_ctz\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_ctz</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_popcnt\" class=\"method trait-impl\"><a href=\"#method.visit_i32_popcnt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_popcnt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_add\" class=\"method trait-impl\"><a href=\"#method.visit_i32_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_sub\" class=\"method trait-impl\"><a href=\"#method.visit_i32_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_mul\" class=\"method trait-impl\"><a href=\"#method.visit_i32_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_mul</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_div_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_div_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_div_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_div_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_div_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_div_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_rem_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_rem_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_rem_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_rem_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_rem_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_rem_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_and\" class=\"method trait-impl\"><a href=\"#method.visit_i32_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_and</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_or\" class=\"method trait-impl\"><a href=\"#method.visit_i32_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_or</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_xor\" class=\"method trait-impl\"><a href=\"#method.visit_i32_xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_xor</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_shl\" class=\"method trait-impl\"><a href=\"#method.visit_i32_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_shl</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_shr_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_shr_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_shr_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_shr_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_shr_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_shr_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_rotl\" class=\"method trait-impl\"><a href=\"#method.visit_i32_rotl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_rotl</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_rotr\" class=\"method trait-impl\"><a href=\"#method.visit_i32_rotr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_rotr</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_clz\" class=\"method trait-impl\"><a href=\"#method.visit_i64_clz\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_clz</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_ctz\" class=\"method trait-impl\"><a href=\"#method.visit_i64_ctz\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_ctz</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_popcnt\" class=\"method trait-impl\"><a href=\"#method.visit_i64_popcnt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_popcnt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_add\" class=\"method trait-impl\"><a href=\"#method.visit_i64_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_sub\" class=\"method trait-impl\"><a href=\"#method.visit_i64_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_mul\" class=\"method trait-impl\"><a href=\"#method.visit_i64_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_mul</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_div_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_div_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_div_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_div_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_div_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_div_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_rem_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_rem_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_rem_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_rem_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_rem_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_rem_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_and\" class=\"method trait-impl\"><a href=\"#method.visit_i64_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_and</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_or\" class=\"method trait-impl\"><a href=\"#method.visit_i64_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_or</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_xor\" class=\"method trait-impl\"><a href=\"#method.visit_i64_xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_xor</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_shl\" class=\"method trait-impl\"><a href=\"#method.visit_i64_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_shl</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_shr_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_shr_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_shr_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_shr_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_shr_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_shr_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_rotl\" class=\"method trait-impl\"><a href=\"#method.visit_i64_rotl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_rotl</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_rotr\" class=\"method trait-impl\"><a href=\"#method.visit_i64_rotr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_rotr</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_abs\" class=\"method trait-impl\"><a href=\"#method.visit_f32_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_abs</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_neg\" class=\"method trait-impl\"><a href=\"#method.visit_f32_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_neg</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_ceil\" class=\"method trait-impl\"><a href=\"#method.visit_f32_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_ceil</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_floor\" class=\"method trait-impl\"><a href=\"#method.visit_f32_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_floor</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_trunc\" class=\"method trait-impl\"><a href=\"#method.visit_f32_trunc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_trunc</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_nearest\" class=\"method trait-impl\"><a href=\"#method.visit_f32_nearest\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_nearest</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_sqrt\" class=\"method trait-impl\"><a href=\"#method.visit_f32_sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_sqrt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_add\" class=\"method trait-impl\"><a href=\"#method.visit_f32_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_sub\" class=\"method trait-impl\"><a href=\"#method.visit_f32_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_mul\" class=\"method trait-impl\"><a href=\"#method.visit_f32_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_mul</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_div\" class=\"method trait-impl\"><a href=\"#method.visit_f32_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_div</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_min\" class=\"method trait-impl\"><a href=\"#method.visit_f32_min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_min</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_max\" class=\"method trait-impl\"><a href=\"#method.visit_f32_max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_max</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_copysign\" class=\"method trait-impl\"><a href=\"#method.visit_f32_copysign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_copysign</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_abs\" class=\"method trait-impl\"><a href=\"#method.visit_f64_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_abs</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_neg\" class=\"method trait-impl\"><a href=\"#method.visit_f64_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_neg</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_ceil\" class=\"method trait-impl\"><a href=\"#method.visit_f64_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_ceil</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_floor\" class=\"method trait-impl\"><a href=\"#method.visit_f64_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_floor</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_trunc\" class=\"method trait-impl\"><a href=\"#method.visit_f64_trunc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_trunc</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_nearest\" class=\"method trait-impl\"><a href=\"#method.visit_f64_nearest\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_nearest</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_sqrt\" class=\"method trait-impl\"><a href=\"#method.visit_f64_sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_sqrt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_add\" class=\"method trait-impl\"><a href=\"#method.visit_f64_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_sub\" class=\"method trait-impl\"><a href=\"#method.visit_f64_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_mul\" class=\"method trait-impl\"><a href=\"#method.visit_f64_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_mul</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_div\" class=\"method trait-impl\"><a href=\"#method.visit_f64_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_div</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_min\" class=\"method trait-impl\"><a href=\"#method.visit_f64_min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_min</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_max\" class=\"method trait-impl\"><a href=\"#method.visit_f64_max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_max</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_copysign\" class=\"method trait-impl\"><a href=\"#method.visit_f64_copysign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_copysign</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_wrap_i64\" class=\"method trait-impl\"><a href=\"#method.visit_i32_wrap_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_wrap_i64</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_trunc_f32_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_trunc_f32_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_trunc_f32_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_trunc_f32_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_trunc_f32_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_trunc_f32_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_trunc_f64_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_trunc_f64_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_trunc_f64_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_trunc_f64_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_trunc_f64_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_trunc_f64_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_extend_i32_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_extend_i32_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_extend_i32_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_extend_i32_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_extend_i32_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_extend_i32_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_trunc_f32_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_trunc_f32_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_trunc_f32_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_trunc_f32_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_trunc_f32_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_trunc_f32_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_trunc_f64_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_trunc_f64_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_trunc_f64_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_trunc_f64_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_trunc_f64_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_trunc_f64_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_convert_i32_s\" class=\"method trait-impl\"><a href=\"#method.visit_f32_convert_i32_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_convert_i32_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_convert_i32_u\" class=\"method trait-impl\"><a href=\"#method.visit_f32_convert_i32_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_convert_i32_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_convert_i64_s\" class=\"method trait-impl\"><a href=\"#method.visit_f32_convert_i64_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_convert_i64_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_convert_i64_u\" class=\"method trait-impl\"><a href=\"#method.visit_f32_convert_i64_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_convert_i64_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_demote_f64\" class=\"method trait-impl\"><a href=\"#method.visit_f32_demote_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_demote_f64</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_convert_i32_s\" class=\"method trait-impl\"><a href=\"#method.visit_f64_convert_i32_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_convert_i32_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_convert_i32_u\" class=\"method trait-impl\"><a href=\"#method.visit_f64_convert_i32_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_convert_i32_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_convert_i64_s\" class=\"method trait-impl\"><a href=\"#method.visit_f64_convert_i64_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_convert_i64_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_convert_i64_u\" class=\"method trait-impl\"><a href=\"#method.visit_f64_convert_i64_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_convert_i64_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_promote_f32\" class=\"method trait-impl\"><a href=\"#method.visit_f64_promote_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_promote_f32</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_reinterpret_f32\" class=\"method trait-impl\"><a href=\"#method.visit_i32_reinterpret_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_reinterpret_f32</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_reinterpret_f64\" class=\"method trait-impl\"><a href=\"#method.visit_i64_reinterpret_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_reinterpret_f64</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_reinterpret_i32\" class=\"method trait-impl\"><a href=\"#method.visit_f32_reinterpret_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_reinterpret_i32</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_reinterpret_i64\" class=\"method trait-impl\"><a href=\"#method.visit_f64_reinterpret_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_reinterpret_i64</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_extend8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_extend8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_extend8_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_extend16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_extend16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_extend16_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_extend8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_extend8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_extend8_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_extend16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_extend16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_extend16_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_extend32_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_extend32_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_extend32_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_eq\" class=\"method trait-impl\"><a href=\"#method.visit_ref_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_new\" class=\"method trait-impl\"><a href=\"#method.visit_struct_new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_new</a>(\n    &amp;mut self,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_new_default\" class=\"method trait-impl\"><a href=\"#method.visit_struct_new_default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_new_default</a>(\n    &amp;mut self,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_get\" class=\"method trait-impl\"><a href=\"#method.visit_struct_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_get</a>(\n    &amp;mut self,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_get_s\" class=\"method trait-impl\"><a href=\"#method.visit_struct_get_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_get_s</a>(\n    &amp;mut self,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_get_u\" class=\"method trait-impl\"><a href=\"#method.visit_struct_get_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_get_u</a>(\n    &amp;mut self,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_set\" class=\"method trait-impl\"><a href=\"#method.visit_struct_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_set</a>(\n    &amp;mut self,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_new\" class=\"method trait-impl\"><a href=\"#method.visit_array_new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_new</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_new_default\" class=\"method trait-impl\"><a href=\"#method.visit_array_new_default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_new_default</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_new_fixed\" class=\"method trait-impl\"><a href=\"#method.visit_array_new_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_new_fixed</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    array_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_new_data\" class=\"method trait-impl\"><a href=\"#method.visit_array_new_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_new_data</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    array_data_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_new_elem\" class=\"method trait-impl\"><a href=\"#method.visit_array_new_elem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_new_elem</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    array_elem_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_get\" class=\"method trait-impl\"><a href=\"#method.visit_array_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_get</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_get_s\" class=\"method trait-impl\"><a href=\"#method.visit_array_get_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_get_s</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_get_u\" class=\"method trait-impl\"><a href=\"#method.visit_array_get_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_get_u</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_set\" class=\"method trait-impl\"><a href=\"#method.visit_array_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_set</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_len\" class=\"method trait-impl\"><a href=\"#method.visit_array_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_len</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_fill\" class=\"method trait-impl\"><a href=\"#method.visit_array_fill\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_fill</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_copy\" class=\"method trait-impl\"><a href=\"#method.visit_array_copy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_copy</a>(\n    &amp;mut self,\n    array_type_index_dst: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    array_type_index_src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_init_data\" class=\"method trait-impl\"><a href=\"#method.visit_array_init_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_init_data</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    array_data_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_init_elem\" class=\"method trait-impl\"><a href=\"#method.visit_array_init_elem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_init_elem</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    array_elem_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_test_non_null\" class=\"method trait-impl\"><a href=\"#method.visit_ref_test_non_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_test_non_null</a>(\n    &amp;mut self,\n    hty: HeapType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_test_nullable\" class=\"method trait-impl\"><a href=\"#method.visit_ref_test_nullable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_test_nullable</a>(\n    &amp;mut self,\n    hty: HeapType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_cast_non_null\" class=\"method trait-impl\"><a href=\"#method.visit_ref_cast_non_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_cast_non_null</a>(\n    &amp;mut self,\n    hty: HeapType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_cast_nullable\" class=\"method trait-impl\"><a href=\"#method.visit_ref_cast_nullable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_cast_nullable</a>(\n    &amp;mut self,\n    hty: HeapType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_br_on_cast\" class=\"method trait-impl\"><a href=\"#method.visit_br_on_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_br_on_cast</a>(\n    &amp;mut self,\n    relative_depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    from_ref_type: RefType,\n    to_ref_type: RefType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_br_on_cast_fail\" class=\"method trait-impl\"><a href=\"#method.visit_br_on_cast_fail\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_br_on_cast_fail</a>(\n    &amp;mut self,\n    relative_depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    from_ref_type: RefType,\n    to_ref_type: RefType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_any_convert_extern\" class=\"method trait-impl\"><a href=\"#method.visit_any_convert_extern\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_any_convert_extern</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_extern_convert_any\" class=\"method trait-impl\"><a href=\"#method.visit_extern_convert_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_extern_convert_any</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_i31\" class=\"method trait-impl\"><a href=\"#method.visit_ref_i31\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_i31</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i31_get_s\" class=\"method trait-impl\"><a href=\"#method.visit_i31_get_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i31_get_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i31_get_u\" class=\"method trait-impl\"><a href=\"#method.visit_i31_get_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i31_get_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_trunc_sat_f32_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_trunc_sat_f32_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_trunc_sat_f32_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_trunc_sat_f32_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_trunc_sat_f32_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_trunc_sat_f32_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_trunc_sat_f64_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_trunc_sat_f64_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_trunc_sat_f64_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_trunc_sat_f64_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_trunc_sat_f64_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_trunc_sat_f64_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_trunc_sat_f32_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_trunc_sat_f32_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_trunc_sat_f32_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_trunc_sat_f32_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_trunc_sat_f32_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_trunc_sat_f32_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_trunc_sat_f64_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_trunc_sat_f64_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_trunc_sat_f64_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_trunc_sat_f64_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_trunc_sat_f64_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_trunc_sat_f64_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_memory_init\" class=\"method trait-impl\"><a href=\"#method.visit_memory_init\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_memory_init</a>(\n    &amp;mut self,\n    data_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    mem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_data_drop\" class=\"method trait-impl\"><a href=\"#method.visit_data_drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_data_drop</a>(\n    &amp;mut self,\n    data_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_memory_copy\" class=\"method trait-impl\"><a href=\"#method.visit_memory_copy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_memory_copy</a>(\n    &amp;mut self,\n    dst_mem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    src_mem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_memory_fill\" class=\"method trait-impl\"><a href=\"#method.visit_memory_fill\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_memory_fill</a>(\n    &amp;mut self,\n    mem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_init\" class=\"method trait-impl\"><a href=\"#method.visit_table_init\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_init</a>(\n    &amp;mut self,\n    elem_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    table: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_elem_drop\" class=\"method trait-impl\"><a href=\"#method.visit_elem_drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_elem_drop</a>(\n    &amp;mut self,\n    elem_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_copy\" class=\"method trait-impl\"><a href=\"#method.visit_table_copy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_copy</a>(\n    &amp;mut self,\n    dst_table: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    src_table: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_typed_select\" class=\"method trait-impl\"><a href=\"#method.visit_typed_select\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_typed_select</a>(\n    &amp;mut self,\n    ty: ValType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_null\" class=\"method trait-impl\"><a href=\"#method.visit_ref_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_null</a>(\n    &amp;mut self,\n    hty: HeapType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_is_null\" class=\"method trait-impl\"><a href=\"#method.visit_ref_is_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_is_null</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_func\" class=\"method trait-impl\"><a href=\"#method.visit_ref_func\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_func</a>(\n    &amp;mut self,\n    function_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_fill\" class=\"method trait-impl\"><a href=\"#method.visit_table_fill\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_fill</a>(\n    &amp;mut self,\n    table: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_get\" class=\"method trait-impl\"><a href=\"#method.visit_table_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_get</a>(\n    &amp;mut self,\n    table: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_set\" class=\"method trait-impl\"><a href=\"#method.visit_table_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_set</a>(\n    &amp;mut self,\n    table: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_grow\" class=\"method trait-impl\"><a href=\"#method.visit_table_grow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_grow</a>(\n    &amp;mut self,\n    table: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_size\" class=\"method trait-impl\"><a href=\"#method.visit_table_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_size</a>(\n    &amp;mut self,\n    table: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_return_call\" class=\"method trait-impl\"><a href=\"#method.visit_return_call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_return_call</a>(\n    &amp;mut self,\n    function_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_return_call_indirect\" class=\"method trait-impl\"><a href=\"#method.visit_return_call_indirect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_return_call_indirect</a>(\n    &amp;mut self,\n    type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    table_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_memory_discard\" class=\"method trait-impl\"><a href=\"#method.visit_memory_discard\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_memory_discard</a>(\n    &amp;mut self,\n    mem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_memory_atomic_notify\" class=\"method trait-impl\"><a href=\"#method.visit_memory_atomic_notify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_memory_atomic_notify</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_memory_atomic_wait32\" class=\"method trait-impl\"><a href=\"#method.visit_memory_atomic_wait32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_memory_atomic_wait32</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_memory_atomic_wait64\" class=\"method trait-impl\"><a href=\"#method.visit_memory_atomic_wait64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_memory_atomic_wait64</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_atomic_fence\" class=\"method trait-impl\"><a href=\"#method.visit_atomic_fence\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_atomic_fence</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_load\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_load</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_load\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_load</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_load8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_load8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_load8_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_load16_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_load16_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_load16_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_load8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_load8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_load8_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_load16_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_load16_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_load16_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_load32_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_load32_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_load32_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_store\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_store\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_store</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_store\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_store\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_store</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_store8\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_store8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_store8</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_store16\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_store16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_store16</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_store8\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_store8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_store8</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_store16\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_store16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_store16</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_store32\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_store32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_store32</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw_add\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw_add</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw_add\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw_add</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw8_add_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw8_add_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw8_add_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw16_add_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw16_add_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw16_add_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw8_add_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw8_add_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw8_add_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw16_add_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw16_add_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw16_add_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw32_add_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw32_add_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw32_add_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw_sub\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw_sub</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw_sub\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw_sub</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw8_sub_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw8_sub_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw8_sub_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw16_sub_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw16_sub_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw16_sub_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw8_sub_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw8_sub_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw8_sub_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw16_sub_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw16_sub_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw16_sub_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw32_sub_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw32_sub_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw32_sub_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw_and\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw_and</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw_and\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw_and</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw8_and_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw8_and_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw8_and_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw16_and_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw16_and_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw16_and_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw8_and_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw8_and_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw8_and_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw16_and_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw16_and_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw16_and_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw32_and_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw32_and_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw32_and_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw_or\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw_or</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw_or\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw_or</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw8_or_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw8_or_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw8_or_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw16_or_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw16_or_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw16_or_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw8_or_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw8_or_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw8_or_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw16_or_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw16_or_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw16_or_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw32_or_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw32_or_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw32_or_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw_xor\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw_xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw_xor</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw_xor\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw_xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw_xor</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw8_xor_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw8_xor_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw8_xor_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw16_xor_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw16_xor_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw16_xor_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw8_xor_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw8_xor_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw8_xor_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw16_xor_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw16_xor_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw16_xor_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw32_xor_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw32_xor_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw32_xor_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw_xchg\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw_xchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw_xchg</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw_xchg\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw_xchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw_xchg</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw8_xchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw8_xchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw8_xchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw16_xchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw16_xchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw16_xchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw8_xchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw8_xchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw8_xchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw16_xchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw16_xchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw16_xchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw32_xchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw32_xchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw32_xchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw_cmpxchg\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw_cmpxchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw_cmpxchg</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw_cmpxchg\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw_cmpxchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw_cmpxchg</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw8_cmpxchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw8_cmpxchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw8_cmpxchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw16_cmpxchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw16_cmpxchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw16_cmpxchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw8_cmpxchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw8_cmpxchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw8_cmpxchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw16_cmpxchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw16_cmpxchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw16_cmpxchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw32_cmpxchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw32_cmpxchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw32_cmpxchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_try_table\" class=\"method trait-impl\"><a href=\"#method.visit_try_table\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_try_table</a>(\n    &amp;mut self,\n    try_table: TryTable,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_throw\" class=\"method trait-impl\"><a href=\"#method.visit_throw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_throw</a>(\n    &amp;mut self,\n    tag_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_throw_ref\" class=\"method trait-impl\"><a href=\"#method.visit_throw_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_throw_ref</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_try\" class=\"method trait-impl\"><a href=\"#method.visit_try\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_try</a>(\n    &amp;mut self,\n    blockty: BlockType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_catch\" class=\"method trait-impl\"><a href=\"#method.visit_catch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_catch</a>(\n    &amp;mut self,\n    tag_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_rethrow\" class=\"method trait-impl\"><a href=\"#method.visit_rethrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_rethrow</a>(\n    &amp;mut self,\n    relative_depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_delegate\" class=\"method trait-impl\"><a href=\"#method.visit_delegate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_delegate</a>(\n    &amp;mut self,\n    relative_depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_catch_all\" class=\"method trait-impl\"><a href=\"#method.visit_catch_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_catch_all</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_atomic_get\" class=\"method trait-impl\"><a href=\"#method.visit_global_atomic_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_atomic_get</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_atomic_set\" class=\"method trait-impl\"><a href=\"#method.visit_global_atomic_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_atomic_set</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_atomic_rmw_add\" class=\"method trait-impl\"><a href=\"#method.visit_global_atomic_rmw_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_atomic_rmw_add</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_atomic_rmw_sub\" class=\"method trait-impl\"><a href=\"#method.visit_global_atomic_rmw_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_atomic_rmw_sub</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_atomic_rmw_and\" class=\"method trait-impl\"><a href=\"#method.visit_global_atomic_rmw_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_atomic_rmw_and</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_atomic_rmw_or\" class=\"method trait-impl\"><a href=\"#method.visit_global_atomic_rmw_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_atomic_rmw_or</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_atomic_rmw_xor\" class=\"method trait-impl\"><a href=\"#method.visit_global_atomic_rmw_xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_atomic_rmw_xor</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_atomic_rmw_xchg\" class=\"method trait-impl\"><a href=\"#method.visit_global_atomic_rmw_xchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_atomic_rmw_xchg</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_atomic_rmw_cmpxchg\" class=\"method trait-impl\"><a href=\"#method.visit_global_atomic_rmw_cmpxchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_atomic_rmw_cmpxchg</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_atomic_get\" class=\"method trait-impl\"><a href=\"#method.visit_table_atomic_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_atomic_get</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    table_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_atomic_set\" class=\"method trait-impl\"><a href=\"#method.visit_table_atomic_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_atomic_set</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    table_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_atomic_rmw_xchg\" class=\"method trait-impl\"><a href=\"#method.visit_table_atomic_rmw_xchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_atomic_rmw_xchg</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    table_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_atomic_rmw_cmpxchg\" class=\"method trait-impl\"><a href=\"#method.visit_table_atomic_rmw_cmpxchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_atomic_rmw_cmpxchg</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    table_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_get\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_get</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_get_s\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_get_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_get_s</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_get_u\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_get_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_get_u</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_set\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_set</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_rmw_add\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_rmw_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_rmw_add</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_rmw_sub\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_rmw_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_rmw_sub</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_rmw_and\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_rmw_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_rmw_and</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_rmw_or\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_rmw_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_rmw_or</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_rmw_xor\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_rmw_xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_rmw_xor</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_rmw_xchg\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_rmw_xchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_rmw_xchg</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_rmw_cmpxchg\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_rmw_cmpxchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_rmw_cmpxchg</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_get\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_get</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_get_s\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_get_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_get_s</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_get_u\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_get_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_get_u</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_set\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_set</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_rmw_add\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_rmw_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_rmw_add</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_rmw_sub\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_rmw_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_rmw_sub</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_rmw_and\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_rmw_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_rmw_and</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_rmw_or\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_rmw_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_rmw_or</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_rmw_xor\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_rmw_xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_rmw_xor</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_rmw_xchg\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_rmw_xchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_rmw_xchg</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_rmw_cmpxchg\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_rmw_cmpxchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_rmw_cmpxchg</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_i31_shared\" class=\"method trait-impl\"><a href=\"#method.visit_ref_i31_shared\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_i31_shared</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_call_ref\" class=\"method trait-impl\"><a href=\"#method.visit_call_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_call_ref</a>(\n    &amp;mut self,\n    type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_return_call_ref\" class=\"method trait-impl\"><a href=\"#method.visit_return_call_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_return_call_ref</a>(\n    &amp;mut self,\n    type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_as_non_null\" class=\"method trait-impl\"><a href=\"#method.visit_ref_as_non_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_as_non_null</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_br_on_null\" class=\"method trait-impl\"><a href=\"#method.visit_br_on_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_br_on_null</a>(\n    &amp;mut self,\n    relative_depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_br_on_non_null\" class=\"method trait-impl\"><a href=\"#method.visit_br_on_non_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_br_on_non_null</a>(\n    &amp;mut self,\n    relative_depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_cont_new\" class=\"method trait-impl\"><a href=\"#method.visit_cont_new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_cont_new</a>(\n    &amp;mut self,\n    cont_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_cont_bind\" class=\"method trait-impl\"><a href=\"#method.visit_cont_bind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_cont_bind</a>(\n    &amp;mut self,\n    argument_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    result_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_suspend\" class=\"method trait-impl\"><a href=\"#method.visit_suspend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_suspend</a>(\n    &amp;mut self,\n    tag_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_resume\" class=\"method trait-impl\"><a href=\"#method.visit_resume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_resume</a>(\n    &amp;mut self,\n    cont_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    resume_table: ResumeTable,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_resume_throw\" class=\"method trait-impl\"><a href=\"#method.visit_resume_throw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_resume_throw</a>(\n    &amp;mut self,\n    cont_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    tag_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    resume_table: ResumeTable,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_switch\" class=\"method trait-impl\"><a href=\"#method.visit_switch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_switch</a>(\n    &amp;mut self,\n    cont_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    tag_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_add128\" class=\"method trait-impl\"><a href=\"#method.visit_i64_add128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_add128</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_sub128\" class=\"method trait-impl\"><a href=\"#method.visit_i64_sub128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_sub128</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_mul_wide_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_mul_wide_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_mul_wide_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_mul_wide_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_mul_wide_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_mul_wide_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section></div></details>","VisitOperator<'a>","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VisitSimdOperator%3C'a%3E-for-Box%3CV%3E\" class=\"impl\"><a href=\"#impl-VisitSimdOperator%3C'a%3E-for-Box%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, V&gt; VisitSimdOperator&lt;'a&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt;<div class=\"where\">where\n    V: VisitSimdOperator&lt;'a&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.visit_v128_load\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load8x8_s\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load8x8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load8x8_s</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load8x8_u\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load8x8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load8x8_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load16x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load16x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load16x4_s</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load16x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load16x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load16x4_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load32x2_s\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load32x2_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load32x2_s</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load32x2_u\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load32x2_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load32x2_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load8_splat\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load8_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load8_splat</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load16_splat\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load16_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load16_splat</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load32_splat\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load32_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load32_splat</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load64_splat\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load64_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load64_splat</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load32_zero\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load32_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load32_zero</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load64_zero\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load64_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load64_zero</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_store\" class=\"method trait-impl\"><a href=\"#method.visit_v128_store\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_store</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load8_lane\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load8_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load8_lane</a>(\n    &amp;mut self,\n    memarg: MemArg,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load16_lane\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load16_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load16_lane</a>(\n    &amp;mut self,\n    memarg: MemArg,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load32_lane\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load32_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load32_lane</a>(\n    &amp;mut self,\n    memarg: MemArg,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load64_lane\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load64_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load64_lane</a>(\n    &amp;mut self,\n    memarg: MemArg,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_store8_lane\" class=\"method trait-impl\"><a href=\"#method.visit_v128_store8_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_store8_lane</a>(\n    &amp;mut self,\n    memarg: MemArg,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_store16_lane\" class=\"method trait-impl\"><a href=\"#method.visit_v128_store16_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_store16_lane</a>(\n    &amp;mut self,\n    memarg: MemArg,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_store32_lane\" class=\"method trait-impl\"><a href=\"#method.visit_v128_store32_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_store32_lane</a>(\n    &amp;mut self,\n    memarg: MemArg,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_store64_lane\" class=\"method trait-impl\"><a href=\"#method.visit_v128_store64_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_store64_lane</a>(\n    &amp;mut self,\n    memarg: MemArg,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_const\" class=\"method trait-impl\"><a href=\"#method.visit_v128_const\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_const</a>(\n    &amp;mut self,\n    value: V128,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_shuffle\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_shuffle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_shuffle</a>(\n    &amp;mut self,\n    lanes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.array.html\">16</a>],\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_extract_lane_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_extract_lane_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_extract_lane_s</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_extract_lane_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_extract_lane_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_extract_lane_u</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_replace_lane\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_replace_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_replace_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extract_lane_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extract_lane_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extract_lane_s</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extract_lane_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extract_lane_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extract_lane_u</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_replace_lane\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_replace_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_replace_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extract_lane\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extract_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extract_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_replace_lane\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_replace_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_replace_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_extract_lane\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_extract_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_extract_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_replace_lane\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_replace_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_replace_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_extract_lane\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_extract_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_extract_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_replace_lane\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_replace_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_replace_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_extract_lane\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_extract_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_extract_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_replace_lane\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_replace_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_replace_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_swizzle\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_swizzle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_swizzle</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_splat\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_splat</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_splat\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_splat</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_splat\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_splat</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_splat\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_splat</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_splat\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_splat</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_splat\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_splat</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_eq\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_ne\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_lt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_lt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_lt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_lt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_lt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_lt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_gt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_gt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_gt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_gt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_gt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_gt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_le_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_le_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_le_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_le_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_le_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_le_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_ge_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_ge_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_ge_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_ge_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_ge_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_ge_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_eq\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_ne\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_lt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_lt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_lt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_lt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_lt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_lt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_gt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_gt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_gt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_gt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_gt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_gt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_le_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_le_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_le_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_le_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_le_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_le_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_ge_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_ge_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_ge_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_ge_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_ge_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_ge_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_eq\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_ne\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_lt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_lt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_lt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_lt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_lt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_lt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_gt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_gt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_gt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_gt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_gt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_gt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_le_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_le_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_le_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_le_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_le_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_le_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_ge_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_ge_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_ge_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_ge_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_ge_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_ge_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_eq\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_ne\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_lt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_lt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_lt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_gt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_gt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_gt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_le_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_le_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_le_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_ge_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_ge_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_ge_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_eq\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_ne\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_lt\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_lt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_gt\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_gt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_le\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_le</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_ge\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_ge</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_eq\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_ne\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_lt\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_lt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_gt\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_gt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_le\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_le</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_ge\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_ge</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_not\" class=\"method trait-impl\"><a href=\"#method.visit_v128_not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_not</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_and\" class=\"method trait-impl\"><a href=\"#method.visit_v128_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_and</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_andnot\" class=\"method trait-impl\"><a href=\"#method.visit_v128_andnot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_andnot</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_or\" class=\"method trait-impl\"><a href=\"#method.visit_v128_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_or</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_xor\" class=\"method trait-impl\"><a href=\"#method.visit_v128_xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_xor</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_bitselect\" class=\"method trait-impl\"><a href=\"#method.visit_v128_bitselect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_bitselect</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_any_true\" class=\"method trait-impl\"><a href=\"#method.visit_v128_any_true\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_any_true</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_abs\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_abs</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_neg\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_neg</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_popcnt\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_popcnt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_popcnt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_all_true\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_all_true\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_all_true</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_bitmask\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_bitmask\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_bitmask</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_narrow_i16x8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_narrow_i16x8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_narrow_i16x8_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_narrow_i16x8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_narrow_i16x8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_narrow_i16x8_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_shl\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_shl</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_shr_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_shr_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_shr_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_shr_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_shr_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_shr_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_add\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_add_sat_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_add_sat_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_add_sat_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_add_sat_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_add_sat_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_add_sat_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_sub\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_sub_sat_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_sub_sat_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_sub_sat_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_sub_sat_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_sub_sat_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_sub_sat_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_min_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_min_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_min_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_min_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_min_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_min_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_max_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_max_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_max_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_max_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_max_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_max_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_avgr_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_avgr_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_avgr_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extadd_pairwise_i8x16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extadd_pairwise_i8x16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extadd_pairwise_i8x16_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extadd_pairwise_i8x16_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extadd_pairwise_i8x16_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extadd_pairwise_i8x16_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_abs\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_abs</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_neg\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_neg</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_q15mulr_sat_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_q15mulr_sat_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_q15mulr_sat_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_all_true\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_all_true\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_all_true</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_bitmask\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_bitmask\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_bitmask</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_narrow_i32x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_narrow_i32x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_narrow_i32x4_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_narrow_i32x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_narrow_i32x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_narrow_i32x4_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extend_low_i8x16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extend_low_i8x16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extend_low_i8x16_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extend_high_i8x16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extend_high_i8x16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extend_high_i8x16_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extend_low_i8x16_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extend_low_i8x16_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extend_low_i8x16_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extend_high_i8x16_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extend_high_i8x16_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extend_high_i8x16_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_shl\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_shl</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_shr_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_shr_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_shr_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_shr_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_shr_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_shr_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_add\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_add_sat_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_add_sat_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_add_sat_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_add_sat_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_add_sat_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_add_sat_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_sub\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_sub_sat_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_sub_sat_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_sub_sat_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_sub_sat_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_sub_sat_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_sub_sat_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_mul\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_mul</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_min_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_min_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_min_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_min_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_min_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_min_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_max_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_max_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_max_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_max_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_max_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_max_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_avgr_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_avgr_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_avgr_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extmul_low_i8x16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extmul_low_i8x16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extmul_low_i8x16_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extmul_high_i8x16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extmul_high_i8x16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extmul_high_i8x16_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extmul_low_i8x16_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extmul_low_i8x16_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extmul_low_i8x16_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extmul_high_i8x16_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extmul_high_i8x16_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extmul_high_i8x16_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extadd_pairwise_i16x8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extadd_pairwise_i16x8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extadd_pairwise_i16x8_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extadd_pairwise_i16x8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extadd_pairwise_i16x8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extadd_pairwise_i16x8_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_abs\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_abs</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_neg\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_neg</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_all_true\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_all_true\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_all_true</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_bitmask\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_bitmask\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_bitmask</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extend_low_i16x8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extend_low_i16x8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extend_low_i16x8_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extend_high_i16x8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extend_high_i16x8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extend_high_i16x8_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extend_low_i16x8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extend_low_i16x8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extend_low_i16x8_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extend_high_i16x8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extend_high_i16x8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extend_high_i16x8_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_shl\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_shl</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_shr_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_shr_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_shr_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_shr_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_shr_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_shr_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_add\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_sub\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_mul\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_mul</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_min_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_min_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_min_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_min_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_min_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_min_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_max_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_max_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_max_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_max_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_max_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_max_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_dot_i16x8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_dot_i16x8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_dot_i16x8_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extmul_low_i16x8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extmul_low_i16x8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extmul_low_i16x8_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extmul_high_i16x8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extmul_high_i16x8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extmul_high_i16x8_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extmul_low_i16x8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extmul_low_i16x8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extmul_low_i16x8_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extmul_high_i16x8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extmul_high_i16x8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extmul_high_i16x8_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_abs\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_abs</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_neg\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_neg</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_all_true\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_all_true\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_all_true</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_bitmask\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_bitmask\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_bitmask</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_extend_low_i32x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_extend_low_i32x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_extend_low_i32x4_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_extend_high_i32x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_extend_high_i32x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_extend_high_i32x4_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_extend_low_i32x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_extend_low_i32x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_extend_low_i32x4_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_extend_high_i32x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_extend_high_i32x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_extend_high_i32x4_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_shl\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_shl</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_shr_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_shr_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_shr_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_shr_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_shr_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_shr_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_add\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_sub\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_mul\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_mul</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_extmul_low_i32x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_extmul_low_i32x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_extmul_low_i32x4_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_extmul_high_i32x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_extmul_high_i32x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_extmul_high_i32x4_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_extmul_low_i32x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_extmul_low_i32x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_extmul_low_i32x4_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_extmul_high_i32x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_extmul_high_i32x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_extmul_high_i32x4_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_ceil\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_ceil</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_floor\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_floor</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_trunc\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_trunc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_trunc</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_nearest\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_nearest\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_nearest</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_abs\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_abs</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_neg\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_neg</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_sqrt\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_sqrt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_add\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_sub\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_mul\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_mul</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_div\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_div</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_min\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_min</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_max\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_max</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_pmin\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_pmin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_pmin</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_pmax\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_pmax\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_pmax</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_ceil\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_ceil</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_floor\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_floor</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_trunc\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_trunc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_trunc</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_nearest\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_nearest\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_nearest</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_abs\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_abs</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_neg\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_neg</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_sqrt\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_sqrt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_add\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_sub\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_mul\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_mul</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_div\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_div</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_min\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_min</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_max\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_max</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_pmin\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_pmin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_pmin</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_pmax\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_pmax\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_pmax</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_trunc_sat_f32x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_trunc_sat_f32x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_trunc_sat_f32x4_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_trunc_sat_f32x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_trunc_sat_f32x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_trunc_sat_f32x4_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_convert_i32x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_convert_i32x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_convert_i32x4_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_convert_i32x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_convert_i32x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_convert_i32x4_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_trunc_sat_f64x2_s_zero\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_trunc_sat_f64x2_s_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_trunc_sat_f64x2_s_zero</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_trunc_sat_f64x2_u_zero\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_trunc_sat_f64x2_u_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_trunc_sat_f64x2_u_zero</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_convert_low_i32x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_convert_low_i32x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_convert_low_i32x4_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_convert_low_i32x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_convert_low_i32x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_convert_low_i32x4_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_demote_f64x2_zero\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_demote_f64x2_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_demote_f64x2_zero</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_promote_low_f32x4\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_promote_low_f32x4\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_promote_low_f32x4</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_relaxed_swizzle\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_relaxed_swizzle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_relaxed_swizzle</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_relaxed_trunc_f32x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_relaxed_trunc_f32x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_relaxed_trunc_f32x4_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_relaxed_trunc_f32x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_relaxed_trunc_f32x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_relaxed_trunc_f32x4_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_relaxed_trunc_f64x2_s_zero\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_relaxed_trunc_f64x2_s_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_relaxed_trunc_f64x2_s_zero</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_relaxed_trunc_f64x2_u_zero\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_relaxed_trunc_f64x2_u_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_relaxed_trunc_f64x2_u_zero</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_relaxed_madd\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_relaxed_madd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_relaxed_madd</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_relaxed_nmadd\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_relaxed_nmadd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_relaxed_nmadd</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_relaxed_madd\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_relaxed_madd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_relaxed_madd</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_relaxed_nmadd\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_relaxed_nmadd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_relaxed_nmadd</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_relaxed_laneselect\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_relaxed_laneselect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_relaxed_laneselect</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_relaxed_laneselect\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_relaxed_laneselect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_relaxed_laneselect</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_relaxed_laneselect\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_relaxed_laneselect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_relaxed_laneselect</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_relaxed_laneselect\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_relaxed_laneselect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_relaxed_laneselect</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_relaxed_min\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_relaxed_min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_relaxed_min</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_relaxed_max\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_relaxed_max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_relaxed_max</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_relaxed_min\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_relaxed_min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_relaxed_min</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_relaxed_max\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_relaxed_max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_relaxed_max</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_relaxed_q15mulr_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_relaxed_q15mulr_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_relaxed_q15mulr_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_relaxed_dot_i8x16_i7x16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_relaxed_dot_i8x16_i7x16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_relaxed_dot_i8x16_i7x16_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_relaxed_dot_i8x16_i7x16_add_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_relaxed_dot_i8x16_i7x16_add_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_relaxed_dot_i8x16_i7x16_add_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section></div></details>","VisitSimdOperator<'a>","wasmer::entities::store::inner::OnCalledHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Write-for-Box%3CW%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#162\">Source</a></span><a href=\"#impl-Write-for-Box%3CW%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;W&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;W&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#164\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a buffer into this writer, returning how many bytes were written. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html#tymethod.write\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#169\">Source</a><a href=\"#method.write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html#method.write_vectored\" class=\"fn\">write_vectored</a>(&amp;mut self, bufs: &amp;[<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Like <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html#tymethod.write\" title=\"method std::io::Write::write\"><code>write</code></a>, except that it writes from a slice of buffers. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html#method.write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_write_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#174\">Source</a><a href=\"#method.is_write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html#method.is_write_vectored\" class=\"fn\">is_write_vectored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>can_vector</code>)</span></div></span><div class='docblock'>Determines if this <code>Write</code>r has an efficient <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html#method.write_vectored\" title=\"method std::io::Write::write_vectored\"><code>write_vectored</code></a>\nimplementation. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html#method.is_write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#179\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Flushes this output stream, ensuring that all intermediately buffered\ncontents reach their destination. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html#tymethod.flush\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#184\">Source</a><a href=\"#method.write_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html#method.write_all\" class=\"fn\">write_all</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Attempts to write an entire buffer into this writer. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html#method.write_all\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#189\">Source</a><a href=\"#method.write_fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html#method.write_fmt\" class=\"fn\">write_fmt</a>(&amp;mut self, fmt: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Arguments.html\" title=\"struct core::fmt::Arguments\">Arguments</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a formatted string into this writer, returning any error\nencountered. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html#method.write_fmt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_all_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#1810\">Source</a><a href=\"#method.write_all_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html#method.write_all_vectored\" class=\"fn\">write_all_vectored</a>(&amp;mut self, bufs: &amp;mut [<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>write_all_vectored</code>)</span></div></span><div class='docblock'>Attempts to write multiple buffers into this writer. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html#method.write_all_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#1923-1925\">Source</a></span><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates a “by reference” adapter for this instance of <code>Write</code>. <a href=\"https://doc.rust-lang.org/1.84.1/std/io/trait.Write.html#method.by_ref\">Read more</a></div></details></div></details>","Write","wasmer::entities::store::inner::OnCalledHandler"],["<section id=\"impl-CoerceUnsized%3CBox%3CU,+A%3E%3E-for-Box%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2020\">Source</a><a href=\"#impl-CoerceUnsized%3CBox%3CU,+A%3E%3E-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/unsize/trait.CoerceUnsized.html\" title=\"trait core::ops::unsize::CoerceUnsized\">CoerceUnsized</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;U, A&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unsize.html\" title=\"trait core::marker::Unsize\">Unsize</a>&lt;U&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    U: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","CoerceUnsized<Box<U, A>>","wasmer::entities::store::inner::OnCalledHandler"],["<section id=\"impl-DerefPure-for-Box%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1962\">Source</a><a href=\"#impl-DerefPure-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/deref/trait.DerefPure.html\" title=\"trait core::ops::deref::DerefPure\">DerefPure</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","DerefPure","wasmer::entities::store::inner::OnCalledHandler"],["<section id=\"impl-DispatchFromDyn%3CBox%3CU%3E%3E-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2029\">Source</a><a href=\"#impl-DispatchFromDyn%3CBox%3CU%3E%3E-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/unsize/trait.DispatchFromDyn.html\" title=\"trait core::ops::unsize::DispatchFromDyn\">DispatchFromDyn</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;U&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unsize.html\" title=\"trait core::marker::Unsize\">Unsize</a>&lt;U&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","DispatchFromDyn<Box<U>>","wasmer::entities::store::inner::OnCalledHandler"],["<section id=\"impl-Eq-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1860\">Source</a></span><a href=\"#impl-Eq-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section>","Eq","wasmer::entities::store::inner::OnCalledHandler"],["<section id=\"impl-FusedIterator-for-Box%3CI,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.26.0\">1.26.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#80\">Source</a></span><a href=\"#impl-FusedIterator-for-Box%3CI,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/marker/trait.FusedIterator.html\" title=\"trait core::iter::traits::marker::FusedIterator\">FusedIterator</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;I, A&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/marker/trait.FusedIterator.html\" title=\"trait core::iter::traits::marker::FusedIterator\">FusedIterator</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section>","FusedIterator","wasmer::entities::store::inner::OnCalledHandler"],["<section id=\"impl-PinCoerceUnsized-for-Box%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2023\">Source</a><a href=\"#impl-PinCoerceUnsized-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/pin/trait.PinCoerceUnsized.html\" title=\"trait core::pin::PinCoerceUnsized\">PinCoerceUnsized</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","PinCoerceUnsized","wasmer::entities::store::inner::OnCalledHandler"],["<section id=\"impl-PointerLike-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2139\">Source</a><a href=\"#impl-PointerLike-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.PointerLike.html\" title=\"trait core::marker::PointerLike\">PointerLike</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;</h3></section>","PointerLike","wasmer::entities::store::inner::OnCalledHandler"],["<section id=\"impl-StableDeref-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-StableDeref-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StableDeref for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","StableDeref","wasmer::entities::store::inner::OnCalledHandler"],["<section id=\"impl-Unpin-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0\">1.33.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2082\">Source</a></span><a href=\"#impl-Unpin-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","Unpin","wasmer::entities::store::inner::OnCalledHandler"]]],["wasmer_wasix",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arbitrary%3C'a%3E-for-Box%3CA%3E\" class=\"impl\"><a href=\"#impl-Arbitrary%3C'a%3E-for-Box%3CA%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, A&gt; Arbitrary&lt;'a&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;A&gt;<div class=\"where\">where\n    A: Arbitrary&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary\" class=\"method trait-impl\"><a href=\"#method.arbitrary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary</a>(u: &amp;mut Unstructured&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;A&gt;, Error&gt;</h4></section></summary><div class='docblock'>Generate an arbitrary value of <code>Self</code> from the given unstructured data. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Get a size hint for how many bytes out of an <code>Unstructured</code> this type\nneeds to construct itself. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_size_hint\" class=\"method trait-impl\"><a href=\"#method.try_size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_size_hint</a>(\n    depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;), MaxRecursionReached&gt;</h4></section></summary><div class='docblock'>Get a size hint for how many bytes out of an <code>Unstructured</code> this type\nneeds to construct itself. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary_take_rest\" class=\"method trait-impl\"><a href=\"#method.arbitrary_take_rest\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary_take_rest</a>(u: Unstructured&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Error&gt;</h4></section></summary><div class='docblock'>Generate an arbitrary value of <code>Self</code> from the entirety of the given\nunstructured data. <a>Read more</a></div></details></div></details>","Arbitrary<'a>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Archive-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-Archive-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Archive for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: ArchiveUnsized + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Archived\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Archived\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Archived</a> = ArchivedBox&lt;&lt;T as ArchiveUnsized&gt;::Archived&gt;</h4></section></summary><div class='docblock'>The archived representation of this type. <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Resolver\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Resolver\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Resolver</a> = BoxResolver</h4></section></summary><div class='docblock'>The resolver for this type. It must contain all the additional\ninformation from serializing needed to make the archived type from\nthe normal type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve\" class=\"method trait-impl\"><a href=\"#method.resolve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">resolve</a>(\n    &amp;self,\n    resolver: &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt; as Archive&gt;::Resolver,\n    out: Place&lt;&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt; as Archive&gt;::Archived&gt;,\n)</h4></section></summary><div class='docblock'>Creates the archived version of this value at the given position and\nwrites it to the given output. <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.COPY_OPTIMIZATION\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.COPY_OPTIMIZATION\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">COPY_OPTIMIZATION</a>: CopyOptimization&lt;Self&gt; = _</h4></section></summary><div class='docblock'>An optimization flag that allows the bytes of this type to be copied\ndirectly to a writer instead of calling <code>serialize</code>. <a>Read more</a></div></details></div></details>","Archive","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsFd-for-Box%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0\">1.64.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/os/fd/owned.rs.html#431\">Source</a></span><a href=\"#impl-AsFd-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/std/os/fd/owned/trait.AsFd.html\" title=\"trait std::os::fd::owned::AsFd\">AsFd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/std/os/fd/owned/trait.AsFd.html\" title=\"trait std::os::fd::owned::AsFd\">AsFd</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/os/fd/owned.rs.html#433\">Source</a><a href=\"#method.as_fd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/os/fd/owned/trait.AsFd.html#tymethod.as_fd\" class=\"fn\">as_fd</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/os/fd/owned/struct.BorrowedFd.html\" title=\"struct std::os::fd::owned::BorrowedFd\">BorrowedFd</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Borrows the file descriptor. <a href=\"https://doc.rust-lang.org/1.84.1/std/os/fd/owned/trait.AsFd.html#tymethod.as_fd\">Read more</a></div></details></div></details>","AsFd","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3CT%3E-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2053\">Source</a></span><a href=\"#impl-AsMut%3CT%3E-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2054\">Source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<T>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRawFd-for-Box%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/os/fd/raw.rs.html#270\">Source</a></span><a href=\"#impl-AsRawFd-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/std/os/fd/raw/trait.AsRawFd.html\" title=\"trait std::os::fd::raw::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/std/os/fd/raw/trait.AsRawFd.html\" title=\"trait std::os::fd::raw::AsRawFd\">AsRawFd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_raw_fd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/os/fd/raw.rs.html#272\">Source</a><a href=\"#method.as_raw_fd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/std/os/fd/raw/trait.AsRawFd.html#tymethod.as_raw_fd\" class=\"fn\">as_raw_fd</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Extracts the raw file descriptor. <a href=\"https://doc.rust-lang.org/1.84.1/std/os/fd/raw/trait.AsRawFd.html#tymethod.as_raw_fd\">Read more</a></div></details></div></details>","AsRawFd","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CT%3E-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2046\">Source</a></span><a href=\"#impl-AsRef%3CT%3E-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2047\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<T>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncBufRead-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-AsyncBufRead-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; AsyncBufRead for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: AsyncBufRead + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_fill_buf\" class=\"method trait-impl\"><a href=\"#method.poll_fill_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_fill_buf</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>], <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to return the contents of the internal buffer, filling it with more data\nfrom the inner reader if it is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.consume\" class=\"method trait-impl\"><a href=\"#method.consume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">consume</a>(self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;, amt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Tells this buffer that <code>amt</code> bytes have been consumed from the buffer,\nso they should no longer be returned in calls to <a href=\"AsyncRead::poll_read\"><code>poll_read</code></a>. <a>Read more</a></div></details></div></details>","AsyncBufRead","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncBufRead-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-AsyncBufRead-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; AsyncBufRead for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: AsyncBufRead + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_fill_buf\" class=\"method trait-impl\"><a href=\"#method.poll_fill_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_fill_buf</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>], <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to return the contents of the internal buffer, filling it with more data\nfrom the inner reader if it is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.consume\" class=\"method trait-impl\"><a href=\"#method.consume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">consume</a>(self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;, amt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Tells this buffer that <code>amt</code> bytes have been consumed from the buffer,\nso they should no longer be returned in calls to <a href=\"AsyncRead::poll_read\"><code>poll_read</code></a>. <a>Read more</a></div></details></div></details>","AsyncBufRead","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncFn%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2013\">Source</a><a href=\"#impl-AsyncFn%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFn.html\" title=\"trait core::ops::async_function::AsyncFn\">AsyncFn</a>&lt;Args&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Tuple.html\" title=\"trait core::marker::Tuple\">Tuple</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFn.html\" title=\"trait core::ops::async_function::AsyncFn\">AsyncFn</a>&lt;Args&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.async_call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2014\">Source</a><a href=\"#method.async_call\" class=\"anchor\">§</a><h4 class=\"code-header\">extern &quot;rust-call&quot; fn <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFn.html#tymethod.async_call\" class=\"fn\">async_call</a>(\n    &amp;self,\n    args: Args,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html\" title=\"trait core::ops::async_function::AsyncFnMut\">AsyncFnMut</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html#associatedtype.CallRefFuture\" title=\"type core::ops::async_function::AsyncFnMut::CallRefFuture\">CallRefFuture</a>&lt;'_&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_fn_traits</code>)</span></div></span><div class='docblock'>Call the <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFn.html\" title=\"trait core::ops::async_function::AsyncFn\"><code>AsyncFn</code></a>, returning a future which may borrow from the called closure.</div></details></div></details>","AsyncFn<Args>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncFnMut%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2001\">Source</a><a href=\"#impl-AsyncFnMut%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html\" title=\"trait core::ops::async_function::AsyncFnMut\">AsyncFnMut</a>&lt;Args&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Tuple.html\" title=\"trait core::marker::Tuple\">Tuple</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html\" title=\"trait core::ops::async_function::AsyncFnMut\">AsyncFnMut</a>&lt;Args&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CallRefFuture\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2002\">Source</a><a href=\"#associatedtype.CallRefFuture\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html#associatedtype.CallRefFuture\" class=\"associatedtype\">CallRefFuture</a>&lt;'a&gt; = &lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html\" title=\"trait core::ops::async_function::AsyncFnMut\">AsyncFnMut</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html#associatedtype.CallRefFuture\" title=\"type core::ops::async_function::AsyncFnMut::CallRefFuture\">CallRefFuture</a>&lt;'a&gt;\n<span class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt;: 'a</span></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_fn_traits</code>)</span></div></span><div class='docblock'>Future returned by <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html#tymethod.async_call_mut\" title=\"method core::ops::async_function::AsyncFnMut::async_call_mut\"><code>AsyncFnMut::async_call_mut</code></a> and <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFn.html#tymethod.async_call\" title=\"method core::ops::async_function::AsyncFn::async_call\"><code>AsyncFn::async_call</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.async_call_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2007\">Source</a><a href=\"#method.async_call_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">extern &quot;rust-call&quot; fn <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html#tymethod.async_call_mut\" class=\"fn\">async_call_mut</a>(\n    &amp;mut self,\n    args: Args,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html\" title=\"trait core::ops::async_function::AsyncFnMut\">AsyncFnMut</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html#associatedtype.CallRefFuture\" title=\"type core::ops::async_function::AsyncFnMut::CallRefFuture\">CallRefFuture</a>&lt;'_&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_fn_traits</code>)</span></div></span><div class='docblock'>Call the <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnMut.html\" title=\"trait core::ops::async_function::AsyncFnMut\"><code>AsyncFnMut</code></a>, returning a future which may borrow from the called closure.</div></details></div></details>","AsyncFnMut<Args>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncFnOnce%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1991\">Source</a><a href=\"#impl-AsyncFnOnce%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html\" title=\"trait core::ops::async_function::AsyncFnOnce\">AsyncFnOnce</a>&lt;Args&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Tuple.html\" title=\"trait core::marker::Tuple\">Tuple</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html\" title=\"trait core::ops::async_function::AsyncFnOnce\">AsyncFnOnce</a>&lt;Args&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1992\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html\" title=\"trait core::ops::async_function::AsyncFnOnce\">AsyncFnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html#associatedtype.Output\" title=\"type core::ops::async_function::AsyncFnOnce::Output\">Output</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_fn_traits</code>)</span></div></span><div class='docblock'>Output type of the called closure’s future.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.CallOnceFuture\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1993\">Source</a><a href=\"#associatedtype.CallOnceFuture\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html#associatedtype.CallOnceFuture\" class=\"associatedtype\">CallOnceFuture</a> = &lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html\" title=\"trait core::ops::async_function::AsyncFnOnce\">AsyncFnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html#associatedtype.CallOnceFuture\" title=\"type core::ops::async_function::AsyncFnOnce::CallOnceFuture\">CallOnceFuture</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_fn_traits</code>)</span></div></span><div class='docblock'>Future returned by <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html#tymethod.async_call_once\" title=\"method core::ops::async_function::AsyncFnOnce::async_call_once\"><code>AsyncFnOnce::async_call_once</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.async_call_once\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1995\">Source</a><a href=\"#method.async_call_once\" class=\"anchor\">§</a><h4 class=\"code-header\">extern &quot;rust-call&quot; fn <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html#tymethod.async_call_once\" class=\"fn\">async_call_once</a>(\n    self,\n    args: Args,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html\" title=\"trait core::ops::async_function::AsyncFnOnce\">AsyncFnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html#associatedtype.CallOnceFuture\" title=\"type core::ops::async_function::AsyncFnOnce::CallOnceFuture\">CallOnceFuture</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_fn_traits</code>)</span></div></span><div class='docblock'>Call the <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/async_function/trait.AsyncFnOnce.html\" title=\"trait core::ops::async_function::AsyncFnOnce\"><code>AsyncFnOnce</code></a>, returning a future which may move out of the called closure.</div></details></div></details>","AsyncFnOnce<Args>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncIterator-for-Box%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#83\">Source</a><a href=\"#impl-AsyncIterator-for-Box%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html\" title=\"trait core::async_iter::async_iter::AsyncIterator\">AsyncIterator</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html\" title=\"trait core::async_iter::async_iter::AsyncIterator\">AsyncIterator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#84\">Source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = &lt;S as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html\" title=\"trait core::async_iter::async_iter::AsyncIterator\">AsyncIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html#associatedtype.Item\" title=\"type core::async_iter::async_iter::AsyncIterator::Item\">Item</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_iterator</code>)</span></div></span><div class='docblock'>The type of items yielded by the async iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_next\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#86\">Source</a><a href=\"#method.poll_next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html#tymethod.poll_next\" class=\"fn\">poll_next</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html\" title=\"trait core::async_iter::async_iter::AsyncIterator\">AsyncIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html#associatedtype.Item\" title=\"type core::async_iter::async_iter::AsyncIterator::Item\">Item</a>&gt;&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_iterator</code>)</span></div></span><div class='docblock'>Attempts to pull out the next value of this async iterator, registering the\ncurrent task for wakeup if the value is not yet available, and returning\n<code>None</code> if the async iterator is exhausted. <a href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html#tymethod.poll_next\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#90\">Source</a><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_iterator</code>)</span></div></span><div class='docblock'>Returns the bounds on the remaining length of the async iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/async_iter/async_iter/trait.AsyncIterator.html#method.size_hint\">Read more</a></div></details></div></details>","AsyncIterator","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncRead-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-AsyncRead-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; AsyncRead for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: AsyncRead + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_read\" class=\"method trait-impl\"><a href=\"#method.poll_read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_read</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n    buf: &amp;mut ReadBuf&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to read from the <code>AsyncRead</code> into <code>buf</code>. <a>Read more</a></div></details></div></details>","AsyncRead","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncRead-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-AsyncRead-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; AsyncRead for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: AsyncRead + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_read\" class=\"method trait-impl\"><a href=\"#method.poll_read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_read</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n    buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to read from the <code>AsyncRead</code> into <code>buf</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_read_vectored\" class=\"method trait-impl\"><a href=\"#method.poll_read_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_read_vectored</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n    bufs: &amp;mut [<a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.IoSliceMut.html\" title=\"struct wasmer_wasix::syscalls::io::IoSliceMut\">IoSliceMut</a>&lt;'_&gt;],\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nIO operations. <a>Read more</a></div></details></div></details>","AsyncRead","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncSeek-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-AsyncSeek-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; AsyncSeek for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: AsyncSeek + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_seek\" class=\"method trait-impl\"><a href=\"#method.poll_seek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_seek</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n    pos: <a class=\"enum\" href=\"wasmer_wasix/syscalls/io/enum.SeekFrom.html\" title=\"enum wasmer_wasix::syscalls::io::SeekFrom\">SeekFrom</a>,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to seek to an offset, in bytes, in a stream. <a>Read more</a></div></details></div></details>","AsyncSeek","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncSeek-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-AsyncSeek-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; AsyncSeek for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: AsyncSeek + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.start_seek\" class=\"method trait-impl\"><a href=\"#method.start_seek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">start_seek</a>(self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;, pos: <a class=\"enum\" href=\"wasmer_wasix/syscalls/io/enum.SeekFrom.html\" title=\"enum wasmer_wasix::syscalls::io::SeekFrom\">SeekFrom</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Attempts to seek to an offset, in bytes, in a stream. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_complete\" class=\"method trait-impl\"><a href=\"#method.poll_complete\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_complete</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Waits for a seek operation to complete. <a>Read more</a></div></details></div></details>","AsyncSeek","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncWrite-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-AsyncWrite-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.AsyncWrite.html\" title=\"trait wasmer_wasix::runners::dproxy::hyper_proxy::AsyncWrite\">AsyncWrite</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.AsyncWrite.html\" title=\"trait wasmer_wasix::runners::dproxy::hyper_proxy::AsyncWrite\">AsyncWrite</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_write\" class=\"method trait-impl\"><a href=\"#method.poll_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.AsyncWrite.html#tymethod.poll_write\" class=\"fn\">poll_write</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n    buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to write bytes from <code>buf</code> into the object. <a href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.AsyncWrite.html#tymethod.poll_write\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_write_vectored\" class=\"method trait-impl\"><a href=\"#method.poll_write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.AsyncWrite.html#method.poll_write_vectored\" class=\"fn\">poll_write_vectored</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n    bufs: &amp;[<a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.IoSlice.html\" title=\"struct wasmer_wasix::syscalls::io::IoSlice\">IoSlice</a>&lt;'_&gt;],\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Like <a href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.AsyncWrite.html#tymethod.poll_write\" title=\"method wasmer_wasix::runners::dproxy::hyper_proxy::AsyncWrite::poll_write\"><code>poll_write</code></a>, except that it writes from a slice of buffers. <a href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.AsyncWrite.html#method.poll_write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_write_vectored\" class=\"method trait-impl\"><a href=\"#method.is_write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.AsyncWrite.html#method.is_write_vectored\" class=\"fn\">is_write_vectored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determines if this writer has an efficient <a href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.AsyncWrite.html#method.poll_write_vectored\" title=\"method wasmer_wasix::runners::dproxy::hyper_proxy::AsyncWrite::poll_write_vectored\"><code>poll_write_vectored</code></a>\nimplementation. <a href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.AsyncWrite.html#method.is_write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_flush\" class=\"method trait-impl\"><a href=\"#method.poll_flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.AsyncWrite.html#tymethod.poll_flush\" class=\"fn\">poll_flush</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to flush the object, ensuring that any buffered data reach\ntheir destination. <a href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.AsyncWrite.html#tymethod.poll_flush\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_shutdown\" class=\"method trait-impl\"><a href=\"#method.poll_shutdown\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.AsyncWrite.html#tymethod.poll_shutdown\" class=\"fn\">poll_shutdown</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Initiates or attempts to shut down this writer, returning success when\nthe I/O connection has completely shut down. <a href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.AsyncWrite.html#tymethod.poll_shutdown\">Read more</a></div></details></div></details>","AsyncWrite","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncWrite-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-AsyncWrite-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; AsyncWrite for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: AsyncWrite + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_write\" class=\"method trait-impl\"><a href=\"#method.poll_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_write</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n    buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to write bytes from <code>buf</code> into the object. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_write_vectored\" class=\"method trait-impl\"><a href=\"#method.poll_write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_write_vectored</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n    bufs: &amp;[<a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.IoSlice.html\" title=\"struct wasmer_wasix::syscalls::io::IoSlice\">IoSlice</a>&lt;'_&gt;],\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to write bytes from <code>bufs</code> into the object using vectored\nIO operations. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_flush\" class=\"method trait-impl\"><a href=\"#method.poll_flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_flush</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to flush the object, ensuring that any buffered data reach\ntheir destination. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_close\" class=\"method trait-impl\"><a href=\"#method.poll_close\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_close</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to close the object. <a>Read more</a></div></details></div></details>","AsyncWrite","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Body-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-Body-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Body for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: Body + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Data\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Data\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Data</a> = &lt;T as Body&gt;::Data</h4></section></summary><div class='docblock'>Values yielded by the <code>Body</code>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = &lt;T as Body&gt;::Error</h4></section></summary><div class='docblock'>The error type this <code>Body</code> might generate.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_frame\" class=\"method trait-impl\"><a href=\"#method.poll_frame\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_frame</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Frame&lt;&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt; as Body&gt;::Data&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt; as Body&gt;::Error&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to pull out the next data buffer of this stream.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_end_stream\" class=\"method trait-impl\"><a href=\"#method.is_end_stream\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_end_stream</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> when the end of stream has been reached. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; SizeHint</h4></section></summary><div class='docblock'>Returns the bounds on the remaining length of the stream. <a>Read more</a></div></details></div></details>","Body","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3CT%3E-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.1.0\">1.1.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2032\">Source</a></span><a href=\"#impl-Borrow%3CT%3E-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"wasmer_wasix/syscalls/trait.Borrow.html\" title=\"trait wasmer_wasix::syscalls::Borrow\">Borrow</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2033\">Source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"wasmer_wasix/syscalls/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<T>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowMut%3CT%3E-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.1.0\">1.1.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2039\">Source</a></span><a href=\"#impl-BorrowMut%3CT%3E-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/borrow/trait.BorrowMut.html\" title=\"trait core::borrow::BorrowMut\">BorrowMut</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2040\">Source</a><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class='docblock'>Mutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/1.84.1/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details>","BorrowMut<T>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1015\">Source</a><a href=\"#impl-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1060\">Source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.from_raw\" class=\"fn\">from_raw</a>(raw: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.pointer.html\">*mut T</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a box from a raw pointer.</p>\n<p>After calling this function, the raw pointer is owned by the\nresulting <code>Box</code>. Specifically, the <code>Box</code> destructor will call\nthe destructor of <code>T</code> and free the allocated memory. For this\nto be safe, the memory must have been allocated in accordance\nwith the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code> .</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>This function is unsafe because improper use may lead to\nmemory problems. For example, a double-free may occur if the\nfunction is called twice on the same raw pointer.</p>\n<p>The safety conditions are described in the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> section.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>Recreate a <code>Box</code> which was previously converted to a raw pointer\nusing <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.into_raw\" title=\"associated function alloc::boxed::Box::into_raw\"><code>Box::into_raw</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = Box::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span>ptr = Box::into_raw(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_raw(ptr) };</code></pre></div>\n<p>Manually create a <code>Box</code> from scratch by using the global allocator:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::alloc::{alloc, Layout};\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>ptr = alloc(Layout::new::&lt;i32&gt;()) <span class=\"kw\">as </span><span class=\"kw-2\">*mut </span>i32;\n    <span class=\"comment\">// In general .write is required to avoid attempting to destruct\n    // the (uninitialized) previous contents of `ptr`, though for this\n    // simple example `*ptr = 5` would have worked as well.\n    </span>ptr.write(<span class=\"number\">5</span>);\n    <span class=\"kw\">let </span>x = Box::from_raw(ptr);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_non_null\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1113\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.from_non_null\" class=\"fn\">from_non_null</a>(ptr: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>box_vec_non_null</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a box from a <code>NonNull</code> pointer.</p>\n<p>After calling this function, the <code>NonNull</code> pointer is owned by\nthe resulting <code>Box</code>. Specifically, the <code>Box</code> destructor will call\nthe destructor of <code>T</code> and free the allocated memory. For this\nto be safe, the memory must have been allocated in accordance\nwith the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code> .</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>This function is unsafe because improper use may lead to\nmemory problems. For example, a double-free may occur if the\nfunction is called twice on the same <code>NonNull</code> pointer.</p>\n<p>The safety conditions are described in the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> section.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Recreate a <code>Box</code> which was previously converted to a <code>NonNull</code>\npointer using <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.into_non_null\" title=\"associated function alloc::boxed::Box::into_non_null\"><code>Box::into_non_null</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_vec_non_null)]\n\n</span><span class=\"kw\">let </span>x = Box::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span>non_null = Box::into_non_null(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_non_null(non_null) };</code></pre></div>\n<p>Manually create a <code>Box</code> from scratch by using the global allocator:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_vec_non_null)]\n\n</span><span class=\"kw\">use </span>std::alloc::{alloc, Layout};\n<span class=\"kw\">use </span>std::ptr::NonNull;\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>non_null = NonNull::new(alloc(Layout::new::&lt;i32&gt;()).cast::&lt;i32&gt;())\n        .expect(<span class=\"string\">\"allocation failed\"</span>);\n    <span class=\"comment\">// In general .write is required to avoid attempting to destruct\n    // the (uninitialized) previous contents of `non_null`.\n    </span>non_null.write(<span class=\"number\">5</span>);\n    <span class=\"kw\">let </span>x = Box::from_non_null(non_null);\n}</code></pre></div>\n</div></details></div></details>",0,"wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#238\">Source</a><a href=\"#impl-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#254\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.new\" class=\"fn\">new</a>(x: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Allocates memory on the heap and then places <code>x</code> into it.</p>\n<p>This doesn’t actually allocate if <code>T</code> is zero-sized.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>five = Box::new(<span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_uninit\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#279\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.new_uninit\" class=\"fn\">new_uninit</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new box with uninitialized contents.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Box::&lt;u32&gt;::new_uninit();\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>five.as_mut_ptr().write(<span class=\"number\">5</span>);\n\n    five.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#305\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>new_zeroed_alloc</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Box</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(new_zeroed_alloc)]\n\n</span><span class=\"kw\">let </span>zero = Box::&lt;u32&gt;::new_zeroed();\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pin\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0\">1.33.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#320\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.pin\" class=\"fn\">pin</a>(x: T) -&gt; <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <a href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\"><code>Unpin</code></a>, then\n<code>x</code> will be pinned in memory and unable to be moved.</p>\n<p>Constructing and pinning of the <code>Box</code> can also be done in two steps: <code>Box::pin(x)</code>\ndoes the same as <code><a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.into_pin\" title=\"associated function alloc::boxed::Box::into_pin\">Box::into_pin</a>(<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.new\" title=\"associated function alloc::boxed::Box::new\">Box::new</a>(x))</code>. Consider using\n<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.into_pin\" title=\"associated function alloc::boxed::Box::into_pin\"><code>into_pin</code></a> if you already have a <code>Box&lt;T&gt;</code>, or if you want to\nconstruct a (pinned) <code>Box</code> in a different way than with <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.new\" title=\"associated function alloc::boxed::Box::new\"><code>Box::new</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#339\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.try_new\" class=\"fn\">try_new</a>(x: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Allocates memory on the heap then places <code>x</code> into it,\nreturning an error if the allocation fails</p>\n<p>This doesn’t actually allocate if <code>T</code> is zero-sized.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">let </span>five = Box::try_new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_uninit\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#366\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.try_new_uninit\" class=\"fn\">try_new_uninit</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new box with uninitialized contents on the heap,\nreturning an error if the allocation fails</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Box::&lt;u32&gt;::try_new_uninit()<span class=\"question-mark\">?</span>;\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>five.as_mut_ptr().write(<span class=\"number\">5</span>);\n\n    five.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_zeroed\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#392\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.try_new_zeroed\" class=\"fn\">try_new_zeroed</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Box</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes on the heap</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">let </span>zero = Box::&lt;u32&gt;::try_new_zeroed()<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>);</code></pre></div>\n</div></details></div></details>",0,"wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Box%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1118\">Source</a><a href=\"#impl-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1169\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.from_raw_in\" class=\"fn\">from_raw_in</a>(raw: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.pointer.html\">*mut T</a>, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a box from a raw pointer in the given allocator.</p>\n<p>After calling this function, the raw pointer is owned by the\nresulting <code>Box</code>. Specifically, the <code>Box</code> destructor will call\nthe destructor of <code>T</code> and free the allocated memory. For this\nto be safe, the memory must have been allocated in accordance\nwith the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code> .</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>This function is unsafe because improper use may lead to\nmemory problems. For example, a double-free may occur if the\nfunction is called twice on the same raw pointer.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>Recreate a <code>Box</code> which was previously converted to a raw pointer\nusing <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.into_raw_with_allocator\" title=\"associated function alloc::boxed::Box::into_raw_with_allocator\"><code>Box::into_raw_with_allocator</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x = Box::new_in(<span class=\"number\">5</span>, System);\n<span class=\"kw\">let </span>(ptr, alloc) = Box::into_raw_with_allocator(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_raw_in(ptr, alloc) };</code></pre></div>\n<p>Manually create a <code>Box</code> from scratch by using the system allocator:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api, slice_ptr_get)]\n\n</span><span class=\"kw\">use </span>std::alloc::{Allocator, Layout, System};\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>ptr = System.allocate(Layout::new::&lt;i32&gt;())<span class=\"question-mark\">?</span>.as_mut_ptr() <span class=\"kw\">as </span><span class=\"kw-2\">*mut </span>i32;\n    <span class=\"comment\">// In general .write is required to avoid attempting to destruct\n    // the (uninitialized) previous contents of `ptr`, though for this\n    // simple example `*ptr = 5` would have worked as well.\n    </span>ptr.write(<span class=\"number\">5</span>);\n    <span class=\"kw\">let </span>x = Box::from_raw_in(ptr, System);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_non_null_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1223\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.from_non_null_in\" class=\"fn\">from_non_null_in</a>(raw: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;T&gt;, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a box from a <code>NonNull</code> pointer in the given allocator.</p>\n<p>After calling this function, the <code>NonNull</code> pointer is owned by\nthe resulting <code>Box</code>. Specifically, the <code>Box</code> destructor will call\nthe destructor of <code>T</code> and free the allocated memory. For this\nto be safe, the memory must have been allocated in accordance\nwith the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code> .</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>This function is unsafe because improper use may lead to\nmemory problems. For example, a double-free may occur if the\nfunction is called twice on the same raw pointer.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Recreate a <code>Box</code> which was previously converted to a <code>NonNull</code> pointer\nusing <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.into_non_null_with_allocator\" title=\"associated function alloc::boxed::Box::into_non_null_with_allocator\"><code>Box::into_non_null_with_allocator</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api, box_vec_non_null)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x = Box::new_in(<span class=\"number\">5</span>, System);\n<span class=\"kw\">let </span>(non_null, alloc) = Box::into_non_null_with_allocator(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_non_null_in(non_null, alloc) };</code></pre></div>\n<p>Manually create a <code>Box</code> from scratch by using the system allocator:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api, box_vec_non_null, slice_ptr_get)]\n\n</span><span class=\"kw\">use </span>std::alloc::{Allocator, Layout, System};\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>non_null = System.allocate(Layout::new::&lt;i32&gt;())<span class=\"question-mark\">?</span>.cast::&lt;i32&gt;();\n    <span class=\"comment\">// In general .write is required to avoid attempting to destruct\n    // the (uninitialized) previous contents of `non_null`.\n    </span>non_null.write(<span class=\"number\">5</span>);\n    <span class=\"kw\">let </span>x = Box::from_non_null_in(non_null, System);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1278\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.into_raw\" class=\"fn\">into_raw</a>(b: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.pointer.html\">*mut T</a></h4></section></summary><div class=\"docblock\"><p>Consumes the <code>Box</code>, returning a wrapped raw pointer.</p>\n<p>The pointer will be properly aligned and non-null.</p>\n<p>After calling this function, the caller is responsible for the\nmemory previously managed by the <code>Box</code>. In particular, the\ncaller should properly destroy <code>T</code> and release the memory, taking\ninto account the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code>. The easiest way to\ndo this is to convert the raw pointer back into a <code>Box</code> with the\n<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.from_raw\" title=\"associated function alloc::boxed::Box::from_raw\"><code>Box::from_raw</code></a> function, allowing the <code>Box</code> destructor to perform\nthe cleanup.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Box::into_raw(b)</code> instead of <code>b.into_raw()</code>. This\nis so that there is no conflict with a method on the inner type.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Converting the raw pointer back into a <code>Box</code> with <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.from_raw\" title=\"associated function alloc::boxed::Box::from_raw\"><code>Box::from_raw</code></a>\nfor automatic cleanup:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = Box::new(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>ptr = Box::into_raw(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_raw(ptr) };</code></pre></div>\n<p>Manual cleanup by explicitly running the destructor and deallocating\nthe memory:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::alloc::{dealloc, Layout};\n<span class=\"kw\">use </span>std::ptr;\n\n<span class=\"kw\">let </span>x = Box::new(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>ptr = Box::into_raw(x);\n<span class=\"kw\">unsafe </span>{\n    ptr::drop_in_place(ptr);\n    dealloc(ptr <span class=\"kw\">as </span><span class=\"kw-2\">*mut </span>u8, Layout::new::&lt;String&gt;());\n}</code></pre></div>\n<p>Note: This is equivalent to the following:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = Box::new(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>ptr = Box::into_raw(x);\n<span class=\"kw\">unsafe </span>{\n    drop(Box::from_raw(ptr));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_non_null\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1338\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.into_non_null\" class=\"fn\">into_non_null</a>(b: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;T&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>box_vec_non_null</code>)</span></div></span></summary><div class=\"docblock\"><p>Consumes the <code>Box</code>, returning a wrapped <code>NonNull</code> pointer.</p>\n<p>The pointer will be properly aligned.</p>\n<p>After calling this function, the caller is responsible for the\nmemory previously managed by the <code>Box</code>. In particular, the\ncaller should properly destroy <code>T</code> and release the memory, taking\ninto account the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code>. The easiest way to\ndo this is to convert the <code>NonNull</code> pointer back into a <code>Box</code> with the\n<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.from_non_null\" title=\"associated function alloc::boxed::Box::from_non_null\"><code>Box::from_non_null</code></a> function, allowing the <code>Box</code> destructor to\nperform the cleanup.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Box::into_non_null(b)</code> instead of <code>b.into_non_null()</code>.\nThis is so that there is no conflict with a method on the inner type.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Converting the <code>NonNull</code> pointer back into a <code>Box</code> with <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.from_non_null\" title=\"associated function alloc::boxed::Box::from_non_null\"><code>Box::from_non_null</code></a>\nfor automatic cleanup:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_vec_non_null)]\n\n</span><span class=\"kw\">let </span>x = Box::new(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>non_null = Box::into_non_null(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_non_null(non_null) };</code></pre></div>\n<p>Manual cleanup by explicitly running the destructor and deallocating\nthe memory:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_vec_non_null)]\n\n</span><span class=\"kw\">use </span>std::alloc::{dealloc, Layout};\n\n<span class=\"kw\">let </span>x = Box::new(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>non_null = Box::into_non_null(x);\n<span class=\"kw\">unsafe </span>{\n    non_null.drop_in_place();\n    dealloc(non_null.as_ptr().cast::&lt;u8&gt;(), Layout::new::&lt;String&gt;());\n}</code></pre></div>\n<p>Note: This is equivalent to the following:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_vec_non_null)]\n\n</span><span class=\"kw\">let </span>x = Box::new(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>non_null = Box::into_non_null(x);\n<span class=\"kw\">unsafe </span>{\n    drop(Box::from_non_null(non_null));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw_with_allocator\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1392\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.into_raw_with_allocator\" class=\"fn\">into_raw_with_allocator</a>(b: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.pointer.html\">*mut T</a>, A)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Consumes the <code>Box</code>, returning a wrapped raw pointer and the allocator.</p>\n<p>The pointer will be properly aligned and non-null.</p>\n<p>After calling this function, the caller is responsible for the\nmemory previously managed by the <code>Box</code>. In particular, the\ncaller should properly destroy <code>T</code> and release the memory, taking\ninto account the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code>. The easiest way to\ndo this is to convert the raw pointer back into a <code>Box</code> with the\n<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.from_raw_in\" title=\"associated function alloc::boxed::Box::from_raw_in\"><code>Box::from_raw_in</code></a> function, allowing the <code>Box</code> destructor to perform\nthe cleanup.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Box::into_raw_with_allocator(b)</code> instead of <code>b.into_raw_with_allocator()</code>. This\nis so that there is no conflict with a method on the inner type.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<p>Converting the raw pointer back into a <code>Box</code> with <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.from_raw_in\" title=\"associated function alloc::boxed::Box::from_raw_in\"><code>Box::from_raw_in</code></a>\nfor automatic cleanup:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x = Box::new_in(String::from(<span class=\"string\">\"Hello\"</span>), System);\n<span class=\"kw\">let </span>(ptr, alloc) = Box::into_raw_with_allocator(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_raw_in(ptr, alloc) };</code></pre></div>\n<p>Manual cleanup by explicitly running the destructor and deallocating\nthe memory:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::{Allocator, Layout, System};\n<span class=\"kw\">use </span>std::ptr::{<span class=\"self\">self</span>, NonNull};\n\n<span class=\"kw\">let </span>x = Box::new_in(String::from(<span class=\"string\">\"Hello\"</span>), System);\n<span class=\"kw\">let </span>(ptr, alloc) = Box::into_raw_with_allocator(x);\n<span class=\"kw\">unsafe </span>{\n    ptr::drop_in_place(ptr);\n    <span class=\"kw\">let </span>non_null = NonNull::new_unchecked(ptr);\n    alloc.deallocate(non_null.cast(), Layout::new::&lt;String&gt;());\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_non_null_with_allocator\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1453\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.into_non_null_with_allocator\" class=\"fn\">into_non_null_with_allocator</a>(b: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; (<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;T&gt;, A)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Consumes the <code>Box</code>, returning a wrapped <code>NonNull</code> pointer and the allocator.</p>\n<p>The pointer will be properly aligned.</p>\n<p>After calling this function, the caller is responsible for the\nmemory previously managed by the <code>Box</code>. In particular, the\ncaller should properly destroy <code>T</code> and release the memory, taking\ninto account the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code>. The easiest way to\ndo this is to convert the <code>NonNull</code> pointer back into a <code>Box</code> with the\n<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.from_non_null_in\" title=\"associated function alloc::boxed::Box::from_non_null_in\"><code>Box::from_non_null_in</code></a> function, allowing the <code>Box</code> destructor to\nperform the cleanup.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Box::into_non_null_with_allocator(b)</code> instead of\n<code>b.into_non_null_with_allocator()</code>. This is so that there is no\nconflict with a method on the inner type.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<p>Converting the <code>NonNull</code> pointer back into a <code>Box</code> with\n<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.from_non_null_in\" title=\"associated function alloc::boxed::Box::from_non_null_in\"><code>Box::from_non_null_in</code></a> for automatic cleanup:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api, box_vec_non_null)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x = Box::new_in(String::from(<span class=\"string\">\"Hello\"</span>), System);\n<span class=\"kw\">let </span>(non_null, alloc) = Box::into_non_null_with_allocator(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_non_null_in(non_null, alloc) };</code></pre></div>\n<p>Manual cleanup by explicitly running the destructor and deallocating\nthe memory:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api, box_vec_non_null)]\n\n</span><span class=\"kw\">use </span>std::alloc::{Allocator, Layout, System};\n\n<span class=\"kw\">let </span>x = Box::new_in(String::from(<span class=\"string\">\"Hello\"</span>), System);\n<span class=\"kw\">let </span>(non_null, alloc) = Box::into_non_null_with_allocator(x);\n<span class=\"kw\">unsafe </span>{\n    non_null.drop_in_place();\n    alloc.deallocate(non_null.cast::&lt;u8&gt;(), Layout::new::&lt;String&gt;());\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1507\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.as_mut_ptr\" class=\"fn\">as_mut_ptr</a>(b: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.pointer.html\">*mut T</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>box_as_ptr</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns a raw mutable pointer to the <code>Box</code>’s contents.</p>\n<p>The caller must ensure that the <code>Box</code> outlives the pointer this\nfunction returns, or else it will end up dangling.</p>\n<p>This method guarantees that for the purpose of the aliasing model, this method\ndoes not materialize a reference to the underlying memory, and thus the returned pointer\nwill remain valid when mixed with other calls to <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.as_ptr\" title=\"associated function alloc::boxed::Box::as_ptr\"><code>as_ptr</code></a> and <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.as_mut_ptr\" title=\"associated function alloc::boxed::Box::as_mut_ptr\"><code>as_mut_ptr</code></a>.\nNote that calling other methods that materialize references to the memory\nmay still invalidate this pointer.\nSee the example below for how this guarantee can be used.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<p>Due to the aliasing guarantee, the following code is legal:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_as_ptr)]\n\n</span><span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>b = Box::new(<span class=\"number\">0</span>);\n    <span class=\"kw\">let </span>ptr1 = Box::as_mut_ptr(<span class=\"kw-2\">&amp;mut </span>b);\n    ptr1.write(<span class=\"number\">1</span>);\n    <span class=\"kw\">let </span>ptr2 = Box::as_mut_ptr(<span class=\"kw-2\">&amp;mut </span>b);\n    ptr2.write(<span class=\"number\">2</span>);\n    <span class=\"comment\">// Notably, the write to `ptr2` did *not* invalidate `ptr1`:\n    </span>ptr1.write(<span class=\"number\">3</span>);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1556\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.as_ptr\" class=\"fn\">as_ptr</a>(b: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.pointer.html\">*const T</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>box_as_ptr</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns a raw pointer to the <code>Box</code>’s contents.</p>\n<p>The caller must ensure that the <code>Box</code> outlives the pointer this\nfunction returns, or else it will end up dangling.</p>\n<p>The caller must also ensure that the memory the pointer (non-transitively) points to\nis never written to (except inside an <code>UnsafeCell</code>) using this pointer or any pointer\nderived from it. If you need to mutate the contents of the <code>Box</code>, use <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.as_mut_ptr\" title=\"associated function alloc::boxed::Box::as_mut_ptr\"><code>as_mut_ptr</code></a>.</p>\n<p>This method guarantees that for the purpose of the aliasing model, this method\ndoes not materialize a reference to the underlying memory, and thus the returned pointer\nwill remain valid when mixed with other calls to <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.as_ptr\" title=\"associated function alloc::boxed::Box::as_ptr\"><code>as_ptr</code></a> and <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.as_mut_ptr\" title=\"associated function alloc::boxed::Box::as_mut_ptr\"><code>as_mut_ptr</code></a>.\nNote that calling other methods that materialize mutable references to the memory,\nas well as writing to this memory, may still invalidate this pointer.\nSee the example below for how this guarantee can be used.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<p>Due to the aliasing guarantee, the following code is legal:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_as_ptr)]\n\n</span><span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = Box::new(<span class=\"number\">0</span>);\n    <span class=\"kw\">let </span>ptr1 = Box::as_ptr(<span class=\"kw-2\">&amp;</span>v);\n    <span class=\"kw\">let </span>ptr2 = Box::as_mut_ptr(<span class=\"kw-2\">&amp;mut </span>v);\n    <span class=\"kw\">let </span>_val = ptr2.read();\n    <span class=\"comment\">// No write to this memory has happened yet, so `ptr1` is still valid.\n    </span><span class=\"kw\">let </span>_val = ptr1.read();\n    <span class=\"comment\">// However, once we do a write...\n    </span>ptr2.write(<span class=\"number\">1</span>);\n    <span class=\"comment\">// ... `ptr1` is no longer valid.\n    // This would be UB: let _val = ptr1.read();\n</span>}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.allocator\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1570\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.allocator\" class=\"fn\">allocator</a>(b: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;A</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns a reference to the underlying allocator.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Box::allocator(&amp;b)</code> instead of <code>b.allocator()</code>. This\nis so that there is no conflict with a method on the inner type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leak\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.26.0\">1.26.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1619-1621\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.leak\" class=\"fn\">leak</a>&lt;'a&gt;(b: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;'a mut T</a><div class=\"where\">where\n    A: 'a,</div></h4></section></summary><div class=\"docblock\"><p>Consumes and leaks the <code>Box</code>, returning a mutable reference,\n<code>&amp;'a mut T</code>.</p>\n<p>Note that the type <code>T</code> must outlive the chosen lifetime <code>'a</code>. If the type\nhas only static references, or none at all, then this may be chosen to be\n<code>'static</code>.</p>\n<p>This function is mainly useful for data that lives for the remainder of\nthe program’s life. Dropping the returned reference will cause a memory\nleak. If this is not acceptable, the reference should first be wrapped\nwith the <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.from_raw\" title=\"associated function alloc::boxed::Box::from_raw\"><code>Box::from_raw</code></a> function producing a <code>Box</code>. This <code>Box</code> can\nthen be dropped which will properly destroy <code>T</code> and release the\nallocated memory.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Box::leak(b)</code> instead of <code>b.leak()</code>. This\nis so that there is no conflict with a method on the inner type.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<p>Simple usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = Box::new(<span class=\"number\">41</span>);\n<span class=\"kw\">let </span>static_ref: <span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'static </span><span class=\"kw-2\">mut </span>usize = Box::leak(x);\n<span class=\"kw-2\">*</span>static_ref += <span class=\"number\">1</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>static_ref, <span class=\"number\">42</span>);</code></pre></div>\n<p>Unsized data:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].into_boxed_slice();\n<span class=\"kw\">let </span>static_ref = Box::leak(x);\nstatic_ref[<span class=\"number\">0</span>] = <span class=\"number\">4</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>static_ref, [<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_pin\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0, const unstable\">1.63.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/92521\" title=\"Tracking issue for const_box\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1658-1660\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.into_pin\" class=\"fn\">into_pin</a>(boxed: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;&gt;<div class=\"where\">where\n    A: 'static,</div></h4></section></summary><div class=\"docblock\"><p>Converts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <a href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\"><code>Unpin</code></a>, then\n<code>*boxed</code> will be pinned in memory and unable to be moved.</p>\n<p>This conversion does not allocate on the heap and happens in place.</p>\n<p>This is also available via <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\"><code>From</code></a>.</p>\n<p>Constructing and pinning a <code>Box</code> with <code>Box::into_pin(<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.new\" title=\"associated function alloc::boxed::Box::new\">Box::new</a>(x))</code>\ncan also be written more concisely using <code><a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.pin\" title=\"associated function alloc::boxed::Box::pin\">Box::pin</a>(x)</code>.\nThis <code>into_pin</code> method is useful if you already have a <code>Box&lt;T&gt;</code>, or you are\nconstructing a (pinned) <code>Box</code> in a different way than with <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.new\" title=\"associated function alloc::boxed::Box::new\"><code>Box::new</code></a>.</p>\n<h5 id=\"notes\"><a class=\"doc-anchor\" href=\"#notes\">§</a>Notes</h5>\n<p>It’s not recommended that crates add an impl like <code>From&lt;Box&lt;T&gt;&gt; for Pin&lt;T&gt;</code>,\nas it’ll introduce an ambiguity when calling <code>Pin::from</code>.\nA demonstration of such a poor impl is shown below.</p>\n\n<div class=\"example-wrap compile_fail\"><a href=\"#\" class=\"tooltip\" title=\"This example deliberately fails to compile\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">struct </span>Foo; <span class=\"comment\">// A type defined in this crate.\n</span><span class=\"kw\">impl </span>From&lt;Box&lt;()&gt;&gt; <span class=\"kw\">for </span>Pin&lt;Foo&gt; {\n    <span class=\"kw\">fn </span>from(<span class=\"kw\">_</span>: Box&lt;()&gt;) -&gt; Pin&lt;Foo&gt; {\n        Pin::new(Foo)\n    }\n}\n\n<span class=\"kw\">let </span>foo = Box::new(());\n<span class=\"kw\">let </span>bar = Pin::from(foo);</code></pre></div>\n</div></details></div></details>",0,"wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Box%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#397\">Source</a><a href=\"#impl-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#415-417\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.new_in\" class=\"fn\">new_in</a>(x: T, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Allocates memory in the given allocator then places <code>x</code> into it.</p>\n<p>This doesn’t actually allocate if <code>T</code> is zero-sized.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>five = Box::new_in(<span class=\"number\">5</span>, System);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#443-445\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.try_new_in\" class=\"fn\">try_new_in</a>(x: T, alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Allocates memory in the given allocator then places <code>x</code> into it,\nreturning an error if the allocation fails</p>\n<p>This doesn’t actually allocate if <code>T</code> is zero-sized.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>five = Box::try_new_in(<span class=\"number\">5</span>, System)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_uninit_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#478-480\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.new_uninit_in\" class=\"fn\">new_uninit_in</a>(alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new box with uninitialized contents in the provided allocator.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Box::&lt;u32, <span class=\"kw\">_</span>&gt;::new_uninit_in(System);\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>five.as_mut_ptr().write(<span class=\"number\">5</span>);\n\n    five.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_uninit_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#515-517\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.try_new_uninit_in\" class=\"fn\">try_new_uninit_in</a>(alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new box with uninitialized contents in the provided allocator,\nreturning an error if the allocation fails</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Box::&lt;u32, <span class=\"kw\">_</span>&gt;::try_new_uninit_in(System)<span class=\"question-mark\">?</span>;\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>five.as_mut_ptr().write(<span class=\"number\">5</span>);\n\n    five.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#552-554\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.new_zeroed_in\" class=\"fn\">new_zeroed_in</a>(alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Box</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes in the provided allocator.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>zero = Box::&lt;u32, <span class=\"kw\">_</span>&gt;::new_zeroed_in(System);\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_zeroed_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#589-591\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.try_new_zeroed_in\" class=\"fn\">try_new_zeroed_in</a>(alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Box</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes in the provided allocator,\nreturning an error if the allocation fails,</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.84.1/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>zero = Box::&lt;u32, <span class=\"kw\">_</span>&gt;::try_new_zeroed_in(System)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pin_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#613-615\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.pin_in\" class=\"fn\">pin_in</a>(x: T, alloc: A) -&gt; <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;&gt;<div class=\"where\">where\n    A: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Pin&lt;Box&lt;T, A&gt;&gt;</code>. If <code>T</code> does not implement <a href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\"><code>Unpin</code></a>, then\n<code>x</code> will be pinned in memory and unable to be moved.</p>\n<p>Constructing and pinning of the <code>Box</code> can also be done in two steps: <code>Box::pin_in(x, alloc)</code>\ndoes the same as <code><a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.into_pin\" title=\"associated function alloc::boxed::Box::into_pin\">Box::into_pin</a>(<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.new_in\" title=\"associated function alloc::boxed::Box::new_in\">Box::new_in</a>(x, alloc))</code>. Consider using\n<a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.into_pin\" title=\"associated function alloc::boxed::Box::into_pin\"><code>into_pin</code></a> if you already have a <code>Box&lt;T, A&gt;</code>, or if you want to\nconstruct a (pinned) <code>Box</code> in a different way than with <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#method.new_in\" title=\"associated function alloc::boxed::Box::new_in\"><code>Box::new_in</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_slice\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#624\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.into_boxed_slice\" class=\"fn\">into_boxed_slice</a>(boxed: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.slice.html\">[T]</a>, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>box_into_boxed_slice</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a <code>Box&lt;T&gt;</code> into a <code>Box&lt;[T]&gt;</code></p>\n<p>This conversion does not allocate on the heap and happens in place.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#642\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(boxed: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; T</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>box_into_inner</code>)</span></div></span></summary><div class=\"docblock\"><p>Consumes the <code>Box</code>, returning the wrapped value.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_into_inner)]\n\n</span><span class=\"kw\">let </span>c = Box::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert_eq!</span>(Box::into_inner(c), <span class=\"number\">5</span>);</code></pre></div>\n</div></details></div></details>",0,"wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Buf-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-Buf-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Buf for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: Buf + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.remaining\" class=\"method trait-impl\"><a href=\"#method.remaining\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remaining</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the number of bytes between the current position and the end of\nthe buffer. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chunk\" class=\"method trait-impl\"><a href=\"#method.chunk\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">chunk</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Returns a slice starting at the current position and of length between 0\nand <code>Buf::remaining()</code>. Note that this <em>can</em> return a shorter slice (this\nallows non-continuous internal representation). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chunks_vectored\" class=\"method trait-impl\"><a href=\"#method.chunks_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">chunks_vectored</a>&lt;'b&gt;(&amp;'b self, dst: &amp;mut [<a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.IoSlice.html\" title=\"struct wasmer_wasix::syscalls::io::IoSlice\">IoSlice</a>&lt;'b&gt;]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Fills <code>dst</code> with potentially multiple slices starting at <code>self</code>’s\ncurrent position. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.advance\" class=\"method trait-impl\"><a href=\"#method.advance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">advance</a>(&amp;mut self, cnt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Advance the internal cursor of the Buf <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_remaining\" class=\"method trait-impl\"><a href=\"#method.has_remaining\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_remaining</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if there are any more bytes to consume <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copy_to_slice\" class=\"method trait-impl\"><a href=\"#method.copy_to_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">copy_to_slice</a>(&amp;mut self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Copies bytes from <code>self</code> into <code>dst</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u8\" class=\"method trait-impl\"><a href=\"#method.get_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u8</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Gets an unsigned 8 bit integer from <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i8\" class=\"method trait-impl\"><a href=\"#method.get_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i8</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Gets a signed 8 bit integer from <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u16\" class=\"method trait-impl\"><a href=\"#method.get_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u16</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u16_le\" class=\"method trait-impl\"><a href=\"#method.get_u16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u16_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u16_ne\" class=\"method trait-impl\"><a href=\"#method.get_u16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u16_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i16\" class=\"method trait-impl\"><a href=\"#method.get_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i16</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i16_le\" class=\"method trait-impl\"><a href=\"#method.get_i16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i16_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i16_ne\" class=\"method trait-impl\"><a href=\"#method.get_i16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i16_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u32\" class=\"method trait-impl\"><a href=\"#method.get_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u32</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in the big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u32_le\" class=\"method trait-impl\"><a href=\"#method.get_u32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u32_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in the little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u32_ne\" class=\"method trait-impl\"><a href=\"#method.get_u32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u32_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i32\" class=\"method trait-impl\"><a href=\"#method.get_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i32</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i32_le\" class=\"method trait-impl\"><a href=\"#method.get_i32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i32_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i32_ne\" class=\"method trait-impl\"><a href=\"#method.get_i32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i32_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u64\" class=\"method trait-impl\"><a href=\"#method.get_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u64</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u64_le\" class=\"method trait-impl\"><a href=\"#method.get_u64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u64_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u64_ne\" class=\"method trait-impl\"><a href=\"#method.get_u64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u64_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i64\" class=\"method trait-impl\"><a href=\"#method.get_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i64</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i64_le\" class=\"method trait-impl\"><a href=\"#method.get_i64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i64_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i64_ne\" class=\"method trait-impl\"><a href=\"#method.get_i64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i64_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u128\" class=\"method trait-impl\"><a href=\"#method.get_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u128</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u128_le\" class=\"method trait-impl\"><a href=\"#method.get_u128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u128_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u128_ne\" class=\"method trait-impl\"><a href=\"#method.get_u128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u128_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i128\" class=\"method trait-impl\"><a href=\"#method.get_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i128</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i128_le\" class=\"method trait-impl\"><a href=\"#method.get_i128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i128_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i128_ne\" class=\"method trait-impl\"><a href=\"#method.get_i128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i128_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_uint\" class=\"method trait-impl\"><a href=\"#method.get_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_uint</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_uint_le\" class=\"method trait-impl\"><a href=\"#method.get_uint_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_uint_le</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_uint_ne\" class=\"method trait-impl\"><a href=\"#method.get_uint_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_uint_ne</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_int\" class=\"method trait-impl\"><a href=\"#method.get_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_int</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_int_le\" class=\"method trait-impl\"><a href=\"#method.get_int_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_int_le</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_int_ne\" class=\"method trait-impl\"><a href=\"#method.get_int_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_int_ne</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f32\" class=\"method trait-impl\"><a href=\"#method.get_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_f32</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f32_le\" class=\"method trait-impl\"><a href=\"#method.get_f32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_f32_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f32_ne\" class=\"method trait-impl\"><a href=\"#method.get_f32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_f32_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f64\" class=\"method trait-impl\"><a href=\"#method.get_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_f64</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f64_le\" class=\"method trait-impl\"><a href=\"#method.get_f64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_f64_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f64_ne\" class=\"method trait-impl\"><a href=\"#method.get_f64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_f64_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_copy_to_slice\" class=\"method trait-impl\"><a href=\"#method.try_copy_to_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_copy_to_slice</a>(&amp;mut self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Copies bytes from <code>self</code> into <code>dst</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u8\" class=\"method trait-impl\"><a href=\"#method.try_get_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u8</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 8 bit integer from <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i8\" class=\"method trait-impl\"><a href=\"#method.try_get_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i8</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i8.html\">i8</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 8 bit integer from <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u16\" class=\"method trait-impl\"><a href=\"#method.try_get_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u16</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u16_le\" class=\"method trait-impl\"><a href=\"#method.try_get_u16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u16_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u16_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_u16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u16_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i16\" class=\"method trait-impl\"><a href=\"#method.try_get_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i16</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i16_le\" class=\"method trait-impl\"><a href=\"#method.try_get_i16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i16_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an signed 16 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i16_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_i16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i16_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u32\" class=\"method trait-impl\"><a href=\"#method.try_get_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u32</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u32_le\" class=\"method trait-impl\"><a href=\"#method.try_get_u32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u32_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u32_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_u32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u32_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i32\" class=\"method trait-impl\"><a href=\"#method.try_get_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i32</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i32_le\" class=\"method trait-impl\"><a href=\"#method.try_get_i32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i32_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i32_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_i32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i32_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u64\" class=\"method trait-impl\"><a href=\"#method.try_get_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u64</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u64_le\" class=\"method trait-impl\"><a href=\"#method.try_get_u64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u64_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u64_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_u64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u64_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i64\" class=\"method trait-impl\"><a href=\"#method.try_get_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i64</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i64_le\" class=\"method trait-impl\"><a href=\"#method.try_get_i64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i64_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i64_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_i64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i64_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u128\" class=\"method trait-impl\"><a href=\"#method.try_get_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u128</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u128_le\" class=\"method trait-impl\"><a href=\"#method.try_get_u128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u128_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u128_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_u128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u128_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i128\" class=\"method trait-impl\"><a href=\"#method.try_get_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i128</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i128_le\" class=\"method trait-impl\"><a href=\"#method.try_get_i128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i128_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i128_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_i128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i128_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_uint\" class=\"method trait-impl\"><a href=\"#method.try_get_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_uint</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_uint_le\" class=\"method trait-impl\"><a href=\"#method.try_get_uint_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_uint_le</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_uint_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_uint_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_uint_ne</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_int\" class=\"method trait-impl\"><a href=\"#method.try_get_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_int</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_int_le\" class=\"method trait-impl\"><a href=\"#method.try_get_int_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_int_le</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_int_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_int_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_int_ne</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f32\" class=\"method trait-impl\"><a href=\"#method.try_get_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_f32</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f32.html\">f32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f32_le\" class=\"method trait-impl\"><a href=\"#method.try_get_f32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_f32_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f32.html\">f32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f32_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_f32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_f32_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f32.html\">f32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f64\" class=\"method trait-impl\"><a href=\"#method.try_get_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_f64</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f64_le\" class=\"method trait-impl\"><a href=\"#method.try_get_f64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_f64_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f64_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_f64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_f64_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copy_to_bytes\" class=\"method trait-impl\"><a href=\"#method.copy_to_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">copy_to_bytes</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Bytes.html\" title=\"struct wasmer_wasix::syscalls::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Consumes <code>len</code> bytes inside self and returns new instance of <code>Bytes</code>\nwith this data. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">take</a>(self, limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; Take&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adaptor which will read at most <code>limit</code> bytes from <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">chain</a>&lt;U&gt;(self, next: U) -&gt; Chain&lt;Self, U&gt;<div class=\"where\">where\n    U: Buf,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adaptor which will chain this buffer with another. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reader\" class=\"method trait-impl\"><a href=\"#method.reader\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reader</a>(self) -&gt; Reader&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Reader&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adaptor which implements the <code>Read</code> trait for <code>self</code>. <a>Read more</a></div></details></div></details>","Buf","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BufMut-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-BufMut-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; BufMut for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: BufMut + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.remaining_mut\" class=\"method trait-impl\"><a href=\"#method.remaining_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remaining_mut</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the number of bytes that can be written from the current\nposition until the end of the buffer is reached. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chunk_mut\" class=\"method trait-impl\"><a href=\"#method.chunk_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">chunk_mut</a>(&amp;mut self) -&gt; &amp;mut UninitSlice</h4></section></summary><div class='docblock'>Returns a mutable slice starting at the current BufMut position and of\nlength between 0 and <code>BufMut::remaining_mut()</code>. Note that this <em>can</em> be shorter than the\nwhole remainder of the buffer (this allows non-continuous implementation). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.advance_mut\" class=\"method trait-impl\"><a href=\"#method.advance_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">advance_mut</a>(&amp;mut self, cnt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Advance the internal cursor of the BufMut <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_slice\" class=\"method trait-impl\"><a href=\"#method.put_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor by the\nnumber of bytes written. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u8\" class=\"method trait-impl\"><a href=\"#method.put_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u8</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 8 bit integer to <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i8\" class=\"method trait-impl\"><a href=\"#method.put_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i8</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Writes a signed 8 bit integer to <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u16\" class=\"method trait-impl\"><a href=\"#method.put_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u16</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 16 bit integer to <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u16_le\" class=\"method trait-impl\"><a href=\"#method.put_u16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u16_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 16 bit integer to <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u16_ne\" class=\"method trait-impl\"><a href=\"#method.put_u16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u16_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 16 bit integer to <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i16\" class=\"method trait-impl\"><a href=\"#method.put_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i16</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Writes a signed 16 bit integer to <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i16_le\" class=\"method trait-impl\"><a href=\"#method.put_i16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i16_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Writes a signed 16 bit integer to <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i16_ne\" class=\"method trait-impl\"><a href=\"#method.put_i16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i16_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Writes a signed 16 bit integer to <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u32\" class=\"method trait-impl\"><a href=\"#method.put_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u32</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 32 bit integer to <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u32_le\" class=\"method trait-impl\"><a href=\"#method.put_u32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u32_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 32 bit integer to <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u32_ne\" class=\"method trait-impl\"><a href=\"#method.put_u32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u32_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 32 bit integer to <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i32\" class=\"method trait-impl\"><a href=\"#method.put_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i32</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Writes a signed 32 bit integer to <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i32_le\" class=\"method trait-impl\"><a href=\"#method.put_i32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i32_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Writes a signed 32 bit integer to <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i32_ne\" class=\"method trait-impl\"><a href=\"#method.put_i32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i32_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Writes a signed 32 bit integer to <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u64\" class=\"method trait-impl\"><a href=\"#method.put_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u64</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 64 bit integer to <code>self</code> in the big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u64_le\" class=\"method trait-impl\"><a href=\"#method.put_u64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u64_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 64 bit integer to <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u64_ne\" class=\"method trait-impl\"><a href=\"#method.put_u64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u64_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 64 bit integer to <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i64\" class=\"method trait-impl\"><a href=\"#method.put_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i64</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Writes a signed 64 bit integer to <code>self</code> in the big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i64_le\" class=\"method trait-impl\"><a href=\"#method.put_i64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i64_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Writes a signed 64 bit integer to <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i64_ne\" class=\"method trait-impl\"><a href=\"#method.put_i64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i64_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Writes a signed 64 bit integer to <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_remaining_mut\" class=\"method trait-impl\"><a href=\"#method.has_remaining_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_remaining_mut</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if there is space in <code>self</code> for more bytes. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method trait-impl\"><a href=\"#method.put\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put</a>&lt;T&gt;(&amp;mut self, src: T)<div class=\"where\">where\n    T: Buf,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor by the\nnumber of bytes written. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_bytes\" class=\"method trait-impl\"><a href=\"#method.put_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_bytes</a>(&amp;mut self, val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>, cnt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Put <code>cnt</code> bytes <code>val</code> into <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u128\" class=\"method trait-impl\"><a href=\"#method.put_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u128</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 128 bit integer to <code>self</code> in the big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u128_le\" class=\"method trait-impl\"><a href=\"#method.put_u128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u128_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 128 bit integer to <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_u128_ne\" class=\"method trait-impl\"><a href=\"#method.put_u128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_u128_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 128 bit integer to <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i128\" class=\"method trait-impl\"><a href=\"#method.put_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i128</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Writes a signed 128 bit integer to <code>self</code> in the big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i128_le\" class=\"method trait-impl\"><a href=\"#method.put_i128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i128_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Writes a signed 128 bit integer to <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_i128_ne\" class=\"method trait-impl\"><a href=\"#method.put_i128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_i128_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Writes a signed 128 bit integer to <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_uint\" class=\"method trait-impl\"><a href=\"#method.put_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_uint</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes an unsigned n-byte integer to <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_uint_le\" class=\"method trait-impl\"><a href=\"#method.put_uint_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_uint_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes an unsigned n-byte integer to <code>self</code> in the little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_uint_ne\" class=\"method trait-impl\"><a href=\"#method.put_uint_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_uint_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes an unsigned n-byte integer to <code>self</code> in the native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_int\" class=\"method trait-impl\"><a href=\"#method.put_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_int</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes low <code>nbytes</code> of a signed integer to <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_int_le\" class=\"method trait-impl\"><a href=\"#method.put_int_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_int_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes low <code>nbytes</code> of a signed integer to <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_int_ne\" class=\"method trait-impl\"><a href=\"#method.put_int_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_int_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes low <code>nbytes</code> of a signed integer to <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_f32\" class=\"method trait-impl\"><a href=\"#method.put_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_f32</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f32.html\">f32</a>)</h4></section></summary><div class='docblock'>Writes an IEEE754 single-precision (4 bytes) floating point number to\n<code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_f32_le\" class=\"method trait-impl\"><a href=\"#method.put_f32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_f32_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f32.html\">f32</a>)</h4></section></summary><div class='docblock'>Writes an IEEE754 single-precision (4 bytes) floating point number to\n<code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_f32_ne\" class=\"method trait-impl\"><a href=\"#method.put_f32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_f32_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f32.html\">f32</a>)</h4></section></summary><div class='docblock'>Writes an IEEE754 single-precision (4 bytes) floating point number to\n<code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_f64\" class=\"method trait-impl\"><a href=\"#method.put_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_f64</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Writes an IEEE754 double-precision (8 bytes) floating point number to\n<code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_f64_le\" class=\"method trait-impl\"><a href=\"#method.put_f64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_f64_le</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Writes an IEEE754 double-precision (8 bytes) floating point number to\n<code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_f64_ne\" class=\"method trait-impl\"><a href=\"#method.put_f64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">put_f64_ne</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Writes an IEEE754 double-precision (8 bytes) floating point number to\n<code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limit\" class=\"method trait-impl\"><a href=\"#method.limit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">limit</a>(self, limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; Limit&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adaptor which can write at most <code>limit</code> bytes to <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.writer\" class=\"method trait-impl\"><a href=\"#method.writer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">writer</a>(self) -&gt; Writer&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Writer&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adaptor which implements the <code>Write</code> trait for <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain_mut\" class=\"method trait-impl\"><a href=\"#method.chain_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">chain_mut</a>&lt;U&gt;(self, next: U) -&gt; Chain&lt;Self, U&gt;<div class=\"where\">where\n    U: BufMut,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adapter which will chain this buffer with another. <a>Read more</a></div></details></div></details>","BufMut","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BufRead-for-Box%3CB%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#206\">Source</a></span><a href=\"#impl-BufRead-for-Box%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"wasmer_wasix/syscalls/io/trait.BufRead.html\" title=\"trait wasmer_wasix::syscalls::io::BufRead\">BufRead</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"wasmer_wasix/syscalls/io/trait.BufRead.html\" title=\"trait wasmer_wasix::syscalls::io::BufRead\">BufRead</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fill_buf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#208\">Source</a><a href=\"#method.fill_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/io/trait.BufRead.html#tymethod.fill_buf\" class=\"fn\">fill_buf</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>], <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Returns the contents of the internal buffer, filling it with more data\nfrom the inner reader if it is empty. <a href=\"wasmer_wasix/syscalls/io/trait.BufRead.html#tymethod.fill_buf\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.consume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#213\">Source</a><a href=\"#method.consume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/io/trait.BufRead.html#tymethod.consume\" class=\"fn\">consume</a>(&amp;mut self, amt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Tells this buffer that <code>amt</code> bytes have been consumed from the buffer,\nso they should no longer be returned in calls to <code>read</code>. <a href=\"wasmer_wasix/syscalls/io/trait.BufRead.html#tymethod.consume\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_until\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#218\">Source</a><a href=\"#method.read_until\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/io/trait.BufRead.html#method.read_until\" class=\"fn\">read_until</a>(&amp;mut self, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF is reached. <a href=\"wasmer_wasix/syscalls/io/trait.BufRead.html#method.read_until\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_line\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#223\">Source</a><a href=\"#method.read_line\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/io/trait.BufRead.html#method.read_line\" class=\"fn\">read_line</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes until a newline (the <code>0xA</code> byte) is reached, and append\nthem to the provided <code>String</code> buffer. <a href=\"wasmer_wasix/syscalls/io/trait.BufRead.html#method.read_line\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_data_left\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#2335\">Source</a><a href=\"#method.has_data_left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/io/trait.BufRead.html#method.has_data_left\" class=\"fn\">has_data_left</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>buf_read_has_data_left</code>)</span></div></span><div class='docblock'>Checks if the underlying <code>Read</code> has any data left to be read. <a href=\"wasmer_wasix/syscalls/io/trait.BufRead.html#method.has_data_left\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_until\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.83.0\">1.83.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#2454\">Source</a></span><a href=\"#method.skip_until\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/io/trait.BufRead.html#method.skip_until\" class=\"fn\">skip_until</a>(&amp;mut self, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Skips all bytes until the delimiter <code>byte</code> or EOF is reached. <a href=\"wasmer_wasix/syscalls/io/trait.BufRead.html#method.skip_until\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#2560-2562\">Source</a></span><a href=\"#method.split\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/io/trait.BufRead.html#method.split\" class=\"fn\">split</a>(self, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Split.html\" title=\"struct wasmer_wasix::syscalls::io::Split\">Split</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Split&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator over the contents of this reader split on the byte\n<code>byte</code>. <a href=\"wasmer_wasix/syscalls/io/trait.BufRead.html#method.split\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lines\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#2597-2599\">Source</a></span><a href=\"#method.lines\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/io/trait.BufRead.html#method.lines\" class=\"fn\">lines</a>(self) -&gt; <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Lines.html\" title=\"struct wasmer_wasix::syscalls::io::Lines\">Lines</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Lines&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator over the lines of this reader. <a href=\"wasmer_wasix/syscalls/io/trait.BufRead.html#method.lines\">Read more</a></div></details></div></details>","BufRead","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1722\">Source</a></span><a href=\"#impl-Clone-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1738\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a new box with a <code>clone()</code> of this box’s contents.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = Box::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span>y = x.clone();\n\n<span class=\"comment\">// The value is the same\n</span><span class=\"macro\">assert_eq!</span>(x, y);\n\n<span class=\"comment\">// But they are unique objects\n</span><span class=\"macro\">assert_ne!</span>(<span class=\"kw-2\">&amp;*</span>x <span class=\"kw\">as </span><span class=\"kw-2\">*const </span>i32, <span class=\"kw-2\">&amp;*</span>y <span class=\"kw\">as </span><span class=\"kw-2\">*const </span>i32);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1765\">Source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Copies <code>source</code>’s contents into <code>self</code> without creating a new allocation.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = Box::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>y = Box::new(<span class=\"number\">10</span>);\n<span class=\"kw\">let </span>yp: <span class=\"kw-2\">*const </span>i32 = <span class=\"kw-2\">&amp;*</span>y;\n\ny.clone_from(<span class=\"kw-2\">&amp;</span>x);\n\n<span class=\"comment\">// The value is the same\n</span><span class=\"macro\">assert_eq!</span>(x, y);\n\n<span class=\"comment\">// And no allocation occurred\n</span><span class=\"macro\">assert_eq!</span>(yp, <span class=\"kw-2\">&amp;*</span>y);</code></pre></div>\n</div></details></div></details>","Clone","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Coroutine%3CR%3E-for-Box%3CG,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2085\">Source</a><a href=\"#impl-Coroutine%3CR%3E-for-Box%3CG,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;G, R, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html\" title=\"trait core::ops::coroutine::Coroutine\">Coroutine</a>&lt;R&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;G, A&gt;<div class=\"where\">where\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html\" title=\"trait core::ops::coroutine::Coroutine\">Coroutine</a>&lt;R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Yield\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2086\">Source</a><a href=\"#associatedtype.Yield\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#associatedtype.Yield\" class=\"associatedtype\">Yield</a> = &lt;G as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html\" title=\"trait core::ops::coroutine::Coroutine\">Coroutine</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#associatedtype.Yield\" title=\"type core::ops::coroutine::Coroutine::Yield\">Yield</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>coroutine_trait</code>)</span></div></span><div class='docblock'>The type of value this coroutine yields. <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#associatedtype.Yield\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Return\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2087\">Source</a><a href=\"#associatedtype.Return\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#associatedtype.Return\" class=\"associatedtype\">Return</a> = &lt;G as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html\" title=\"trait core::ops::coroutine::Coroutine\">Coroutine</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#associatedtype.Return\" title=\"type core::ops::coroutine::Coroutine::Return\">Return</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>coroutine_trait</code>)</span></div></span><div class='docblock'>The type of value this coroutine returns. <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#associatedtype.Return\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2089\">Source</a><a href=\"#method.resume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#tymethod.resume\" class=\"fn\">resume</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;G, A&gt;&gt;,\n    arg: R,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/enum.CoroutineState.html\" title=\"enum core::ops::coroutine::CoroutineState\">CoroutineState</a>&lt;&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;G, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html\" title=\"trait core::ops::coroutine::Coroutine\">Coroutine</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#associatedtype.Yield\" title=\"type core::ops::coroutine::Coroutine::Yield\">Yield</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;G, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html\" title=\"trait core::ops::coroutine::Coroutine\">Coroutine</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#associatedtype.Return\" title=\"type core::ops::coroutine::Coroutine::Return\">Return</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>coroutine_trait</code>)</span></div></span><div class='docblock'>Resumes the execution of this coroutine. <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/coroutine/trait.Coroutine.html#tymethod.resume\">Read more</a></div></details></div></details>","Coroutine<R>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1929\">Source</a></span><a href=\"#impl-Debug-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1930\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Box%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1688\">Source</a></span><a href=\"#impl-Default-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1691\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <code>Box&lt;T&gt;</code>, with the <code>Default</code> value for T.</p>\n</div></details></div></details>","Default","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1946\">Source</a></span><a href=\"#impl-Deref-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"wasmer_wasix/syscalls/trait.Deref.html\" title=\"trait wasmer_wasix::syscalls::Deref\">Deref</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1947\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"wasmer_wasix/syscalls/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = T</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1949\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1955\">Source</a></span><a href=\"#impl-DerefMut-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"wasmer_wasix/syscalls/trait.DerefMut.html\" title=\"trait wasmer_wasix::syscalls::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1956\">Source</a><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/impls.rs.html#1965-1969\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/impls.rs.html#1965-1969\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1922\">Source</a></span><a href=\"#impl-Display-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1923\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DoubleEndedFallibleIterator-for-Box%3CI%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#1006\">Source</a><a href=\"#impl-DoubleEndedFallibleIterator-for-Box%3CI%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.DoubleEndedFallibleIterator.html\" title=\"trait fallible_iterator::DoubleEndedFallibleIterator\">DoubleEndedFallibleIterator</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.DoubleEndedFallibleIterator.html\" title=\"trait fallible_iterator::DoubleEndedFallibleIterator\">DoubleEndedFallibleIterator</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_back\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#1008\">Source</a><a href=\"#method.next_back\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.DoubleEndedFallibleIterator.html#tymethod.next_back\" class=\"fn\">next_back</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, &lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Advances the end of the iterator, returning the last value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rfold\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#1020-1023\">Source</a><a href=\"#method.rfold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.DoubleEndedFallibleIterator.html#method.rfold\" class=\"fn\">rfold</a>&lt;B, F&gt;(self, init: B, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Applies a function over the elements of the iterator in reverse order, producing a single final value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_rfold\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#1032-1036\">Source</a><a href=\"#method.try_rfold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.DoubleEndedFallibleIterator.html#method.try_rfold\" class=\"fn\">try_rfold</a>&lt;B, E, F&gt;(&amp;mut self, init: B, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, E&gt;,</div></h4></section></summary><div class='docblock'>Applies a function over the elements of the iterator in reverse, producing a single final value. <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.DoubleEndedFallibleIterator.html#method.try_rfold\">Read more</a></div></details></div></details>","DoubleEndedFallibleIterator","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DoubleEndedIterator-for-Box%3CI,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#61\">Source</a></span><a href=\"#impl-DoubleEndedIterator-for-Box%3CI,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;I, A&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_back\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#62\">Source</a><a href=\"#method.next_back\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#tymethod.next_back\" class=\"fn\">next_back</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class='docblock'>Removes and returns an element from the end of the iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#tymethod.next_back\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_back\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#65\">Source</a><a href=\"#method.nth_back\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.nth_back\" class=\"fn\">nth_back</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class='docblock'>Returns the <code>n</code>th element from the end of the iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.nth_back\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.advance_back_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/double_ended.rs.html#138\">Source</a><a href=\"#method.advance_back_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.advance_back_by\" class=\"fn\">advance_back_by</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_advance_by</code>)</span></div></span><div class='docblock'>Advances the iterator from the back by <code>n</code> elements. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.advance_back_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_rfold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/double_ended.rs.html#230-234\">Source</a></span><a href=\"#method.try_rfold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.try_rfold\" class=\"fn\">try_rfold</a>&lt;B, F, R&gt;(&amp;mut self, init: B, f: F) -&gt; R<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = B&gt;,</div></h4></section></summary><div class='docblock'>This is the reverse version of <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_fold\" title=\"method core::iter::traits::iterator::Iterator::try_fold\"><code>Iterator::try_fold()</code></a>: it takes\nelements starting from the back of the iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.try_rfold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rfold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/double_ended.rs.html#301-304\">Source</a></span><a href=\"#method.rfold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.rfold\" class=\"fn\">rfold</a>&lt;B, F&gt;(self, init: B, f: F) -&gt; B<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>An iterator method that reduces the iterator’s elements to a single,\nfinal value, starting from the back. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.rfold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rfind\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/double_ended.rs.html#356-359\">Source</a></span><a href=\"#method.rfind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.rfind\" class=\"fn\">rfind</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Searches for an element of an iterator from the back that satisfies a predicate. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.rfind\">Read more</a></div></details></div></details>","DoubleEndedIterator","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1670\">Source</a></span><a href=\"#impl-Drop-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1672\">Source</a><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodeAsVarULE%3CT%3E-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-EncodeAsVarULE%3CT%3E-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; EncodeAsVarULE&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: VarULE + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_as_slices\" class=\"method trait-impl\"><a href=\"#method.encode_var_ule_as_slices\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_var_ule_as_slices</a>&lt;R&gt;(&amp;self, cb: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>]]) -&gt; R) -&gt; R</h4></section></summary><div class='docblock'>Calls <code>cb</code> with a piecewise list of byte slices that when concatenated\nproduce the memory pattern of the corresponding instance of <code>T</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_len\" class=\"method trait-impl\"><a href=\"#method.encode_var_ule_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_var_ule_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the length, in bytes, of the corresponding [<code>VarULE</code>] type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_write\" class=\"method trait-impl\"><a href=\"#method.encode_var_ule_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_var_ule_write</a>(&amp;self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Write the corresponding [<code>VarULE</code>] type to the <code>dst</code> buffer. <code>dst</code> should\nbe the size of [<code>Self::encode_var_ule_len()</code>]</div></details></div></details>","EncodeAsVarULE<T>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Error-for-Box%3CE%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2117\">Source</a></span><a href=\"#impl-Error-for-Box%3CE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;E&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.description\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2119\">Source</a><a href=\"#method.description\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html#method.description\" class=\"fn\">description</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.42.0: use the Display impl or to_string()</span></div></span><div class='docblock'> <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html#method.description\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cause\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2124\">Source</a><a href=\"#method.cause\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html#method.cause\" class=\"fn\">cause</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.33.0: replaced by Error::source, which can support downcasting</span></div></span></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.source\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2128\">Source</a><a href=\"#method.source\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html#method.source\" class=\"fn\">source</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns the lower-level source of this error, if any. <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html#method.source\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.provide\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2132\">Source</a><a href=\"#method.provide\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html#method.provide\" class=\"fn\">provide</a>&lt;'b&gt;(&amp;'b self, request: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/error/struct.Request.html\" title=\"struct core::error::Request\">Request</a>&lt;'b&gt;)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>error_generic_member_access</code>)</span></div></span><div class='docblock'>Provides type-based access to context intended for error reports. <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html#method.provide\">Read more</a></div></details></div></details>","Error","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExactSizeIterator-for-Box%3CI,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#70\">Source</a></span><a href=\"#impl-ExactSizeIterator-for-Box%3CI,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;I, A&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#71\">Source</a><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/exact_size/trait.ExactSizeIterator.html#method.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the exact remaining length of the iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/exact_size/trait.ExactSizeIterator.html#method.len\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#74\">Source</a><a href=\"#method.is_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/exact_size/trait.ExactSizeIterator.html#method.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>exact_size_is_empty</code>)</span></div></span><div class='docblock'>Returns <code>true</code> if the iterator is empty. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/exact_size/trait.ExactSizeIterator.html#method.is_empty\">Read more</a></div></details></div></details>","ExactSizeIterator","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FallibleIterator-for-Box%3CI%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#985\">Source</a><a href=\"#impl-FallibleIterator-for-Box%3CI%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#986\">Source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = &lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a></h4></section></summary><div class='docblock'>The type being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#987\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a></h4></section></summary><div class='docblock'>The error type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#990\">Source</a><a href=\"#method.next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#tymethod.next\" class=\"fn\">next</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, &lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Advances the iterator and returns the next value. <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#tymethod.next\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#995\">Source</a><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Returns bounds on the remaining length of the iterator. <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.size_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#1000\">Source</a><a href=\"#method.nth\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.nth\" class=\"fn\">nth</a>(\n    &amp;mut self,\n    n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, &lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Returns the <code>n</code>th element of the iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#148-150\">Source</a><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.count\" class=\"fn\">count</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Consumes the iterator, returning the number of remaining items.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#157-159\">Source</a><a href=\"#method.last\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.last\" class=\"fn\">last</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns the last element of the iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.step_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#182-184\">Source</a><a href=\"#method.step_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.step_by\" class=\"fn\">step_by</a>(self, step: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.StepBy.html\" title=\"struct fallible_iterator::StepBy\">StepBy</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator starting at the same point, but stepping by the given amount at each iteration. <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.step_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#197-200\">Source</a><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.chain\" class=\"fn\">chain</a>&lt;I&gt;(self, it: I) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Chain.html\" title=\"struct fallible_iterator::Chain\">Chain</a>&lt;Self, I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>, Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator which yields the elements of this iterator followed\nby another.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#212-215\">Source</a><a href=\"#method.zip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.zip\" class=\"fn\">zip</a>&lt;I&gt;(\n    self,\n    o: I,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Zip.html\" title=\"struct fallible_iterator::Zip\">Zip</a>&lt;Self, &lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html#associatedtype.IntoFallibleIter\" title=\"type fallible_iterator::IntoFallibleIterator::IntoFallibleIter\">IntoFallibleIter</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator that yields pairs of this iterator’s and another\niterator’s values.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#223-226\">Source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.map\" class=\"fn\">map</a>&lt;F, B&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Map.html\" title=\"struct fallible_iterator::Map\">Map</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator which applies a fallible transform to the elements\nof the underlying iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.for_each\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#233-236\">Source</a><a href=\"#method.for_each\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.for_each\" class=\"fn\">for_each</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Calls a fallible closure on each element of an iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#245-248\">Source</a><a href=\"#method.filter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.filter\" class=\"fn\">filter</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Filter.html\" title=\"struct fallible_iterator::Filter\">Filter</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator which uses a predicate to determine which values\nshould be yielded. The predicate may fail; such failures are passed to\nthe caller.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#256-259\">Source</a><a href=\"#method.filter_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.filter_map\" class=\"fn\">filter_map</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.FilterMap.html\" title=\"struct fallible_iterator::FilterMap\">FilterMap</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator which both filters and maps. The closure may fail;\nsuch failures are passed along to the consumer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enumerate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#267-269\">Source</a><a href=\"#method.enumerate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.enumerate\" class=\"fn\">enumerate</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Enumerate.html\" title=\"struct fallible_iterator::Enumerate\">Enumerate</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator which yields the current iteration count as well\nas the value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peekable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#277-279\">Source</a><a href=\"#method.peekable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.peekable\" class=\"fn\">peekable</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Peekable.html\" title=\"struct fallible_iterator::Peekable\">Peekable</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator that can peek at the next element without consuming\nit.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_while\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#289-292\">Source</a><a href=\"#method.skip_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.skip_while\" class=\"fn\">skip_while</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.SkipWhile.html\" title=\"struct fallible_iterator::SkipWhile\">SkipWhile</a>&lt;Self, P&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator that skips elements based on a predicate.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_while\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#303-306\">Source</a><a href=\"#method.take_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.take_while\" class=\"fn\">take_while</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.TakeWhile.html\" title=\"struct fallible_iterator::TakeWhile\">TakeWhile</a>&lt;Self, P&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator that yields elements based on a predicate.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#317-319\">Source</a><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.skip\" class=\"fn\">skip</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Skip.html\" title=\"struct fallible_iterator::Skip\">Skip</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator which skips the first <code>n</code> values of this iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#327-329\">Source</a><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.take\" class=\"fn\">take</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Take.html\" title=\"struct fallible_iterator::Take\">Take</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator that yields only the first <code>n</code> values of this\niterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.scan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#340-343\">Source</a><a href=\"#method.scan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.scan\" class=\"fn\">scan</a>&lt;St, B, F&gt;(self, initial_state: St, f: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Scan.html\" title=\"struct fallible_iterator::Scan\">Scan</a>&lt;Self, St, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut St</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator which applies a stateful map to values of this\niterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flat_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#354-358\">Source</a><a href=\"#method.flat_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.flat_map\" class=\"fn\">flat_map</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.FlatMap.html\" title=\"struct fallible_iterator::FlatMap\">FlatMap</a>&lt;Self, U, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;U, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator which maps this iterator’s elements to iterators, yielding those iterators’ values.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flatten\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#368-371\">Source</a><a href=\"#method.flatten\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.flatten\" class=\"fn\">flatten</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Flatten.html\" title=\"struct fallible_iterator::Flatten\">Flatten</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator which flattens an iterator of iterators, yielding those iterators’ values.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fuse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#386-388\">Source</a><a href=\"#method.fuse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.fuse\" class=\"fn\">fuse</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Fuse.html\" title=\"struct fallible_iterator::Fuse\">Fuse</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator which yields this iterator’s elements and ends after\nthe first <code>Ok(None)</code>. <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.fuse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inspect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#398-401\">Source</a><a href=\"#method.inspect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.inspect\" class=\"fn\">inspect</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Inspect.html\" title=\"struct fallible_iterator::Inspect\">Inspect</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns an iterator which passes each element to a closure before returning it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#411-413\">Source</a><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Borrow an iterator rather than consuming it. <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#422-425\">Source</a><a href=\"#method.collect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.collect\" class=\"fn\">collect</a>&lt;T&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transforms the iterator into a collection. <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.collect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partition\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#432-436\">Source</a><a href=\"#method.partition\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.partition\" class=\"fn\">partition</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.tuple.html\">(B, B)</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Transforms the iterator into two collections, partitioning elements by a closure.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#456-459\">Source</a><a href=\"#method.fold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.fold\" class=\"fn\">fold</a>&lt;B, F&gt;(self, init: B, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Applies a function over the elements of the iterator, producing a single\nfinal value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#468-472\">Source</a><a href=\"#method.try_fold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.try_fold\" class=\"fn\">try_fold</a>&lt;B, E, F&gt;(&amp;mut self, init: B, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, E&gt;,</div></h4></section></summary><div class='docblock'>Applies a function over the elements of the iterator, producing a single final value. <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.try_fold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#482-485\">Source</a><a href=\"#method.all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.all\" class=\"fn\">all</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Determines if all elements of this iterator match a predicate.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#499-502\">Source</a><a href=\"#method.any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.any\" class=\"fn\">any</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Determines if any element of this iterator matches a predicate.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#516-519\">Source</a><a href=\"#method.find\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.find\" class=\"fn\">find</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns the first element of the iterator that matches a predicate.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#533-536\">Source</a><a href=\"#method.find_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.find_map\" class=\"fn\">find_map</a>&lt;B, F&gt;(&amp;mut self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Applies a function to the elements of the iterator, returning the first non-<code>None</code> result.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.position\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#545-548\">Source</a><a href=\"#method.position\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.position\" class=\"fn\">position</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns the position of the first element of this iterator that matches\na predicate. The predicate may fail; such failures are returned to the\ncaller.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#562-565\">Source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.max\" class=\"fn\">max</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class='docblock'>Returns the maximal element of the iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_by_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#573-577\">Source</a><a href=\"#method.max_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.max_by_key\" class=\"fn\">max_by_key</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns the element of the iterator which gives the maximum value from\nthe function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#597-600\">Source</a><a href=\"#method.max_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.max_by\" class=\"fn\">max_by</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns the element that gives the maximum value with respect to the function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#619-622\">Source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.min\" class=\"fn\">min</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class='docblock'>Returns the minimal element of the iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_by_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#630-634\">Source</a><a href=\"#method.min_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.min_by_key\" class=\"fn\">min_by_key</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns the element of the iterator which gives the minimum value from\nthe function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#654-657\">Source</a><a href=\"#method.min_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.min_by\" class=\"fn\">min_by</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns the element that gives the minimum value with respect to the function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rev\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#677-679\">Source</a><a href=\"#method.rev\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.rev\" class=\"fn\">rev</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Rev.html\" title=\"struct fallible_iterator::Rev\">Rev</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.DoubleEndedFallibleIterator.html\" title=\"trait fallible_iterator::DoubleEndedFallibleIterator\">DoubleEndedFallibleIterator</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator that yields this iterator’s items in the opposite\norder.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#686-690\">Source</a><a href=\"#method.unzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.unzip\" class=\"fn\">unzip</a>&lt;A, B, FromA, FromB&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.tuple.html\">(FromA, FromB)</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>Converts an iterator of pairs into a pair of containers.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#706-709\">Source</a><a href=\"#method.cloned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.cloned\" class=\"fn\">cloned</a>&lt;'a, T&gt;(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Cloned.html\" title=\"struct fallible_iterator::Cloned\">Cloned</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;'a T</a>&gt;,\n    T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator which clones all of its elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cycle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#716-718\">Source</a><a href=\"#method.cycle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.cycle\" class=\"fn\">cycle</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Cycle.html\" title=\"struct fallible_iterator::Cycle\">Cycle</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator which repeats this iterator endlessly.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#729-733\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.cmp\" class=\"fn\">cmp</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>, Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class='docblock'>Lexicographically compares the elements of this iterator to that of\nanother.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#753-757\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.partial_cmp\" class=\"fn\">partial_cmp</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::IntoFallibleIterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Lexicographically compares the elements of this iterator to that of\nanother.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#777-781\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.eq\" class=\"fn\">eq</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::IntoFallibleIterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Determines if the elements of this iterator are equal to those of\nanother.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#801-805\">Source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.ne\" class=\"fn\">ne</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::IntoFallibleIterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Determines if the elements of this iterator are not equal to those of\nanother.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#825-829\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.lt\" class=\"fn\">lt</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::IntoFallibleIterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Determines if the elements of this iterator are lexicographically less\nthan those of another.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#851-855\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.le\" class=\"fn\">le</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::IntoFallibleIterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Determines if the elements of this iterator are lexicographically less\nthan or equal to those of another.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#877-881\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.gt\" class=\"fn\">gt</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::IntoFallibleIterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Determines if the elements of this iterator are lexicographically\ngreater than those of another.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#903-907\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.ge\" class=\"fn\">ge</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.IntoFallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::IntoFallibleIterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Determines if the elements of this iterator are lexicographically\ngreater than or equal to those of another.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iterator\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#928-930\">Source</a><a href=\"#method.iterator\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.iterator\" class=\"fn\">iterator</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Iterator.html\" title=\"struct fallible_iterator::Iterator\">Iterator</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns a normal (non-fallible) iterator over <code>Result&lt;Item, Error&gt;</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_err\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#938-941\">Source</a><a href=\"#method.map_err\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.map_err\" class=\"fn\">map_err</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.MapErr.html\" title=\"struct fallible_iterator::MapErr\">MapErr</a>&lt;Self, F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>) -&gt; B,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator which applies a transform to the errors of the\nunderlying iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fallible-iterator/0.2/src/fallible_iterator/lib.rs.html#948-951\">Source</a><a href=\"#method.unwrap\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#method.unwrap\" class=\"fn\">unwrap</a>&lt;T&gt;(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/struct.Unwrap.html\" title=\"struct fallible_iterator::Unwrap\">Unwrap</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&lt;Item = T&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://docs.rs/fallible-iterator/0.2/fallible_iterator/trait.FallibleIterator.html#associatedtype.Error\" title=\"type fallible_iterator::FallibleIterator::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator which unwraps all of its elements.</div></details></div></details>","FallibleIterator","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Fn%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1984\">Source</a></span><a href=\"#impl-Fn%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>&lt;Args&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Tuple.html\" title=\"trait core::marker::Tuple\">Tuple</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>&lt;Args&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1985\">Source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">extern &quot;rust-call&quot; fn <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.Fn.html#tymethod.call\" class=\"fn\">call</a>(\n    &amp;self,\n    args: Args,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html#associatedtype.Output\" title=\"type core::ops::function::FnOnce::Output\">Output</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>fn_traits</code>)</span></div></span><div class='docblock'>Performs the call operation.</div></details></div></details>","Fn<Args>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FnMut%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1977\">Source</a></span><a href=\"#impl-FnMut%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>&lt;Args&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Tuple.html\" title=\"trait core::marker::Tuple\">Tuple</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>&lt;Args&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1978\">Source</a><a href=\"#method.call_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">extern &quot;rust-call&quot; fn <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html#tymethod.call_mut\" class=\"fn\">call_mut</a>(\n    &amp;mut self,\n    args: Args,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html#associatedtype.Output\" title=\"type core::ops::function::FnOnce::Output\">Output</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>fn_traits</code>)</span></div></span><div class='docblock'>Performs the call operation.</div></details></div></details>","FnMut<Args>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FnOnce%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1968\">Source</a></span><a href=\"#impl-FnOnce%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>&lt;Args&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Tuple.html\" title=\"trait core::marker::Tuple\">Tuple</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>&lt;Args&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1969\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html#associatedtype.Output\" title=\"type core::ops::function::FnOnce::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after the call operator is used.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_once\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1971\">Source</a><a href=\"#method.call_once\" class=\"anchor\">§</a><h4 class=\"code-header\">extern &quot;rust-call&quot; fn <a href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html#tymethod.call_once\" class=\"fn\">call_once</a>(\n    self,\n    args: Args,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnOnce.html#associatedtype.Output\" title=\"type core::ops::function::FnOnce::Output\">Output</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>fn_traits</code>)</span></div></span><div class='docblock'>Performs the call operation.</div></details></div></details>","FnOnce<Args>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26str%3E-for-Box%3Cdyn+Error%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#686\">Source</a></span><a href=\"#impl-From%3C%26str%3E-for-Box%3Cdyn+Error%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#701\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(err: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'a&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\" title=\"primitive str\"><code>str</code></a> into a box of dyn <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\"><code>Error</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::error::Error;\n<span class=\"kw\">use </span>std::mem;\n\n<span class=\"kw\">let </span>a_str_error = <span class=\"string\">\"a str error\"</span>;\n<span class=\"kw\">let </span>a_boxed_error = Box::&lt;<span class=\"kw\">dyn </span>Error&gt;::from(a_str_error);\n<span class=\"macro\">assert!</span>(mem::size_of::&lt;Box&lt;<span class=\"kw\">dyn </span>Error&gt;&gt;() == mem::size_of_val(<span class=\"kw-2\">&amp;</span>a_boxed_error))</code></pre></div>\n</div></details></div></details>","From<&str>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26str%3E-for-Box%3Cdyn+Error+%2B+Send+%2B+Sync%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#662\">Source</a></span><a href=\"#impl-From%3C%26str%3E-for-Box%3Cdyn+Error+%2B+Send+%2B+Sync%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#679\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(err: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'a&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\" title=\"primitive str\"><code>str</code></a> into a box of dyn <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\"><code>Error</code></a> + <a href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\"><code>Send</code></a> + <a href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\"><code>Sync</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::error::Error;\n<span class=\"kw\">use </span>std::mem;\n\n<span class=\"kw\">let </span>a_str_error = <span class=\"string\">\"a str error\"</span>;\n<span class=\"kw\">let </span>a_boxed_error = Box::&lt;<span class=\"kw\">dyn </span>Error + Send + Sync&gt;::from(a_str_error);\n<span class=\"macro\">assert!</span>(\n    mem::size_of::&lt;Box&lt;<span class=\"kw\">dyn </span>Error + Send + Sync&gt;&gt;() == mem::size_of_val(<span class=\"kw-2\">&amp;</span>a_boxed_error))</code></pre></div>\n</div></details></div></details>","From<&str>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCow%3C'b,+str%3E%3E-for-Box%3Cdyn+Error%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#730\">Source</a></span><a href=\"#impl-From%3CCow%3C'b,+str%3E%3E-for-Box%3Cdyn+Error%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Cow.html\" title=\"enum wasmer_wasix::syscalls::Cow\">Cow</a>&lt;'b, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#744\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(err: <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Cow.html\" title=\"enum wasmer_wasix::syscalls::Cow\">Cow</a>&lt;'b, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'a&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"wasmer_wasix/syscalls/enum.Cow.html\" title=\"enum wasmer_wasix::syscalls::Cow\"><code>Cow</code></a> into a box of dyn <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\"><code>Error</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::error::Error;\n<span class=\"kw\">use </span>std::mem;\n<span class=\"kw\">use </span>std::borrow::Cow;\n\n<span class=\"kw\">let </span>a_cow_str_error = Cow::from(<span class=\"string\">\"a str error\"</span>);\n<span class=\"kw\">let </span>a_boxed_error = Box::&lt;<span class=\"kw\">dyn </span>Error&gt;::from(a_cow_str_error);\n<span class=\"macro\">assert!</span>(mem::size_of::&lt;Box&lt;<span class=\"kw\">dyn </span>Error&gt;&gt;() == mem::size_of_val(<span class=\"kw-2\">&amp;</span>a_boxed_error))</code></pre></div>\n</div></details></div></details>","From<Cow<'b, str>>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCow%3C'b,+str%3E%3E-for-Box%3Cdyn+Error+%2B+Send+%2B+Sync%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#708\">Source</a></span><a href=\"#impl-From%3CCow%3C'b,+str%3E%3E-for-Box%3Cdyn+Error+%2B+Send+%2B+Sync%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Cow.html\" title=\"enum wasmer_wasix::syscalls::Cow\">Cow</a>&lt;'b, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#723\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(err: <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Cow.html\" title=\"enum wasmer_wasix::syscalls::Cow\">Cow</a>&lt;'b, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'a&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"wasmer_wasix/syscalls/enum.Cow.html\" title=\"enum wasmer_wasix::syscalls::Cow\"><code>Cow</code></a> into a box of dyn <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\"><code>Error</code></a> + <a href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\"><code>Send</code></a> + <a href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\"><code>Sync</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::error::Error;\n<span class=\"kw\">use </span>std::mem;\n<span class=\"kw\">use </span>std::borrow::Cow;\n\n<span class=\"kw\">let </span>a_cow_str_error = Cow::from(<span class=\"string\">\"a str error\"</span>);\n<span class=\"kw\">let </span>a_boxed_error = Box::&lt;<span class=\"kw\">dyn </span>Error + Send + Sync&gt;::from(a_cow_str_error);\n<span class=\"macro\">assert!</span>(\n    mem::size_of::&lt;Box&lt;<span class=\"kw\">dyn </span>Error + Send + Sync&gt;&gt;() == mem::size_of_val(<span class=\"kw-2\">&amp;</span>a_boxed_error))</code></pre></div>\n</div></details></div></details>","From<Cow<'b, str>>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CE%3E-for-Box%3Cdyn+Error%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#524\">Source</a></span><a href=\"#impl-From%3CE%3E-for-Box%3Cdyn+Error%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;E&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'a&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#550\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(err: E) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'a&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a type of <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\"><code>Error</code></a> into a box of dyn <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\"><code>Error</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::error::Error;\n<span class=\"kw\">use </span>std::fmt;\n<span class=\"kw\">use </span>std::mem;\n\n<span class=\"attr\">#[derive(Debug)]\n</span><span class=\"kw\">struct </span>AnError;\n\n<span class=\"kw\">impl </span>fmt::Display <span class=\"kw\">for </span>AnError {\n    <span class=\"kw\">fn </span>fmt(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, f: <span class=\"kw-2\">&amp;mut </span>fmt::Formatter&lt;<span class=\"lifetime\">'_</span>&gt;) -&gt; fmt::Result {\n        <span class=\"macro\">write!</span>(f, <span class=\"string\">\"An error\"</span>)\n    }\n}\n\n<span class=\"kw\">impl </span>Error <span class=\"kw\">for </span>AnError {}\n\n<span class=\"kw\">let </span>an_error = AnError;\n<span class=\"macro\">assert!</span>(<span class=\"number\">0 </span>== mem::size_of_val(<span class=\"kw-2\">&amp;</span>an_error));\n<span class=\"kw\">let </span>a_boxed_error = Box::&lt;<span class=\"kw\">dyn </span>Error&gt;::from(an_error);\n<span class=\"macro\">assert!</span>(mem::size_of::&lt;Box&lt;<span class=\"kw\">dyn </span>Error&gt;&gt;() == mem::size_of_val(<span class=\"kw-2\">&amp;</span>a_boxed_error))</code></pre></div>\n</div></details></div></details>","From<E>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CE%3E-for-Box%3Cdyn+Error+%2B+Send+%2B+Sync%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#557\">Source</a></span><a href=\"#impl-From%3CE%3E-for-Box%3Cdyn+Error+%2B+Send+%2B+Sync%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;E&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'a&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#589\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(err: E) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'a&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a type of <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\"><code>Error</code></a> + <a href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\"><code>Send</code></a> + <a href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\"><code>Sync</code></a> into a box of\ndyn <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\"><code>Error</code></a> + <a href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\"><code>Send</code></a> + <a href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\"><code>Sync</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::error::Error;\n<span class=\"kw\">use </span>std::fmt;\n<span class=\"kw\">use </span>std::mem;\n\n<span class=\"attr\">#[derive(Debug)]\n</span><span class=\"kw\">struct </span>AnError;\n\n<span class=\"kw\">impl </span>fmt::Display <span class=\"kw\">for </span>AnError {\n    <span class=\"kw\">fn </span>fmt(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, f: <span class=\"kw-2\">&amp;mut </span>fmt::Formatter&lt;<span class=\"lifetime\">'_</span>&gt;) -&gt; fmt::Result {\n        <span class=\"macro\">write!</span>(f, <span class=\"string\">\"An error\"</span>)\n    }\n}\n\n<span class=\"kw\">impl </span>Error <span class=\"kw\">for </span>AnError {}\n\n<span class=\"kw\">unsafe impl </span>Send <span class=\"kw\">for </span>AnError {}\n\n<span class=\"kw\">unsafe impl </span>Sync <span class=\"kw\">for </span>AnError {}\n\n<span class=\"kw\">let </span>an_error = AnError;\n<span class=\"macro\">assert!</span>(<span class=\"number\">0 </span>== mem::size_of_val(<span class=\"kw-2\">&amp;</span>an_error));\n<span class=\"kw\">let </span>a_boxed_error = Box::&lt;<span class=\"kw\">dyn </span>Error + Send + Sync&gt;::from(an_error);\n<span class=\"macro\">assert!</span>(\n    mem::size_of::&lt;Box&lt;<span class=\"kw\">dyn </span>Error + Send + Sync&gt;&gt;() == mem::size_of_val(<span class=\"kw-2\">&amp;</span>a_boxed_error))</code></pre></div>\n</div></details></div></details>","From<E>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-Box%3Cdyn+Error%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/anyhow/1.0.99/src/anyhow/error.rs.html#1193\">Source</a><a href=\"#impl-From%3CError%3E-for-Box%3Cdyn+Error%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.99/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/anyhow/1.0.99/src/anyhow/error.rs.html#1195\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(error: <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.99/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-Box%3Cdyn+Error+%2B+Send%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/anyhow/1.0.99/src/anyhow/error.rs.html#1185\">Source</a><a href=\"#impl-From%3CError%3E-for-Box%3Cdyn+Error+%2B+Send%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.99/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/anyhow/1.0.99/src/anyhow/error.rs.html#1187\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(error: <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.99/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-Box%3Cdyn+Error+%2B+Send+%2B+Sync%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/anyhow/1.0.99/src/anyhow/error.rs.html#1177\">Source</a><a href=\"#impl-From%3CError%3E-for-Box%3Cdyn+Error+%2B+Send+%2B+Sync%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.99/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/anyhow/1.0.99/src/anyhow/error.rs.html#1179\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(error: <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.99/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CString%3E-for-Box%3Cdyn+Error%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#640\">Source</a></span><a href=\"#impl-From%3CString%3E-for-Box%3Cdyn+Error%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#653\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(str_err: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'a&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>String</code></a> into a box of dyn <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\"><code>Error</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::error::Error;\n<span class=\"kw\">use </span>std::mem;\n\n<span class=\"kw\">let </span>a_string_error = <span class=\"string\">\"a string error\"</span>.to_string();\n<span class=\"kw\">let </span>a_boxed_error = Box::&lt;<span class=\"kw\">dyn </span>Error&gt;::from(a_string_error);\n<span class=\"macro\">assert!</span>(mem::size_of::&lt;Box&lt;<span class=\"kw\">dyn </span>Error&gt;&gt;() == mem::size_of_val(<span class=\"kw-2\">&amp;</span>a_boxed_error))</code></pre></div>\n</div></details></div></details>","From<String>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CString%3E-for-Box%3Cdyn+Error+%2B+Send+%2B+Sync%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#596\">Source</a></span><a href=\"#impl-From%3CString%3E-for-Box%3Cdyn+Error+%2B+Send+%2B+Sync%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#611\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(err: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'a&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>String</code></a> into a box of dyn <a href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\"><code>Error</code></a> + <a href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\"><code>Send</code></a> + <a href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\"><code>Sync</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::error::Error;\n<span class=\"kw\">use </span>std::mem;\n\n<span class=\"kw\">let </span>a_string_error = <span class=\"string\">\"a string error\"</span>.to_string();\n<span class=\"kw\">let </span>a_boxed_error = Box::&lt;<span class=\"kw\">dyn </span>Error + Send + Sync&gt;::from(a_string_error);\n<span class=\"macro\">assert!</span>(\n    mem::size_of::&lt;Box&lt;<span class=\"kw\">dyn </span>Error + Send + Sync&gt;&gt;() == mem::size_of_val(<span class=\"kw-2\">&amp;</span>a_boxed_error))</code></pre></div>\n</div></details></div></details>","From<String>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-Box%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#23\">Source</a></span><a href=\"#impl-From%3CT%3E-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/convert.rs.html#37\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a <code>T</code> into a <code>Box&lt;T&gt;</code></p>\n<p>The conversion allocates on the heap and moves <code>t</code>\nfrom the stack into it.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"number\">5</span>;\n<span class=\"kw\">let </span>boxed = Box::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert_eq!</span>(Box::from(x), boxed);</code></pre></div>\n</div></details></div></details>","From<T>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FusedFuture-for-Box%3CF%3E\" class=\"impl\"><a href=\"#impl-FusedFuture-for-Box%3CF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F&gt; FusedFuture for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F&gt;<div class=\"where\">where\n    F: FusedFuture + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_terminated\" class=\"method trait-impl\"><a href=\"#method.is_terminated\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_terminated</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the underlying future should no longer be polled.</div></details></div></details>","FusedFuture","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FusedStream-for-Box%3CS%3E\" class=\"impl\"><a href=\"#impl-FusedStream-for-Box%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; FusedStream for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;<div class=\"where\">where\n    S: FusedStream + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_terminated\" class=\"method trait-impl\"><a href=\"#method.is_terminated\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_terminated</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the stream should no longer be polled.</div></details></div></details>","FusedStream","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Future-for-Box%3CF,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.36.0\">1.36.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2108\">Source</a></span><a href=\"#impl-Future-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, A&gt; <a class=\"trait\" href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.Future.html\" title=\"trait wasmer_wasix::runners::dproxy::hyper_proxy::Future\">Future</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.Future.html\" title=\"trait wasmer_wasix::runners::dproxy::hyper_proxy::Future\">Future</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2109\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.Future.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;F as <a class=\"trait\" href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.Future.html\" title=\"trait wasmer_wasix::runners::dproxy::hyper_proxy::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.Future.html#associatedtype.Output\" title=\"type wasmer_wasix::runners::dproxy::hyper_proxy::Future::Output\">Output</a></h4></section></summary><div class='docblock'>The type of value produced on completion.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2111\">Source</a><a href=\"#method.poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.Future.html#tymethod.poll\" class=\"fn\">poll</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.Future.html\" title=\"trait wasmer_wasix::runners::dproxy::hyper_proxy::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.Future.html#associatedtype.Output\" title=\"type wasmer_wasix::runners::dproxy::hyper_proxy::Future::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>Attempts to resolve the future to a final value, registering\nthe current task for wakeup if the value is not yet available. <a href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.Future.html#tymethod.poll\">Read more</a></div></details></div></details>","Future","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1863\">Source</a></span><a href=\"#impl-Hash-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1864\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hasher-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1870\">Source</a></span><a href=\"#impl-Hasher-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.finish\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1871\">Source</a><a href=\"#method.finish\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#tymethod.finish\" class=\"fn\">finish</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the hash value for the values written so far. <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#tymethod.finish\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1874\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Writes some data into this <code>Hasher</code>. <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#tymethod.write\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1877\">Source</a><a href=\"#method.write_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_u8\" class=\"fn\">write_u8</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Writes a single <code>u8</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1880\">Source</a><a href=\"#method.write_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_u16\" class=\"fn\">write_u16</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Writes a single <code>u16</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1883\">Source</a><a href=\"#method.write_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_u32\" class=\"fn\">write_u32</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Writes a single <code>u32</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1886\">Source</a><a href=\"#method.write_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_u64\" class=\"fn\">write_u64</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Writes a single <code>u64</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1889\">Source</a><a href=\"#method.write_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_u128\" class=\"fn\">write_u128</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Writes a single <code>u128</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1892\">Source</a><a href=\"#method.write_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_usize\" class=\"fn\">write_usize</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes a single <code>usize</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1895\">Source</a><a href=\"#method.write_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_i8\" class=\"fn\">write_i8</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Writes a single <code>i8</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1898\">Source</a><a href=\"#method.write_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_i16\" class=\"fn\">write_i16</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Writes a single <code>i16</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1901\">Source</a><a href=\"#method.write_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_i32\" class=\"fn\">write_i32</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Writes a single <code>i32</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1904\">Source</a><a href=\"#method.write_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_i64\" class=\"fn\">write_i64</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Writes a single <code>i64</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1907\">Source</a><a href=\"#method.write_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_i128\" class=\"fn\">write_i128</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Writes a single <code>i128</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1910\">Source</a><a href=\"#method.write_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_isize\" class=\"fn\">write_isize</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Writes a single <code>isize</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_length_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1913\">Source</a><a href=\"#method.write_length_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_length_prefix\" class=\"fn\">write_length_prefix</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>hasher_prefixfree_extras</code>)</span></div></span><div class='docblock'>Writes a length prefix into this hasher, as part of being prefix-free. <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_length_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1916\">Source</a><a href=\"#method.write_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_str\" class=\"fn\">write_str</a>(&amp;mut self, s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>hasher_prefixfree_extras</code>)</span></div></span><div class='docblock'>Writes a single <code>str</code> into this hasher. <a href=\"https://doc.rust-lang.org/1.84.1/core/hash/trait.Hasher.html#method.write_str\">Read more</a></div></details></div></details>","Hasher","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Iterator-for-Box%3CI,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#18\">Source</a></span><a href=\"#impl-Iterator-for-Box%3CI,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;I, A&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#19\">Source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#20\">Source</a><a href=\"#method.next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#tymethod.next\" class=\"fn\">next</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class='docblock'>Advances the iterator and returns the next value. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#tymethod.next\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#23\">Source</a><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Returns the bounds on the remaining length of the iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.size_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#26\">Source</a><a href=\"#method.nth\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.nth\" class=\"fn\">nth</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class='docblock'>Returns the <code>n</code>th element of the iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.nth\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#29\">Source</a><a href=\"#method.last\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.last\" class=\"fn\">last</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class='docblock'>Consumes the iterator, returning the last element. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.last\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_chunk\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#109-113\">Source</a><a href=\"#method.next_chunk\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.next_chunk\" class=\"fn\">next_chunk</a>&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.array.html\">N</a>], <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, N&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_next_chunk</code>)</span></div></span><div class='docblock'>Advances the iterator and returns an array containing the next <code>N</code> values. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.next_chunk\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#221-223\">Source</a></span><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.count\" class=\"fn\">count</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Consumes the iterator, counting the number of iterations and returning it. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.count\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.advance_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#296\">Source</a><a href=\"#method.advance_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.advance_by\" class=\"fn\">advance_by</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_advance_by</code>)</span></div></span><div class='docblock'>Advances the iterator by <code>n</code> elements. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.advance_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.step_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#397-399\">Source</a></span><a href=\"#method.step_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.step_by\" class=\"fn\">step_by</a>(self, step: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/step_by/struct.StepBy.html\" title=\"struct core::iter::adapters::step_by::StepBy\">StepBy</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.step_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#468-471\">Source</a></span><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.chain\" class=\"fn\">chain</a>&lt;U&gt;(self, other: U) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/chain/struct.Chain.html\" title=\"struct core::iter::adapters::chain::Chain\">Chain</a>&lt;Self, &lt;U as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Takes two iterators and creates a new iterator over both in sequence. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#586-589\">Source</a></span><a href=\"#method.zip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.zip\" class=\"fn\">zip</a>&lt;U&gt;(self, other: U) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/zip/struct.Zip.html\" title=\"struct core::iter::adapters::zip::Zip\">Zip</a>&lt;Self, &lt;U as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,</div></h4></section></summary><div class='docblock'>‘Zips up’ two iterators into a single iterator of pairs. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.zip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersperse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#628-631\">Source</a><a href=\"#method.intersperse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.intersperse\" class=\"fn\">intersperse</a>(self, separator: Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/intersperse/struct.Intersperse.html\" title=\"struct core::iter::adapters::intersperse::Intersperse\">Intersperse</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_intersperse</code>)</span></div></span><div class='docblock'>Creates a new iterator which places a copy of <code>separator</code> between adjacent\nitems of the original iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.intersperse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersperse_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#686-689\">Source</a><a href=\"#method.intersperse_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.intersperse_with\" class=\"fn\">intersperse_with</a>&lt;G&gt;(self, separator: G) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/intersperse/struct.IntersperseWith.html\" title=\"struct core::iter::adapters::intersperse::IntersperseWith\">IntersperseWith</a>&lt;Self, G&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>() -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_intersperse</code>)</span></div></span><div class='docblock'>Creates a new iterator which places an item generated by <code>separator</code>\nbetween adjacent items of the original iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.intersperse_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#745-748\">Source</a></span><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.map\" class=\"fn\">map</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/map/struct.Map.html\" title=\"struct core::iter::adapters::map::Map\">Map</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Takes a closure and creates an iterator which calls that closure on each\nelement. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.for_each\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#790-793\">Source</a></span><a href=\"#method.for_each\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.for_each\" class=\"fn\">for_each</a>&lt;F&gt;(self, f: F)<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>),</div></h4></section></summary><div class='docblock'>Calls a closure on each element of an iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.for_each\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#866-869\">Source</a></span><a href=\"#method.filter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.filter\" class=\"fn\">filter</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/filter/struct.Filter.html\" title=\"struct core::iter::adapters::filter::Filter\">Filter</a>&lt;Self, P&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which uses a closure to determine if an element\nshould be yielded. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.filter\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter_map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#911-914\">Source</a></span><a href=\"#method.filter_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.filter_map\" class=\"fn\">filter_map</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/filter_map/struct.FilterMap.html\" title=\"struct core::iter::adapters::filter_map::FilterMap\">FilterMap</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator that both filters and maps. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.filter_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enumerate\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#958-960\">Source</a></span><a href=\"#method.enumerate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.enumerate\" class=\"fn\">enumerate</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/enumerate/struct.Enumerate.html\" title=\"struct core::iter::adapters::enumerate::Enumerate\">Enumerate</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which gives the current iteration count as well as\nthe next value. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.enumerate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peekable\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1029-1031\">Source</a></span><a href=\"#method.peekable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.peekable\" class=\"fn\">peekable</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/peekable/struct.Peekable.html\" title=\"struct core::iter::adapters::peekable::Peekable\">Peekable</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which can use the <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/peekable/struct.Peekable.html#method.peek\" title=\"method core::iter::adapters::peekable::Peekable::peek\"><code>peek</code></a> and <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/peekable/struct.Peekable.html#method.peek_mut\" title=\"method core::iter::adapters::peekable::Peekable::peek_mut\"><code>peek_mut</code></a> methods\nto look at the next element of the iterator without consuming it. See\ntheir documentation for more information. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.peekable\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_while\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1094-1097\">Source</a></span><a href=\"#method.skip_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.skip_while\" class=\"fn\">skip_while</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/skip_while/struct.SkipWhile.html\" title=\"struct core::iter::adapters::skip_while::SkipWhile\">SkipWhile</a>&lt;Self, P&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.skip\" title=\"method core::iter::traits::iterator::Iterator::skip\"><code>skip</code></a>s elements based on a predicate. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.skip_while\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_while\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1175-1178\">Source</a></span><a href=\"#method.take_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.take_while\" class=\"fn\">take_while</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/take_while/struct.TakeWhile.html\" title=\"struct core::iter::adapters::take_while::TakeWhile\">TakeWhile</a>&lt;Self, P&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that yields elements based on a predicate. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.take_while\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_while\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.57.0\">1.57.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1263-1266\">Source</a></span><a href=\"#method.map_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.map_while\" class=\"fn\">map_while</a>&lt;B, P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/map_while/struct.MapWhile.html\" title=\"struct core::iter::adapters::map_while::MapWhile\">MapWhile</a>&lt;Self, P&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator that both yields elements based on a predicate and maps. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.map_while\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1292-1294\">Source</a></span><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.skip\" class=\"fn\">skip</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/skip/struct.Skip.html\" title=\"struct core::iter::adapters::skip::Skip\">Skip</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that skips the first <code>n</code> elements. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.skip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1345-1347\">Source</a></span><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.take\" class=\"fn\">take</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/take/struct.Take.html\" title=\"struct core::iter::adapters::take::Take\">Take</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that yields the first <code>n</code> elements, or fewer\nif the underlying iterator ends sooner. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.take\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.scan\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1392-1395\">Source</a></span><a href=\"#method.scan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.scan\" class=\"fn\">scan</a>&lt;St, B, F&gt;(self, initial_state: St, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/scan/struct.Scan.html\" title=\"struct core::iter::adapters::scan::Scan\">Scan</a>&lt;Self, St, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut St</a>, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>An iterator adapter which, like <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.fold\" title=\"method core::iter::traits::iterator::Iterator::fold\"><code>fold</code></a>, holds internal state, but\nunlike <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.fold\" title=\"method core::iter::traits::iterator::Iterator::fold\"><code>fold</code></a>, produces a new iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.scan\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flat_map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1430-1434\">Source</a></span><a href=\"#method.flat_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.flat_map\" class=\"fn\">flat_map</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/flatten/struct.FlatMap.html\" title=\"struct core::iter::adapters::flatten::FlatMap\">FlatMap</a>&lt;Self, U, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; U,</div></h4></section></summary><div class='docblock'>Creates an iterator that works like map, but flattens nested structure. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.flat_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flatten\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.29.0\">1.29.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1514-1517\">Source</a></span><a href=\"#method.flatten\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.flatten\" class=\"fn\">flatten</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/flatten/struct.Flatten.html\" title=\"struct core::iter::adapters::flatten::Flatten\">Flatten</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that flattens nested structure. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.flatten\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_windows\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1670-1673\">Source</a><a href=\"#method.map_windows\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.map_windows\" class=\"fn\">map_windows</a>&lt;F, R, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/map_windows/struct.MapWindows.html\" title=\"struct core::iter::adapters::map_windows::MapWindows\">MapWindows</a>&lt;Self, F, N&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;[Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.array.html\">N</a>]) -&gt; R,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_map_windows</code>)</span></div></span><div class='docblock'>Calls the given function <code>f</code> for each contiguous window of size <code>N</code> over\n<code>self</code> and returns an iterator over the outputs of <code>f</code>. Like <a href=\"https://doc.rust-lang.org/1.84.1/std/primitive.slice.html#method.windows\" title=\"method slice::windows\"><code>slice::windows()</code></a>,\nthe windows during mapping overlap as well. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.map_windows\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fuse\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1736-1738\">Source</a></span><a href=\"#method.fuse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.fuse\" class=\"fn\">fuse</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/fuse/struct.Fuse.html\" title=\"struct core::iter::adapters::fuse::Fuse\">Fuse</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which ends after the first <a href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.fuse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inspect\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1820-1823\">Source</a></span><a href=\"#method.inspect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.inspect\" class=\"fn\">inspect</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/inspect/struct.Inspect.html\" title=\"struct core::iter::adapters::inspect::Inspect\">Inspect</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>),</div></h4></section></summary><div class='docblock'>Does something with each element of an iterator, passing the value on. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.inspect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1848-1850\">Source</a></span><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Borrows an iterator, rather than consuming it. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#1967-1969\">Source</a></span><a href=\"#method.collect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.collect\" class=\"fn\">collect</a>&lt;B&gt;(self) -&gt; B<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transforms an iterator into a collection. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.collect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_collect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2045-2049\">Source</a><a href=\"#method.try_collect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_collect\" class=\"fn\">try_collect</a>&lt;B&gt;(\n    &amp;mut self,\n) -&gt; &lt;&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;B&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Residual.html#associatedtype.TryType\" title=\"type core::ops::try_trait::Residual::TryType\">TryType</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>,\n    &lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;B&gt;,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html#associatedtype.Output\" title=\"type core::ops::try_trait::Try::Output\">Output</a>&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iterator_try_collect</code>)</span></div></span><div class='docblock'>Fallibly transforms an iterator into a collection, short circuiting if\na failure is encountered. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_collect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2117-2119\">Source</a><a href=\"#method.collect_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.collect_into\" class=\"fn\">collect_into</a>&lt;E&gt;(self, collection: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut E</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_collect_into</code>)</span></div></span><div class='docblock'>Collects all the items from an iterator into a collection. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.collect_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partition\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2149-2153\">Source</a></span><a href=\"#method.partition\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.partition\" class=\"fn\">partition</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.tuple.html\">(B, B)</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Consumes an iterator, creating two collections from it. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.partition\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partition_in_place\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2211-2214\">Source</a><a href=\"#method.partition_in_place\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.partition_in_place\" class=\"fn\">partition_in_place</a>&lt;'a, T, P&gt;(self, predicate: P) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    T: 'a,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_partition_in_place</code>)</span></div></span><div class='docblock'>Reorders the elements of this iterator <em>in-place</em> according to the given predicate,\nsuch that all those that return <code>true</code> precede all those that return <code>false</code>.\nReturns the number of <code>true</code> elements found. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.partition_in_place\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_partitioned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2268-2271\">Source</a><a href=\"#method.is_partitioned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.is_partitioned\" class=\"fn\">is_partitioned</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_is_partitioned</code>)</span></div></span><div class='docblock'>Checks if the elements of this iterator are partitioned according to the given predicate,\nsuch that all those that return <code>true</code> precede all those that return <code>false</code>. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.is_partitioned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2362-2366\">Source</a></span><a href=\"#method.try_fold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_fold\" class=\"fn\">try_fold</a>&lt;B, F, R&gt;(&amp;mut self, init: B, f: F) -&gt; R<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = B&gt;,</div></h4></section></summary><div class='docblock'>An iterator method that applies a function as long as it returns\nsuccessfully, producing a single, final value. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_fold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_for_each\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2420-2424\">Source</a></span><a href=\"#method.try_for_each\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_for_each\" class=\"fn\">try_for_each</a>&lt;F, R&gt;(&amp;mut self, f: F) -&gt; R<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class='docblock'>An iterator method that applies a fallible function to each item in the\niterator, stopping at the first error and returning that error. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_for_each\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2539-2542\">Source</a></span><a href=\"#method.fold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.fold\" class=\"fn\">fold</a>&lt;B, F&gt;(self, init: B, f: F) -&gt; B<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Folds every element into an accumulator by applying an operation,\nreturning the final result. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.fold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reduce\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2576-2579\">Source</a></span><a href=\"#method.reduce\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.reduce\" class=\"fn\">reduce</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>,</div></h4></section></summary><div class='docblock'>Reduces the elements to a single one, by repeatedly applying a reducing\noperation. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.reduce\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reduce\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2647-2653\">Source</a><a href=\"#method.try_reduce\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_reduce\" class=\"fn\">try_reduce</a>&lt;R&gt;(\n    &amp;mut self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n) -&gt; &lt;&lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html#associatedtype.Output\" title=\"type core::ops::try_trait::Try::Output\">Output</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Residual.html#associatedtype.TryType\" title=\"type core::ops::try_trait::Residual::TryType\">TryType</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    &lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iterator_try_reduce</code>)</span></div></span><div class='docblock'>Reduces the elements to a single one by repeatedly applying a reducing operation. If the\nclosure returns a failure, the failure is propagated back to the caller immediately. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_reduce\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.all\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2705-2708\">Source</a></span><a href=\"#method.all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.all\" class=\"fn\">all</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Tests if every element of the iterator matches a predicate. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.all\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.any\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2758-2761\">Source</a></span><a href=\"#method.any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.any\" class=\"fn\">any</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Tests if any element of the iterator matches a predicate. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.any\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2821-2824\">Source</a></span><a href=\"#method.find\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.find\" class=\"fn\">find</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Searches for an element of an iterator that satisfies a predicate. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.find\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.30.0\">1.30.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2852-2855\">Source</a></span><a href=\"#method.find_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.find_map\" class=\"fn\">find_map</a>&lt;B, F&gt;(&amp;mut self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>Applies function to the elements of iterator and returns\nthe first non-none result. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.find_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_find\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2910-2916\">Source</a><a href=\"#method.try_find\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_find\" class=\"fn\">try_find</a>&lt;R&gt;(\n    &amp;mut self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n) -&gt; &lt;&lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Residual.html#associatedtype.TryType\" title=\"type core::ops::try_trait::Residual::TryType\">TryType</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>&gt;,\n    &lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_find</code>)</span></div></span><div class='docblock'>Applies function to the elements of iterator and returns\nthe first true result or the first error. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.try_find\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.position\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#2993-2996\">Source</a></span><a href=\"#method.position\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.position\" class=\"fn\">position</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Searches for an element in an iterator, returning its index. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.position\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rposition\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3057-3060\">Source</a></span><a href=\"#method.rposition\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.rposition\" class=\"fn\">rposition</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a>,</div></h4></section></summary><div class='docblock'>Searches for an element in an iterator from the right, returning its\nindex. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.rposition\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3106-3109\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.max\" class=\"fn\">max</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class='docblock'>Returns the maximum element of an iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3142-3145\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.min\" class=\"fn\">min</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class='docblock'>Returns the minimum element of an iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_by_key\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3164-3167\">Source</a></span><a href=\"#method.max_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.max_by_key\" class=\"fn\">max_by_key</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Returns the element that gives the maximum value from the\nspecified function. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.max_by_key\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.15.0\">1.15.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3197-3200\">Source</a></span><a href=\"#method.max_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.max_by\" class=\"fn\">max_by</a>&lt;F&gt;(self, compare: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class='docblock'>Returns the element that gives the maximum value with respect to the\nspecified comparison function. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.max_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_by_key\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3224-3227\">Source</a></span><a href=\"#method.min_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.min_by_key\" class=\"fn\">min_by_key</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Returns the element that gives the minimum value from the\nspecified function. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.min_by_key\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.15.0\">1.15.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3257-3260\">Source</a></span><a href=\"#method.min_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.min_by\" class=\"fn\">min_by</a>&lt;F&gt;(self, compare: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class='docblock'>Returns the element that gives the minimum value with respect to the\nspecified comparison function. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.min_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rev\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3294-3296\">Source</a></span><a href=\"#method.rev\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.rev\" class=\"fn\">rev</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/rev/struct.Rev.html\" title=\"struct core::iter::adapters::rev::Rev\">Rev</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a>,</div></h4></section></summary><div class='docblock'>Reverses an iterator’s direction. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.rev\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unzip\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3330-3334\">Source</a></span><a href=\"#method.unzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.unzip\" class=\"fn\">unzip</a>&lt;A, B, FromA, FromB&gt;(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.tuple.html\">(FromA, FromB)</a><div class=\"where\">where\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.tuple.html\">(A, B)</a>&gt;,</div></h4></section></summary><div class='docblock'>Converts an iterator of pairs into a pair of containers. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.unzip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.36.0\">1.36.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3361-3364\">Source</a></span><a href=\"#method.copied\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.copied\" class=\"fn\">copied</a>&lt;'a, T&gt;(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/copied/struct.Copied.html\" title=\"struct core::iter::adapters::copied::Copied\">Copied</a>&lt;Self&gt;<div class=\"where\">where\n    T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator which copies all of its elements. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.copied\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3409-3412\">Source</a></span><a href=\"#method.cloned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.cloned\" class=\"fn\">cloned</a>&lt;'a, T&gt;(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/cloned/struct.Cloned.html\" title=\"struct core::iter::adapters::cloned::Cloned\">Cloned</a>&lt;Self&gt;<div class=\"where\">where\n    T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator which <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#tymethod.clone\" title=\"method core::clone::Clone::clone\"><code>clone</code></a>s all of its elements. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.cloned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cycle\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3441-3443\">Source</a></span><a href=\"#method.cycle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.cycle\" class=\"fn\">cycle</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/cycle/struct.Cycle.html\" title=\"struct core::iter::adapters::cycle::Cycle\">Cycle</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Repeats an iterator endlessly. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.cycle\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.array_chunks\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3484-3486\">Source</a><a href=\"#method.array_chunks\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.array_chunks\" class=\"fn\">array_chunks</a>&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/adapters/array_chunks/struct.ArrayChunks.html\" title=\"struct core::iter::adapters::array_chunks::ArrayChunks\">ArrayChunks</a>&lt;Self, N&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_array_chunks</code>)</span></div></span><div class='docblock'>Returns an iterator over <code>N</code> elements of the iterator at a time. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.array_chunks\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.11.0\">1.11.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3515-3518\">Source</a></span><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.sum\" class=\"fn\">sum</a>&lt;S&gt;(self) -&gt; S<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Sums the elements of an iterator. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.sum\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.11.0\">1.11.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3547-3550\">Source</a></span><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.product\" class=\"fn\">product</a>&lt;P&gt;(self) -&gt; P<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Iterates over the entire iterator, multiplying all the elements <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.product\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3568-3572\">Source</a></span><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.cmp\" class=\"fn\">cmp</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">Lexicographically</a> compares the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> with those\nof another. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3595-3599\">Source</a><a href=\"#method.cmp_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.cmp_by\" class=\"fn\">cmp_by</a>&lt;I, F&gt;(self, other: I, cmp: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_order_by</code>)</span></div></span><div class='docblock'><a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">Lexicographically</a> compares the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> with those\nof another with respect to the specified comparison function. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.cmp_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3651-3655\">Source</a></span><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp\" class=\"fn\">partial_cmp</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">Lexicographically</a> compares the <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\"><code>PartialOrd</code></a> elements of\nthis <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> with those of another. The comparison works like short-circuit\nevaluation, returning a result without comparing the remaining elements.\nAs soon as an order can be determined, the evaluation stops and a result is returned. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3687-3691\">Source</a><a href=\"#method.partial_cmp_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp_by\" class=\"fn\">partial_cmp_by</a>&lt;I, F&gt;(self, other: I, partial_cmp: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_order_by</code>)</span></div></span><div class='docblock'><a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">Lexicographically</a> compares the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> with those\nof another with respect to the specified comparison function. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3720-3724\">Source</a></span><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.eq\" class=\"fn\">eq</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are equal to those of\nanother. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3743-3747\">Source</a><a href=\"#method.eq_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.eq_by\" class=\"fn\">eq_by</a>&lt;I, F&gt;(self, other: I, eq: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_order_by</code>)</span></div></span><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are equal to those of\nanother with respect to the specified equality function. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.eq_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3775-3779\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.ne\" class=\"fn\">ne</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are not equal to those of\nanother. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3796-3800\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.lt\" class=\"fn\">lt</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">lexicographically</a>\nless than those of another. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3817-3821\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.le\" class=\"fn\">le</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">lexicographically</a>\nless or equal to those of another. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3838-3842\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.gt\" class=\"fn\">gt</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">lexicographically</a>\ngreater than those of another. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3859-3863\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.ge\" class=\"fn\">ge</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">lexicographically</a>\ngreater than or equal to those of another. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sorted\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3888-3891\">Source</a></span><a href=\"#method.is_sorted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted\" class=\"fn\">is_sorted</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Checks if the elements of this iterator are sorted. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sorted_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3914-3917\">Source</a></span><a href=\"#method.is_sorted_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by\" class=\"fn\">is_sorted_by</a>&lt;F&gt;(self, compare: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Checks if the elements of this iterator are sorted using the given comparator function. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sorted_by_key\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/iter/traits/iterator.rs.html#3958-3962\">Source</a></span><a href=\"#method.is_sorted_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by_key\" class=\"fn\">is_sorted_by_key</a>&lt;F, K&gt;(self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; K,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Checks if the elements of this iterator are sorted using the given key extraction\nfunction. <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by_key\">Read more</a></div></details></div></details>","Iterator","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-JsonSchema-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-JsonSchema-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; JsonSchema for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: JsonSchema + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_referenceable\" class=\"method trait-impl\"><a href=\"#method.is_referenceable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_referenceable</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Whether JSON Schemas generated for this type should be re-used where possible using the <code>$ref</code> keyword. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schema_name\" class=\"method trait-impl\"><a href=\"#method.schema_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schema_name</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>The name of the generated JSON Schema. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schema_id\" class=\"method trait-impl\"><a href=\"#method.schema_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schema_id</a>() -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Cow.html\" title=\"enum wasmer_wasix::syscalls::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns a string that uniquely identifies the schema produced by this type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.json_schema\" class=\"method trait-impl\"><a href=\"#method.json_schema\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">json_schema</a>(generator: &amp;mut SchemaGenerator) -&gt; Schema</h4></section></summary><div class='docblock'>Generates a JSON Schema for this type. <a>Read more</a></div></details></div></details>","JsonSchema","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LocalSpawn-for-Box%3CSp%3E\" class=\"impl\"><a href=\"#impl-LocalSpawn-for-Box%3CSp%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Sp&gt; LocalSpawn for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;Sp&gt;<div class=\"where\">where\n    Sp: LocalSpawn + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.spawn_local_obj\" class=\"method trait-impl\"><a href=\"#method.spawn_local_obj\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">spawn_local_obj</a>(\n    &amp;self,\n    future: LocalFutureObj&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, SpawnError&gt;</h4></section></summary><div class='docblock'>Spawns a future that will be run to completion. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.status_local\" class=\"method trait-impl\"><a href=\"#method.status_local\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">status_local</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, SpawnError&gt;</h4></section></summary><div class='docblock'>Determines whether the executor is able to spawn new tasks. <a>Read more</a></div></details></div></details>","LocalSpawn","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Log-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/log/0.4.27/src/log/lib.rs.html#1236-1238\">Source</a><a href=\"#impl-Log-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/log/0.4.27/log/trait.Log.html\" title=\"trait log::Log\">Log</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/log/0.4.27/log/trait.Log.html\" title=\"trait log::Log\">Log</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/log/0.4.27/src/log/lib.rs.html#1240\">Source</a><a href=\"#method.enabled\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/log/0.4.27/log/trait.Log.html#tymethod.enabled\" class=\"fn\">enabled</a>(&amp;self, metadata: &amp;<a class=\"struct\" href=\"https://docs.rs/log/0.4.27/log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determines if a log message with the specified metadata would be\nlogged. <a href=\"https://docs.rs/log/0.4.27/log/trait.Log.html#tymethod.enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.log\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/log/0.4.27/src/log/lib.rs.html#1244\">Source</a><a href=\"#method.log\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/log/0.4.27/log/trait.Log.html#tymethod.log\" class=\"fn\">log</a>(&amp;self, record: &amp;<a class=\"struct\" href=\"https://docs.rs/log/0.4.27/log/struct.Record.html\" title=\"struct log::Record\">Record</a>&lt;'_&gt;)</h4></section></summary><div class='docblock'>Logs the <code>Record</code>. <a href=\"https://docs.rs/log/0.4.27/log/trait.Log.html#tymethod.log\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/log/0.4.27/src/log/lib.rs.html#1247\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/log/0.4.27/log/trait.Log.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;self)</h4></section></summary><div class='docblock'>Flushes any buffered records. <a href=\"https://docs.rs/log/0.4.27/log/trait.Log.html#tymethod.flush\">Read more</a></div></details></div></details>","Log","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1852\">Source</a></span><a href=\"#impl-Ord-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1854\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/cmp.rs.html#980-982\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/cmp.rs.html#1001-1003\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/cmp.rs.html#1027-1029\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Parse%3C'a%3E-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-Parse%3C'a%3E-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; Parse&lt;'a&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: Parse&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">parse</a>(parser: Parser&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;, Error&gt;</h4></section></summary><div class='docblock'>Attempts to parse <code>Self</code> from <code>parser</code>, returning an error if it could\nnot be parsed. <a>Read more</a></div></details></div></details>","Parse<'a>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1816\">Source</a></span><a href=\"#impl-PartialEq-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1818\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1822\">Source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1828\">Source</a></span><a href=\"#impl-PartialOrd-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1830\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1834\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1838\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1842\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1846\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details></div></details>","PartialOrd","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pointer-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1936\">Source</a></span><a href=\"#impl-Pointer-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1937\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Pointer.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Pointer.html#tymethod.fmt\">Read more</a></div></details></div></details>","Pointer","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Policy%3CB,+E%3E-for-Box%3CP%3E\" class=\"impl\"><a href=\"#impl-Policy%3CB,+E%3E-for-Box%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, E, P&gt; Policy&lt;B, E&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;P&gt;<div class=\"where\">where\n    P: Policy&lt;B, E&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.redirect\" class=\"method trait-impl\"><a href=\"#method.redirect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">redirect</a>(&amp;mut self, attempt: &amp;Attempt&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Action, E&gt;</h4></section></summary><div class='docblock'>Invoked when the service received a response with a redirection status code (<code>3xx</code>). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_request\" class=\"method trait-impl\"><a href=\"#method.on_request\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_request</a>(&amp;mut self, request: &amp;mut Request&lt;B&gt;)</h4></section></summary><div class='docblock'>Invoked right before the service makes a request, regardless of whether it is redirected\nor not. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_body\" class=\"method trait-impl\"><a href=\"#method.clone_body\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clone_body</a>(&amp;self, body: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;B</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;</h4></section></summary><div class='docblock'>Try to clone a request body before the service makes a redirected request. <a>Read more</a></div></details></div></details>","Policy<B, E>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Read-for-Box%3CR%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#121\">Source</a></span><a href=\"#impl-Read-for-Box%3CR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R&gt; <a class=\"trait\" href=\"wasmer_wasix/syscalls/trait.Read.html\" title=\"trait wasmer_wasix::syscalls::Read\">Read</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;R&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"wasmer_wasix/syscalls/trait.Read.html\" title=\"trait wasmer_wasix::syscalls::Read\">Read</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#123\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Read.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Pull some bytes from this source into the specified buffer, returning\nhow many bytes were read. <a href=\"wasmer_wasix/syscalls/trait.Read.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_buf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#128\">Source</a><a href=\"#method.read_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.read_buf\" class=\"fn\">read_buf</a>(&amp;mut self, cursor: <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.BorrowedCursor.html\" title=\"struct wasmer_wasix::syscalls::io::BorrowedCursor\">BorrowedCursor</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>read_buf</code>)</span></div></span><div class='docblock'>Pull some bytes from this source into the specified buffer. <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.read_buf\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#133\">Source</a><a href=\"#method.read_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.read_vectored\" class=\"fn\">read_vectored</a>(&amp;mut self, bufs: &amp;mut [<a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.IoSliceMut.html\" title=\"struct wasmer_wasix::syscalls::io::IoSliceMut\">IoSliceMut</a>&lt;'_&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Like <code>read</code>, except that it reads into a slice of buffers. <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.read_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_read_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#138\">Source</a><a href=\"#method.is_read_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.is_read_vectored\" class=\"fn\">is_read_vectored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>can_vector</code>)</span></div></span><div class='docblock'>Determines if this <code>Read</code>er has an efficient <code>read_vectored</code>\nimplementation. <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.is_read_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_to_end\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#143\">Source</a><a href=\"#method.read_to_end\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.read_to_end\" class=\"fn\">read_to_end</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes until EOF in this source, placing them into <code>buf</code>. <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.read_to_end\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_to_string\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#148\">Source</a><a href=\"#method.read_to_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.read_to_string\" class=\"fn\">read_to_string</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes until EOF in this source, appending them to <code>buf</code>. <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.read_to_string\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#153\">Source</a><a href=\"#method.read_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.read_exact\" class=\"fn\">read_exact</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads the exact number of bytes required to fill <code>buf</code>. <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.read_exact\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_buf_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#157\">Source</a><a href=\"#method.read_buf_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.read_buf_exact\" class=\"fn\">read_buf_exact</a>(&amp;mut self, cursor: <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.BorrowedCursor.html\" title=\"struct wasmer_wasix::syscalls::io::BorrowedCursor\">BorrowedCursor</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>read_buf</code>)</span></div></span><div class='docblock'>Reads the exact number of bytes required to fill <code>cursor</code>. <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.read_buf_exact\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#1046-1048\">Source</a></span><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates a “by reference” adaptor for this instance of <code>Read</code>. <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bytes\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#1089-1091\">Source</a></span><a href=\"#method.bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.bytes\" class=\"fn\">bytes</a>(self) -&gt; <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Bytes.html\" title=\"struct wasmer_wasix::syscalls::io::Bytes\">Bytes</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Bytes&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transforms this <code>Read</code> instance to an <a href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> over its bytes. <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#1127-1129\">Source</a></span><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.chain\" class=\"fn\">chain</a>&lt;R&gt;(self, next: R) -&gt; <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Chain.html\" title=\"struct wasmer_wasix::syscalls::io::Chain\">Chain</a>&lt;Self, R&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Chain&lt;Self, R&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"wasmer_wasix/syscalls/trait.Read.html\" title=\"trait wasmer_wasix::syscalls::Read\">Read</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adapter which will chain this stream with another. <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#1166-1168\">Source</a></span><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.take\" class=\"fn\">take</a>(self, limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Take.html\" title=\"struct wasmer_wasix::syscalls::io::Take\">Take</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Take&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adapter which will read at most <code>limit</code> bytes from it. <a href=\"wasmer_wasix/syscalls/trait.Read.html#method.take\">Read more</a></div></details></div></details>","Read","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Read-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-Read-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Read for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: Read + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_read\" class=\"method trait-impl\"><a href=\"#method.poll_read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_read</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n    buf: ReadBufCursor&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to read bytes into the <code>buf</code>. <a>Read more</a></div></details></div></details>","Read","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ReadableJournal-for-Box%3CR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wasmer_journal/concrete/boxed.rs.html#5\">Source</a><a href=\"#impl-ReadableJournal-for-Box%3CR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R&gt; <a class=\"trait\" href=\"wasmer_wasix/journal/trait.ReadableJournal.html\" title=\"trait wasmer_wasix::journal::ReadableJournal\">ReadableJournal</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;R&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"wasmer_wasix/journal/trait.ReadableJournal.html\" title=\"trait wasmer_wasix::journal::ReadableJournal\">ReadableJournal</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wasmer_journal/concrete/boxed.rs.html#6\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/journal/trait.ReadableJournal.html#tymethod.read\" class=\"fn\">read</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"wasmer_wasix/journal/struct.LogReadResult.html\" title=\"struct wasmer_wasix::journal::LogReadResult\">LogReadResult</a>&lt;'_&gt;&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.99/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Returns a stream of snapshot objects that the runtime will use\nto restore the state of a WASM process to a previous moment in time</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_restarted\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wasmer_journal/concrete/boxed.rs.html#10\">Source</a><a href=\"#method.as_restarted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/journal/trait.ReadableJournal.html#tymethod.as_restarted\" class=\"fn\">as_restarted</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"wasmer_wasix/journal/trait.ReadableJournal.html\" title=\"trait wasmer_wasix::journal::ReadableJournal\">ReadableJournal</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.99/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Resets the journal so that reads will start from the\nbeginning again</div></details></div></details>","ReadableJournal","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rng-for-Box%3CR%3E\" class=\"impl\"><a href=\"#impl-Rng-for-Box%3CR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R&gt; Rng for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;R&gt;<div class=\"where\">where\n    R: Rng + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_u64\" class=\"method trait-impl\"><a href=\"#method.next_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">next_u64</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Generate a random <a href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_f64\" class=\"method trait-impl\"><a href=\"#method.next_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">next_f64</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Generate a random <a href=\"https://doc.rust-lang.org/1.84.1/std/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> between <code>[0, 1)</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_range\" class=\"method trait-impl\"><a href=\"#method.next_range\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">next_range</a>(&amp;mut self, range: <a class=\"struct\" href=\"wasmer_wasix/journal/effector/struct.Range.html\" title=\"struct wasmer_wasix::journal::effector::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Randomly pick a value within the range. <a>Read more</a></div></details></div></details>","Rng","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RngCore-for-Box%3CR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand_core/lib.rs.html#450\">Source</a><a href=\"#impl-RngCore-for-Box%3CR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;R&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand_core/lib.rs.html#452\">Source</a><a href=\"#method.next_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html#tymethod.next_u32\" class=\"fn\">next_u32</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Return the next random <code>u32</code>. <a href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html#tymethod.next_u32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand_core/lib.rs.html#457\">Source</a><a href=\"#method.next_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html#tymethod.next_u64\" class=\"fn\">next_u64</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Return the next random <code>u64</code>. <a href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html#tymethod.next_u64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fill_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand_core/lib.rs.html#462\">Source</a><a href=\"#method.fill_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html#tymethod.fill_bytes\" class=\"fn\">fill_bytes</a>(&amp;mut self, dest: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Fill <code>dest</code> with random data. <a href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html#tymethod.fill_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fill_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand_core/lib.rs.html#467\">Source</a><a href=\"#method.try_fill_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html#tymethod.try_fill_bytes\" class=\"fn\">try_fill_bytes</a>(&amp;mut self, dest: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://rust-random.github.io/rand/rand_core/error/struct.Error.html\" title=\"struct rand_core::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Fill <code>dest</code> entirely with random data. <a href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html#tymethod.try_fill_bytes\">Read more</a></div></details></div></details>","RngCore","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Seek-for-Box%3CS%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#194\">Source</a></span><a href=\"#impl-Seek-for-Box%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"wasmer_wasix/syscalls/trait.Seek.html\" title=\"trait wasmer_wasix::syscalls::Seek\">Seek</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"wasmer_wasix/syscalls/trait.Seek.html\" title=\"trait wasmer_wasix::syscalls::Seek\">Seek</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.seek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#196\">Source</a><a href=\"#method.seek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Seek.html#tymethod.seek\" class=\"fn\">seek</a>(&amp;mut self, pos: <a class=\"enum\" href=\"wasmer_wasix/syscalls/io/enum.SeekFrom.html\" title=\"enum wasmer_wasix::syscalls::io::SeekFrom\">SeekFrom</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Seek to an offset, in bytes, in a stream. <a href=\"wasmer_wasix/syscalls/trait.Seek.html#tymethod.seek\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stream_position\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#201\">Source</a><a href=\"#method.stream_position\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Seek.html#method.stream_position\" class=\"fn\">stream_position</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Returns the current seek position from the start of the stream. <a href=\"wasmer_wasix/syscalls/trait.Seek.html#method.stream_position\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rewind\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.55.0\">1.55.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#2006\">Source</a></span><a href=\"#method.rewind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Seek.html#method.rewind\" class=\"fn\">rewind</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Rewind to the beginning of a stream. <a href=\"wasmer_wasix/syscalls/trait.Seek.html#method.rewind\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stream_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#2046\">Source</a><a href=\"#method.stream_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Seek.html#method.stream_len\" class=\"fn\">stream_len</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>seek_stream_len</code>)</span></div></span><div class='docblock'>Returns the length of this stream (in bytes). <a href=\"wasmer_wasix/syscalls/trait.Seek.html#method.stream_len\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.seek_relative\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.80.0\">1.80.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#2111\">Source</a></span><a href=\"#method.seek_relative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Seek.html#method.seek_relative\" class=\"fn\">seek_relative</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Seeks relative to the current position. <a href=\"wasmer_wasix/syscalls/trait.Seek.html#method.seek_relative\">Read more</a></div></details></div></details>","Seek","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize%3CS%3E-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-Serialize%3CS%3E-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; Serialize&lt;S&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: SerializeUnsized&lt;S&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    S: Fallible + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize</a>(\n    &amp;self,\n    serializer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut S</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt; as Archive&gt;::Resolver, &lt;S as Fallible&gt;::Error&gt;</h4></section></summary><div class='docblock'>Writes the dependencies for the object and returns a resolver that can\ncreate the archived type.</div></details></div></details>","Serialize<S>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/ser/impls.rs.html#535-539\">Source</a><a href=\"#impl-Serialize-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/ser/impls.rs.html#535-539\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Service%3CRequest%3E-for-Box%3CS%3E\" class=\"impl\"><a href=\"#impl-Service%3CRequest%3E-for-Box%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Request, S&gt; Service&lt;Request&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;<div class=\"where\">where\n    S: Service&lt;Request&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Response\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Response\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Response</a> = &lt;S as Service&lt;Request&gt;&gt;::Response</h4></section></summary><div class='docblock'>Responses given by the service.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = &lt;S as Service&lt;Request&gt;&gt;::Error</h4></section></summary><div class='docblock'>Errors produced by the service. <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = &lt;S as Service&lt;Request&gt;&gt;::Future</h4></section></summary><div class='docblock'>The future response value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(&amp;self, req: Request) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt; as Service&lt;Request&gt;&gt;::Future</h4></section></summary><div class='docblock'>Process the request and return the response asynchronously.\n<code>call</code> takes <code>&amp;self</code> instead of <code>mut &amp;self</code> because: <a>Read more</a></div></details></div></details>","Service<Request>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Service%3CRequest%3E-for-Box%3CS%3E\" class=\"impl\"><a href=\"#impl-Service%3CRequest%3E-for-Box%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, Request&gt; Service&lt;Request&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;<div class=\"where\">where\n    S: Service&lt;Request&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Response\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Response\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Response</a> = &lt;S as Service&lt;Request&gt;&gt;::Response</h4></section></summary><div class='docblock'>Responses given by the service.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = &lt;S as Service&lt;Request&gt;&gt;::Error</h4></section></summary><div class='docblock'>Errors produced by the service.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = &lt;S as Service&lt;Request&gt;&gt;::Future</h4></section></summary><div class='docblock'>The future response value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_ready\" class=\"method trait-impl\"><a href=\"#method.poll_ready\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_ready</a>(\n    &amp;mut self,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, &lt;S as Service&lt;Request&gt;&gt;::Error&gt;&gt;</h4></section></summary><div class='docblock'>Returns <code>Poll::Ready(Ok(()))</code> when the service is able to process requests. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(&amp;mut self, request: Request) -&gt; &lt;S as Service&lt;Request&gt;&gt;::Future</h4></section></summary><div class='docblock'>Process the request and return the response asynchronously. <a>Read more</a></div></details></div></details>","Service<Request>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sink%3CItem%3E-for-Box%3CS%3E\" class=\"impl\"><a href=\"#impl-Sink%3CItem%3E-for-Box%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, Item&gt; Sink&lt;Item&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;<div class=\"where\">where\n    S: Sink&lt;Item&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = &lt;S as Sink&lt;Item&gt;&gt;::Error</h4></section></summary><div class='docblock'>The type of value produced by the sink when an error occurs.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_ready\" class=\"method trait-impl\"><a href=\"#method.poll_ready\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_ready</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt; as Sink&lt;Item&gt;&gt;::Error&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to prepare the <code>Sink</code> to receive a value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.start_send\" class=\"method trait-impl\"><a href=\"#method.start_send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">start_send</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;&gt;,\n    item: Item,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt; as Sink&lt;Item&gt;&gt;::Error&gt;</h4></section></summary><div class='docblock'>Begin the process of sending a value to the sink.\nEach call to this function must be preceded by a successful call to\n<code>poll_ready</code> which returned <code>Poll::Ready(Ok(()))</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_flush\" class=\"method trait-impl\"><a href=\"#method.poll_flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_flush</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt; as Sink&lt;Item&gt;&gt;::Error&gt;&gt;</h4></section></summary><div class='docblock'>Flush any remaining output from this sink. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_close\" class=\"method trait-impl\"><a href=\"#method.poll_close\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_close</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt; as Sink&lt;Item&gt;&gt;::Error&gt;&gt;</h4></section></summary><div class='docblock'>Flush any remaining output and close this sink, if necessary. <a>Read more</a></div></details></div></details>","Sink<Item>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Source-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-Source-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Source for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: Source + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.register\" class=\"method trait-impl\"><a href=\"#method.register\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">register</a>(\n    &amp;mut self,\n    registry: &amp;Registry,\n    token: Token,\n    interests: Interest,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Register <code>self</code> with the given <code>Registry</code> instance. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reregister\" class=\"method trait-impl\"><a href=\"#method.reregister\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reregister</a>(\n    &amp;mut self,\n    registry: &amp;Registry,\n    token: Token,\n    interests: Interest,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Re-register <code>self</code> with the given <code>Registry</code> instance. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deregister\" class=\"method trait-impl\"><a href=\"#method.deregister\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deregister</a>(&amp;mut self, registry: &amp;Registry) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Deregister <code>self</code> from the given <code>Registry</code> instance. <a>Read more</a></div></details></div></details>","Source","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Spawn-for-Box%3CSp%3E\" class=\"impl\"><a href=\"#impl-Spawn-for-Box%3CSp%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Sp&gt; Spawn for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;Sp&gt;<div class=\"where\">where\n    Sp: Spawn + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.spawn_obj\" class=\"method trait-impl\"><a href=\"#method.spawn_obj\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">spawn_obj</a>(&amp;self, future: FutureObj&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, SpawnError&gt;</h4></section></summary><div class='docblock'>Spawns a future that will be run to completion. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.status\" class=\"method trait-impl\"><a href=\"#method.status\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">status</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, SpawnError&gt;</h4></section></summary><div class='docblock'>Determines whether the executor is able to spawn new tasks. <a>Read more</a></div></details></div></details>","Spawn","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Stream-for-Box%3CS%3E\" class=\"impl\"><a href=\"#impl-Stream-for-Box%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; Stream for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;<div class=\"where\">where\n    S: Stream + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Item</a> = &lt;S as Stream&gt;::Item</h4></section></summary><div class='docblock'>Values yielded by the stream.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_next\" class=\"method trait-impl\"><a href=\"#method.poll_next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_next</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt; as Stream&gt;::Item&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to pull out the next value of this stream, registering the\ncurrent task for wakeup if the value is not yet available, and returning\n<code>None</code> if the stream is exhausted. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Returns the bounds on the remaining length of the stream. <a>Read more</a></div></details></div></details>","Stream","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Subscriber-for-Box%3CS%3E\" class=\"impl\"><a href=\"#impl-Subscriber-for-Box%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; Subscriber for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;<div class=\"where\">where\n    S: Subscriber + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_callsite\" class=\"method trait-impl\"><a href=\"#method.register_callsite\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">register_callsite</a>(&amp;self, metadata: &amp;'static Metadata&lt;'static&gt;) -&gt; Interest</h4></section></summary><div class='docblock'>Registers a new <a href=\"crate::callsite\">callsite</a> with this subscriber, returning whether or not\nthe subscriber is interested in being notified about the callsite. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enabled\" class=\"method trait-impl\"><a href=\"#method.enabled\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">enabled</a>(&amp;self, metadata: &amp;Metadata&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if a span or event with the specified <a href=\"super::metadata::Metadata\">metadata</a> would be\nrecorded. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_level_hint\" class=\"method trait-impl\"><a href=\"#method.max_level_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_level_hint</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;LevelFilter&gt;</h4></section></summary><div class='docblock'>Returns the highest <a href=\"super::Level\">verbosity level</a> that this <code>Subscriber</code> will\nenable, or <code>None</code>, if the subscriber does not implement level-based\nfiltering or chooses not to implement this method. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_span\" class=\"method trait-impl\"><a href=\"#method.new_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_span</a>(&amp;self, span: &amp;Attributes&lt;'_&gt;) -&gt; Id</h4></section></summary><div class='docblock'>Visit the construction of a new span, returning a new <a href=\"super::span::Id\">span ID</a> for the\nspan being constructed. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">record</a>(&amp;self, span: &amp;Id, values: &amp;Record&lt;'_&gt;)</h4></section></summary><div class='docblock'>Record a set of values on a span. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.record_follows_from\" class=\"method trait-impl\"><a href=\"#method.record_follows_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">record_follows_from</a>(&amp;self, span: &amp;Id, follows: &amp;Id)</h4></section></summary><div class='docblock'>Adds an indication that <code>span</code> follows from the span with the id\n<code>follows</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.event_enabled\" class=\"method trait-impl\"><a href=\"#method.event_enabled\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">event_enabled</a>(&amp;self, event: &amp;Event&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determine if an [<code>Event</code>] should be recorded. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.event\" class=\"method trait-impl\"><a href=\"#method.event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">event</a>(&amp;self, event: &amp;Event&lt;'_&gt;)</h4></section></summary><div class='docblock'>Records that an <a href=\"super::event::Event\"><code>Event</code></a> has occurred. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enter\" class=\"method trait-impl\"><a href=\"#method.enter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">enter</a>(&amp;self, span: &amp;Id)</h4></section></summary><div class='docblock'>Records that a span has been entered. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exit\" class=\"method trait-impl\"><a href=\"#method.exit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">exit</a>(&amp;self, span: &amp;Id)</h4></section></summary><div class='docblock'>Records that a span has been exited. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_span\" class=\"method trait-impl\"><a href=\"#method.clone_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clone_span</a>(&amp;self, id: &amp;Id) -&gt; Id</h4></section></summary><div class='docblock'>Notifies the subscriber that a <a href=\"super::span::Id\">span ID</a> has been cloned. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_close\" class=\"method trait-impl\"><a href=\"#method.try_close\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_close</a>(&amp;self, id: Id) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Notifies the subscriber that a <a href=\"super::span::Id\">span ID</a> has been dropped, and returns\n<code>true</code> if there are now 0 IDs that refer to that span. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop_span\" class=\"method trait-impl\"><a href=\"#method.drop_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">drop_span</a>(&amp;self, id: Id)</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.1.2: use <code>Subscriber::try_close</code> instead</span></div></span><div class='docblock'><strong>This method is deprecated.</strong> <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_span\" class=\"method trait-impl\"><a href=\"#method.current_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_span</a>(&amp;self) -&gt; Current</h4></section></summary><div class='docblock'>Returns a type representing this subscriber’s view of the current span. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downcast_raw\" class=\"method trait-impl\"><a href=\"#method.downcast_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">downcast_raw</a>(&amp;self, id: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>If <code>self</code> is the same type as the provided <code>TypeId</code>, returns an untyped\n<code>*const</code> pointer to that type. Otherwise, returns <code>None</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_register_dispatch\" class=\"method trait-impl\"><a href=\"#method.on_register_dispatch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_register_dispatch</a>(&amp;self, subscriber: &amp;Dispatch)</h4></section></summary><div class='docblock'>Invoked when this subscriber becomes a [<code>Dispatch</code>]. <a>Read more</a></div></details></div></details>","Subscriber","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPathSegments-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-ToPathSegments-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ToPathSegments for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: ToPathSegments + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_path_segments\" class=\"method trait-impl\"><a href=\"#method.to_path_segments\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_path_segments</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PathSegments, PathSegmentError&gt;</h4></section></summary><div class='docblock'>Convert to [<code>PathSegments</code>].</div></details></div></details>","ToPathSegments","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnsafeFutureObj%3C'a,+T%3E-for-Box%3CF%3E\" class=\"impl\"><a href=\"#impl-UnsafeFutureObj%3C'a,+T%3E-for-Box%3CF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, F&gt; UnsafeFutureObj&lt;'a, T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.Future.html\" title=\"trait wasmer_wasix::runners::dproxy::hyper_proxy::Future\">Future</a>&lt;Output = T&gt; + 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw\" class=\"method trait-impl\"><a href=\"#method.into_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_raw</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.pointer.html\">*mut </a>dyn <a class=\"trait\" href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.Future.html\" title=\"trait wasmer_wasix::runners::dproxy::hyper_proxy::Future\">Future</a>&lt;Output = T&gt; + 'a</h4></section></summary><div class='docblock'>Convert an owned instance into a (conceptually owned) fat pointer. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">drop</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.pointer.html\">*mut </a>dyn <a class=\"trait\" href=\"wasmer_wasix/runners/dproxy/hyper_proxy/trait.Future.html\" title=\"trait wasmer_wasix::runners::dproxy::hyper_proxy::Future\">Future</a>&lt;Output = T&gt; + 'a)</h4></section></summary><div class='docblock'>Drops the future represented by the given fat pointer. <a>Read more</a></div></details></div></details>","UnsafeFutureObj<'a, T>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-Value-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Value for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: Value + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">record</a>(&amp;self, key: &amp;Field, visitor: &amp;mut dyn Visit)</h4></section></summary><div class='docblock'>Visits this value with the given <code>Visitor</code>.</div></details></div></details>","Value","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ViaRawPointer-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-ViaRawPointer-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ViaRawPointer for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Target</a> = T</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw\" class=\"method trait-impl\"><a href=\"#method.into_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_raw</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.pointer.html\">*mut T</a></h4></section></summary><div class='docblock'>Convert this object into a raw pointer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw\" class=\"method trait-impl\"><a href=\"#method.from_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">from_raw</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.pointer.html\">*mut T</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Convert a raw pointer back into this object. <a>Read more</a></div></details></div></details>","ViaRawPointer","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VisitOperator%3C'a%3E-for-Box%3CV%3E\" class=\"impl\"><a href=\"#impl-VisitOperator%3C'a%3E-for-Box%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, V&gt; VisitOperator&lt;'a&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt;<div class=\"where\">where\n    V: VisitOperator&lt;'a&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;V as VisitOperator&lt;'a&gt;&gt;::Output</h4></section></summary><div class='docblock'>The result type of the visitor.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_operator\" class=\"method trait-impl\"><a href=\"#method.visit_operator\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_operator</a>(\n    &amp;mut self,\n    op: &amp;Operator&lt;'a&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section></summary><div class='docblock'>Visits the [<code>Operator</code>] <code>op</code> using the given <code>offset</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_visitor\" class=\"method trait-impl\"><a href=\"#method.simd_visitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">simd_visitor</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut dyn VisitSimdOperator&lt;'a, Output = &lt;V as VisitOperator&lt;'a&gt;&gt;::Output&gt;&gt;</h4></section></summary><div class='docblock'>Returns a mutable reference to a [<code>VisitSimdOperator</code>] visitor. <a>Read more</a></div></details><section id=\"method.visit_unreachable\" class=\"method trait-impl\"><a href=\"#method.visit_unreachable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_unreachable</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_nop\" class=\"method trait-impl\"><a href=\"#method.visit_nop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_nop</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_block\" class=\"method trait-impl\"><a href=\"#method.visit_block\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_block</a>(\n    &amp;mut self,\n    blockty: BlockType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_loop\" class=\"method trait-impl\"><a href=\"#method.visit_loop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_loop</a>(\n    &amp;mut self,\n    blockty: BlockType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_if\" class=\"method trait-impl\"><a href=\"#method.visit_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_if</a>(\n    &amp;mut self,\n    blockty: BlockType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_else\" class=\"method trait-impl\"><a href=\"#method.visit_else\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_else</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_end\" class=\"method trait-impl\"><a href=\"#method.visit_end\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_end</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_br\" class=\"method trait-impl\"><a href=\"#method.visit_br\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_br</a>(\n    &amp;mut self,\n    relative_depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_br_if\" class=\"method trait-impl\"><a href=\"#method.visit_br_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_br_if</a>(\n    &amp;mut self,\n    relative_depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_br_table\" class=\"method trait-impl\"><a href=\"#method.visit_br_table\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_br_table</a>(\n    &amp;mut self,\n    targets: BrTable&lt;'a&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_return\" class=\"method trait-impl\"><a href=\"#method.visit_return\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_return</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_call\" class=\"method trait-impl\"><a href=\"#method.visit_call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_call</a>(\n    &amp;mut self,\n    function_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_call_indirect\" class=\"method trait-impl\"><a href=\"#method.visit_call_indirect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_call_indirect</a>(\n    &amp;mut self,\n    type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    table_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_drop\" class=\"method trait-impl\"><a href=\"#method.visit_drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_drop</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_select\" class=\"method trait-impl\"><a href=\"#method.visit_select\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_select</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_local_get\" class=\"method trait-impl\"><a href=\"#method.visit_local_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_local_get</a>(\n    &amp;mut self,\n    local_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_local_set\" class=\"method trait-impl\"><a href=\"#method.visit_local_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_local_set</a>(\n    &amp;mut self,\n    local_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_local_tee\" class=\"method trait-impl\"><a href=\"#method.visit_local_tee\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_local_tee</a>(\n    &amp;mut self,\n    local_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_get\" class=\"method trait-impl\"><a href=\"#method.visit_global_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_get</a>(\n    &amp;mut self,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_set\" class=\"method trait-impl\"><a href=\"#method.visit_global_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_set</a>(\n    &amp;mut self,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_load\" class=\"method trait-impl\"><a href=\"#method.visit_i32_load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_load</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_load\" class=\"method trait-impl\"><a href=\"#method.visit_i64_load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_load</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_load\" class=\"method trait-impl\"><a href=\"#method.visit_f32_load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_load</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_load\" class=\"method trait-impl\"><a href=\"#method.visit_f64_load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_load</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_load8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_load8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_load8_s</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_load8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_load8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_load8_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_load16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_load16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_load16_s</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_load16_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_load16_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_load16_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_load8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_load8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_load8_s</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_load8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_load8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_load8_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_load16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_load16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_load16_s</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_load16_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_load16_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_load16_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_load32_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_load32_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_load32_s</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_load32_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_load32_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_load32_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_store\" class=\"method trait-impl\"><a href=\"#method.visit_i32_store\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_store</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_store\" class=\"method trait-impl\"><a href=\"#method.visit_i64_store\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_store</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_store\" class=\"method trait-impl\"><a href=\"#method.visit_f32_store\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_store</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_store\" class=\"method trait-impl\"><a href=\"#method.visit_f64_store\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_store</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_store8\" class=\"method trait-impl\"><a href=\"#method.visit_i32_store8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_store8</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_store16\" class=\"method trait-impl\"><a href=\"#method.visit_i32_store16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_store16</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_store8\" class=\"method trait-impl\"><a href=\"#method.visit_i64_store8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_store8</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_store16\" class=\"method trait-impl\"><a href=\"#method.visit_i64_store16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_store16</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_store32\" class=\"method trait-impl\"><a href=\"#method.visit_i64_store32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_store32</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_memory_size\" class=\"method trait-impl\"><a href=\"#method.visit_memory_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_memory_size</a>(\n    &amp;mut self,\n    mem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_memory_grow\" class=\"method trait-impl\"><a href=\"#method.visit_memory_grow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_memory_grow</a>(\n    &amp;mut self,\n    mem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_const\" class=\"method trait-impl\"><a href=\"#method.visit_i32_const\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_const</a>(\n    &amp;mut self,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i32.html\">i32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_const\" class=\"method trait-impl\"><a href=\"#method.visit_i64_const\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_const</a>(\n    &amp;mut self,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.i64.html\">i64</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_const\" class=\"method trait-impl\"><a href=\"#method.visit_f32_const\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_const</a>(\n    &amp;mut self,\n    value: Ieee32,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_const\" class=\"method trait-impl\"><a href=\"#method.visit_f64_const\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_const</a>(\n    &amp;mut self,\n    value: Ieee64,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_eqz\" class=\"method trait-impl\"><a href=\"#method.visit_i32_eqz\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_eqz</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_eq\" class=\"method trait-impl\"><a href=\"#method.visit_i32_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_ne\" class=\"method trait-impl\"><a href=\"#method.visit_i32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_lt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_lt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_lt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_lt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_lt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_lt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_gt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_gt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_gt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_gt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_gt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_gt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_le_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_le_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_le_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_le_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_le_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_le_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_ge_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_ge_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_ge_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_ge_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_ge_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_ge_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_eqz\" class=\"method trait-impl\"><a href=\"#method.visit_i64_eqz\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_eqz</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_eq\" class=\"method trait-impl\"><a href=\"#method.visit_i64_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_ne\" class=\"method trait-impl\"><a href=\"#method.visit_i64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_lt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_lt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_lt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_lt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_lt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_lt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_gt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_gt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_gt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_gt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_gt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_gt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_le_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_le_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_le_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_le_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_le_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_le_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_ge_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_ge_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_ge_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_ge_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_ge_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_ge_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_eq\" class=\"method trait-impl\"><a href=\"#method.visit_f32_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_ne\" class=\"method trait-impl\"><a href=\"#method.visit_f32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_lt\" class=\"method trait-impl\"><a href=\"#method.visit_f32_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_lt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_gt\" class=\"method trait-impl\"><a href=\"#method.visit_f32_gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_gt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_le\" class=\"method trait-impl\"><a href=\"#method.visit_f32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_le</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_ge\" class=\"method trait-impl\"><a href=\"#method.visit_f32_ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_ge</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_eq\" class=\"method trait-impl\"><a href=\"#method.visit_f64_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_ne\" class=\"method trait-impl\"><a href=\"#method.visit_f64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_lt\" class=\"method trait-impl\"><a href=\"#method.visit_f64_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_lt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_gt\" class=\"method trait-impl\"><a href=\"#method.visit_f64_gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_gt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_le\" class=\"method trait-impl\"><a href=\"#method.visit_f64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_le</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_ge\" class=\"method trait-impl\"><a href=\"#method.visit_f64_ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_ge</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_clz\" class=\"method trait-impl\"><a href=\"#method.visit_i32_clz\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_clz</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_ctz\" class=\"method trait-impl\"><a href=\"#method.visit_i32_ctz\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_ctz</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_popcnt\" class=\"method trait-impl\"><a href=\"#method.visit_i32_popcnt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_popcnt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_add\" class=\"method trait-impl\"><a href=\"#method.visit_i32_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_sub\" class=\"method trait-impl\"><a href=\"#method.visit_i32_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_mul\" class=\"method trait-impl\"><a href=\"#method.visit_i32_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_mul</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_div_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_div_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_div_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_div_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_div_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_div_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_rem_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_rem_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_rem_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_rem_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_rem_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_rem_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_and\" class=\"method trait-impl\"><a href=\"#method.visit_i32_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_and</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_or\" class=\"method trait-impl\"><a href=\"#method.visit_i32_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_or</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_xor\" class=\"method trait-impl\"><a href=\"#method.visit_i32_xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_xor</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_shl\" class=\"method trait-impl\"><a href=\"#method.visit_i32_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_shl</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_shr_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_shr_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_shr_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_shr_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_shr_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_shr_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_rotl\" class=\"method trait-impl\"><a href=\"#method.visit_i32_rotl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_rotl</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_rotr\" class=\"method trait-impl\"><a href=\"#method.visit_i32_rotr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_rotr</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_clz\" class=\"method trait-impl\"><a href=\"#method.visit_i64_clz\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_clz</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_ctz\" class=\"method trait-impl\"><a href=\"#method.visit_i64_ctz\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_ctz</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_popcnt\" class=\"method trait-impl\"><a href=\"#method.visit_i64_popcnt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_popcnt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_add\" class=\"method trait-impl\"><a href=\"#method.visit_i64_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_sub\" class=\"method trait-impl\"><a href=\"#method.visit_i64_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_mul\" class=\"method trait-impl\"><a href=\"#method.visit_i64_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_mul</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_div_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_div_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_div_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_div_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_div_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_div_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_rem_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_rem_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_rem_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_rem_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_rem_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_rem_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_and\" class=\"method trait-impl\"><a href=\"#method.visit_i64_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_and</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_or\" class=\"method trait-impl\"><a href=\"#method.visit_i64_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_or</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_xor\" class=\"method trait-impl\"><a href=\"#method.visit_i64_xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_xor</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_shl\" class=\"method trait-impl\"><a href=\"#method.visit_i64_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_shl</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_shr_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_shr_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_shr_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_shr_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_shr_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_shr_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_rotl\" class=\"method trait-impl\"><a href=\"#method.visit_i64_rotl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_rotl</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_rotr\" class=\"method trait-impl\"><a href=\"#method.visit_i64_rotr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_rotr</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_abs\" class=\"method trait-impl\"><a href=\"#method.visit_f32_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_abs</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_neg\" class=\"method trait-impl\"><a href=\"#method.visit_f32_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_neg</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_ceil\" class=\"method trait-impl\"><a href=\"#method.visit_f32_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_ceil</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_floor\" class=\"method trait-impl\"><a href=\"#method.visit_f32_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_floor</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_trunc\" class=\"method trait-impl\"><a href=\"#method.visit_f32_trunc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_trunc</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_nearest\" class=\"method trait-impl\"><a href=\"#method.visit_f32_nearest\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_nearest</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_sqrt\" class=\"method trait-impl\"><a href=\"#method.visit_f32_sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_sqrt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_add\" class=\"method trait-impl\"><a href=\"#method.visit_f32_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_sub\" class=\"method trait-impl\"><a href=\"#method.visit_f32_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_mul\" class=\"method trait-impl\"><a href=\"#method.visit_f32_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_mul</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_div\" class=\"method trait-impl\"><a href=\"#method.visit_f32_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_div</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_min\" class=\"method trait-impl\"><a href=\"#method.visit_f32_min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_min</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_max\" class=\"method trait-impl\"><a href=\"#method.visit_f32_max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_max</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_copysign\" class=\"method trait-impl\"><a href=\"#method.visit_f32_copysign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_copysign</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_abs\" class=\"method trait-impl\"><a href=\"#method.visit_f64_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_abs</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_neg\" class=\"method trait-impl\"><a href=\"#method.visit_f64_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_neg</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_ceil\" class=\"method trait-impl\"><a href=\"#method.visit_f64_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_ceil</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_floor\" class=\"method trait-impl\"><a href=\"#method.visit_f64_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_floor</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_trunc\" class=\"method trait-impl\"><a href=\"#method.visit_f64_trunc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_trunc</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_nearest\" class=\"method trait-impl\"><a href=\"#method.visit_f64_nearest\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_nearest</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_sqrt\" class=\"method trait-impl\"><a href=\"#method.visit_f64_sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_sqrt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_add\" class=\"method trait-impl\"><a href=\"#method.visit_f64_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_sub\" class=\"method trait-impl\"><a href=\"#method.visit_f64_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_mul\" class=\"method trait-impl\"><a href=\"#method.visit_f64_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_mul</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_div\" class=\"method trait-impl\"><a href=\"#method.visit_f64_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_div</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_min\" class=\"method trait-impl\"><a href=\"#method.visit_f64_min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_min</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_max\" class=\"method trait-impl\"><a href=\"#method.visit_f64_max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_max</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_copysign\" class=\"method trait-impl\"><a href=\"#method.visit_f64_copysign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_copysign</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_wrap_i64\" class=\"method trait-impl\"><a href=\"#method.visit_i32_wrap_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_wrap_i64</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_trunc_f32_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_trunc_f32_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_trunc_f32_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_trunc_f32_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_trunc_f32_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_trunc_f32_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_trunc_f64_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_trunc_f64_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_trunc_f64_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_trunc_f64_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_trunc_f64_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_trunc_f64_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_extend_i32_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_extend_i32_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_extend_i32_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_extend_i32_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_extend_i32_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_extend_i32_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_trunc_f32_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_trunc_f32_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_trunc_f32_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_trunc_f32_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_trunc_f32_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_trunc_f32_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_trunc_f64_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_trunc_f64_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_trunc_f64_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_trunc_f64_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_trunc_f64_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_trunc_f64_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_convert_i32_s\" class=\"method trait-impl\"><a href=\"#method.visit_f32_convert_i32_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_convert_i32_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_convert_i32_u\" class=\"method trait-impl\"><a href=\"#method.visit_f32_convert_i32_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_convert_i32_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_convert_i64_s\" class=\"method trait-impl\"><a href=\"#method.visit_f32_convert_i64_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_convert_i64_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_convert_i64_u\" class=\"method trait-impl\"><a href=\"#method.visit_f32_convert_i64_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_convert_i64_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_demote_f64\" class=\"method trait-impl\"><a href=\"#method.visit_f32_demote_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_demote_f64</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_convert_i32_s\" class=\"method trait-impl\"><a href=\"#method.visit_f64_convert_i32_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_convert_i32_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_convert_i32_u\" class=\"method trait-impl\"><a href=\"#method.visit_f64_convert_i32_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_convert_i32_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_convert_i64_s\" class=\"method trait-impl\"><a href=\"#method.visit_f64_convert_i64_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_convert_i64_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_convert_i64_u\" class=\"method trait-impl\"><a href=\"#method.visit_f64_convert_i64_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_convert_i64_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_promote_f32\" class=\"method trait-impl\"><a href=\"#method.visit_f64_promote_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_promote_f32</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_reinterpret_f32\" class=\"method trait-impl\"><a href=\"#method.visit_i32_reinterpret_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_reinterpret_f32</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_reinterpret_f64\" class=\"method trait-impl\"><a href=\"#method.visit_i64_reinterpret_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_reinterpret_f64</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32_reinterpret_i32\" class=\"method trait-impl\"><a href=\"#method.visit_f32_reinterpret_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32_reinterpret_i32</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64_reinterpret_i64\" class=\"method trait-impl\"><a href=\"#method.visit_f64_reinterpret_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64_reinterpret_i64</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_extend8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_extend8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_extend8_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_extend16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_extend16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_extend16_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_extend8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_extend8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_extend8_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_extend16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_extend16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_extend16_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_extend32_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_extend32_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_extend32_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_eq\" class=\"method trait-impl\"><a href=\"#method.visit_ref_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_new\" class=\"method trait-impl\"><a href=\"#method.visit_struct_new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_new</a>(\n    &amp;mut self,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_new_default\" class=\"method trait-impl\"><a href=\"#method.visit_struct_new_default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_new_default</a>(\n    &amp;mut self,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_get\" class=\"method trait-impl\"><a href=\"#method.visit_struct_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_get</a>(\n    &amp;mut self,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_get_s\" class=\"method trait-impl\"><a href=\"#method.visit_struct_get_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_get_s</a>(\n    &amp;mut self,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_get_u\" class=\"method trait-impl\"><a href=\"#method.visit_struct_get_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_get_u</a>(\n    &amp;mut self,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_set\" class=\"method trait-impl\"><a href=\"#method.visit_struct_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_set</a>(\n    &amp;mut self,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_new\" class=\"method trait-impl\"><a href=\"#method.visit_array_new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_new</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_new_default\" class=\"method trait-impl\"><a href=\"#method.visit_array_new_default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_new_default</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_new_fixed\" class=\"method trait-impl\"><a href=\"#method.visit_array_new_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_new_fixed</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    array_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_new_data\" class=\"method trait-impl\"><a href=\"#method.visit_array_new_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_new_data</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    array_data_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_new_elem\" class=\"method trait-impl\"><a href=\"#method.visit_array_new_elem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_new_elem</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    array_elem_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_get\" class=\"method trait-impl\"><a href=\"#method.visit_array_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_get</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_get_s\" class=\"method trait-impl\"><a href=\"#method.visit_array_get_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_get_s</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_get_u\" class=\"method trait-impl\"><a href=\"#method.visit_array_get_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_get_u</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_set\" class=\"method trait-impl\"><a href=\"#method.visit_array_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_set</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_len\" class=\"method trait-impl\"><a href=\"#method.visit_array_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_len</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_fill\" class=\"method trait-impl\"><a href=\"#method.visit_array_fill\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_fill</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_copy\" class=\"method trait-impl\"><a href=\"#method.visit_array_copy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_copy</a>(\n    &amp;mut self,\n    array_type_index_dst: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    array_type_index_src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_init_data\" class=\"method trait-impl\"><a href=\"#method.visit_array_init_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_init_data</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    array_data_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_init_elem\" class=\"method trait-impl\"><a href=\"#method.visit_array_init_elem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_init_elem</a>(\n    &amp;mut self,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    array_elem_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_test_non_null\" class=\"method trait-impl\"><a href=\"#method.visit_ref_test_non_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_test_non_null</a>(\n    &amp;mut self,\n    hty: HeapType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_test_nullable\" class=\"method trait-impl\"><a href=\"#method.visit_ref_test_nullable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_test_nullable</a>(\n    &amp;mut self,\n    hty: HeapType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_cast_non_null\" class=\"method trait-impl\"><a href=\"#method.visit_ref_cast_non_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_cast_non_null</a>(\n    &amp;mut self,\n    hty: HeapType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_cast_nullable\" class=\"method trait-impl\"><a href=\"#method.visit_ref_cast_nullable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_cast_nullable</a>(\n    &amp;mut self,\n    hty: HeapType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_br_on_cast\" class=\"method trait-impl\"><a href=\"#method.visit_br_on_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_br_on_cast</a>(\n    &amp;mut self,\n    relative_depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    from_ref_type: RefType,\n    to_ref_type: RefType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_br_on_cast_fail\" class=\"method trait-impl\"><a href=\"#method.visit_br_on_cast_fail\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_br_on_cast_fail</a>(\n    &amp;mut self,\n    relative_depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    from_ref_type: RefType,\n    to_ref_type: RefType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_any_convert_extern\" class=\"method trait-impl\"><a href=\"#method.visit_any_convert_extern\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_any_convert_extern</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_extern_convert_any\" class=\"method trait-impl\"><a href=\"#method.visit_extern_convert_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_extern_convert_any</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_i31\" class=\"method trait-impl\"><a href=\"#method.visit_ref_i31\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_i31</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i31_get_s\" class=\"method trait-impl\"><a href=\"#method.visit_i31_get_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i31_get_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i31_get_u\" class=\"method trait-impl\"><a href=\"#method.visit_i31_get_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i31_get_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_trunc_sat_f32_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_trunc_sat_f32_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_trunc_sat_f32_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_trunc_sat_f32_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_trunc_sat_f32_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_trunc_sat_f32_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_trunc_sat_f64_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32_trunc_sat_f64_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_trunc_sat_f64_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_trunc_sat_f64_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_trunc_sat_f64_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_trunc_sat_f64_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_trunc_sat_f32_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_trunc_sat_f32_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_trunc_sat_f32_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_trunc_sat_f32_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_trunc_sat_f32_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_trunc_sat_f32_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_trunc_sat_f64_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_trunc_sat_f64_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_trunc_sat_f64_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_trunc_sat_f64_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_trunc_sat_f64_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_trunc_sat_f64_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_memory_init\" class=\"method trait-impl\"><a href=\"#method.visit_memory_init\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_memory_init</a>(\n    &amp;mut self,\n    data_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    mem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_data_drop\" class=\"method trait-impl\"><a href=\"#method.visit_data_drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_data_drop</a>(\n    &amp;mut self,\n    data_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_memory_copy\" class=\"method trait-impl\"><a href=\"#method.visit_memory_copy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_memory_copy</a>(\n    &amp;mut self,\n    dst_mem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    src_mem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_memory_fill\" class=\"method trait-impl\"><a href=\"#method.visit_memory_fill\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_memory_fill</a>(\n    &amp;mut self,\n    mem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_init\" class=\"method trait-impl\"><a href=\"#method.visit_table_init\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_init</a>(\n    &amp;mut self,\n    elem_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    table: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_elem_drop\" class=\"method trait-impl\"><a href=\"#method.visit_elem_drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_elem_drop</a>(\n    &amp;mut self,\n    elem_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_copy\" class=\"method trait-impl\"><a href=\"#method.visit_table_copy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_copy</a>(\n    &amp;mut self,\n    dst_table: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    src_table: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_typed_select\" class=\"method trait-impl\"><a href=\"#method.visit_typed_select\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_typed_select</a>(\n    &amp;mut self,\n    ty: ValType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_null\" class=\"method trait-impl\"><a href=\"#method.visit_ref_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_null</a>(\n    &amp;mut self,\n    hty: HeapType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_is_null\" class=\"method trait-impl\"><a href=\"#method.visit_ref_is_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_is_null</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_func\" class=\"method trait-impl\"><a href=\"#method.visit_ref_func\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_func</a>(\n    &amp;mut self,\n    function_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_fill\" class=\"method trait-impl\"><a href=\"#method.visit_table_fill\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_fill</a>(\n    &amp;mut self,\n    table: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_get\" class=\"method trait-impl\"><a href=\"#method.visit_table_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_get</a>(\n    &amp;mut self,\n    table: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_set\" class=\"method trait-impl\"><a href=\"#method.visit_table_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_set</a>(\n    &amp;mut self,\n    table: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_grow\" class=\"method trait-impl\"><a href=\"#method.visit_table_grow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_grow</a>(\n    &amp;mut self,\n    table: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_size\" class=\"method trait-impl\"><a href=\"#method.visit_table_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_size</a>(\n    &amp;mut self,\n    table: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_return_call\" class=\"method trait-impl\"><a href=\"#method.visit_return_call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_return_call</a>(\n    &amp;mut self,\n    function_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_return_call_indirect\" class=\"method trait-impl\"><a href=\"#method.visit_return_call_indirect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_return_call_indirect</a>(\n    &amp;mut self,\n    type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    table_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_memory_discard\" class=\"method trait-impl\"><a href=\"#method.visit_memory_discard\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_memory_discard</a>(\n    &amp;mut self,\n    mem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_memory_atomic_notify\" class=\"method trait-impl\"><a href=\"#method.visit_memory_atomic_notify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_memory_atomic_notify</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_memory_atomic_wait32\" class=\"method trait-impl\"><a href=\"#method.visit_memory_atomic_wait32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_memory_atomic_wait32</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_memory_atomic_wait64\" class=\"method trait-impl\"><a href=\"#method.visit_memory_atomic_wait64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_memory_atomic_wait64</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_atomic_fence\" class=\"method trait-impl\"><a href=\"#method.visit_atomic_fence\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_atomic_fence</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_load\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_load</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_load\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_load</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_load8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_load8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_load8_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_load16_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_load16_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_load16_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_load8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_load8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_load8_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_load16_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_load16_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_load16_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_load32_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_load32_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_load32_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_store\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_store\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_store</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_store\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_store\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_store</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_store8\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_store8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_store8</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_store16\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_store16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_store16</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_store8\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_store8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_store8</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_store16\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_store16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_store16</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_store32\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_store32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_store32</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw_add\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw_add</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw_add\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw_add</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw8_add_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw8_add_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw8_add_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw16_add_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw16_add_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw16_add_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw8_add_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw8_add_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw8_add_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw16_add_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw16_add_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw16_add_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw32_add_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw32_add_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw32_add_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw_sub\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw_sub</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw_sub\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw_sub</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw8_sub_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw8_sub_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw8_sub_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw16_sub_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw16_sub_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw16_sub_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw8_sub_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw8_sub_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw8_sub_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw16_sub_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw16_sub_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw16_sub_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw32_sub_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw32_sub_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw32_sub_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw_and\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw_and</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw_and\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw_and</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw8_and_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw8_and_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw8_and_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw16_and_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw16_and_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw16_and_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw8_and_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw8_and_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw8_and_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw16_and_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw16_and_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw16_and_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw32_and_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw32_and_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw32_and_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw_or\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw_or</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw_or\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw_or</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw8_or_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw8_or_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw8_or_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw16_or_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw16_or_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw16_or_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw8_or_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw8_or_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw8_or_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw16_or_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw16_or_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw16_or_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw32_or_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw32_or_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw32_or_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw_xor\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw_xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw_xor</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw_xor\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw_xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw_xor</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw8_xor_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw8_xor_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw8_xor_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw16_xor_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw16_xor_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw16_xor_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw8_xor_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw8_xor_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw8_xor_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw16_xor_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw16_xor_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw16_xor_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw32_xor_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw32_xor_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw32_xor_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw_xchg\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw_xchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw_xchg</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw_xchg\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw_xchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw_xchg</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw8_xchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw8_xchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw8_xchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw16_xchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw16_xchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw16_xchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw8_xchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw8_xchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw8_xchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw16_xchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw16_xchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw16_xchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw32_xchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw32_xchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw32_xchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw_cmpxchg\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw_cmpxchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw_cmpxchg</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw_cmpxchg\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw_cmpxchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw_cmpxchg</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw8_cmpxchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw8_cmpxchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw8_cmpxchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32_atomic_rmw16_cmpxchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32_atomic_rmw16_cmpxchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32_atomic_rmw16_cmpxchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw8_cmpxchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw8_cmpxchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw8_cmpxchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw16_cmpxchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw16_cmpxchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw16_cmpxchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_atomic_rmw32_cmpxchg_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_atomic_rmw32_cmpxchg_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_atomic_rmw32_cmpxchg_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_try_table\" class=\"method trait-impl\"><a href=\"#method.visit_try_table\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_try_table</a>(\n    &amp;mut self,\n    try_table: TryTable,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_throw\" class=\"method trait-impl\"><a href=\"#method.visit_throw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_throw</a>(\n    &amp;mut self,\n    tag_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_throw_ref\" class=\"method trait-impl\"><a href=\"#method.visit_throw_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_throw_ref</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_try\" class=\"method trait-impl\"><a href=\"#method.visit_try\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_try</a>(\n    &amp;mut self,\n    blockty: BlockType,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_catch\" class=\"method trait-impl\"><a href=\"#method.visit_catch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_catch</a>(\n    &amp;mut self,\n    tag_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_rethrow\" class=\"method trait-impl\"><a href=\"#method.visit_rethrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_rethrow</a>(\n    &amp;mut self,\n    relative_depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_delegate\" class=\"method trait-impl\"><a href=\"#method.visit_delegate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_delegate</a>(\n    &amp;mut self,\n    relative_depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_catch_all\" class=\"method trait-impl\"><a href=\"#method.visit_catch_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_catch_all</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_atomic_get\" class=\"method trait-impl\"><a href=\"#method.visit_global_atomic_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_atomic_get</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_atomic_set\" class=\"method trait-impl\"><a href=\"#method.visit_global_atomic_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_atomic_set</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_atomic_rmw_add\" class=\"method trait-impl\"><a href=\"#method.visit_global_atomic_rmw_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_atomic_rmw_add</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_atomic_rmw_sub\" class=\"method trait-impl\"><a href=\"#method.visit_global_atomic_rmw_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_atomic_rmw_sub</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_atomic_rmw_and\" class=\"method trait-impl\"><a href=\"#method.visit_global_atomic_rmw_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_atomic_rmw_and</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_atomic_rmw_or\" class=\"method trait-impl\"><a href=\"#method.visit_global_atomic_rmw_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_atomic_rmw_or</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_atomic_rmw_xor\" class=\"method trait-impl\"><a href=\"#method.visit_global_atomic_rmw_xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_atomic_rmw_xor</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_atomic_rmw_xchg\" class=\"method trait-impl\"><a href=\"#method.visit_global_atomic_rmw_xchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_atomic_rmw_xchg</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_global_atomic_rmw_cmpxchg\" class=\"method trait-impl\"><a href=\"#method.visit_global_atomic_rmw_cmpxchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_global_atomic_rmw_cmpxchg</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    global_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_atomic_get\" class=\"method trait-impl\"><a href=\"#method.visit_table_atomic_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_atomic_get</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    table_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_atomic_set\" class=\"method trait-impl\"><a href=\"#method.visit_table_atomic_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_atomic_set</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    table_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_atomic_rmw_xchg\" class=\"method trait-impl\"><a href=\"#method.visit_table_atomic_rmw_xchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_atomic_rmw_xchg</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    table_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_table_atomic_rmw_cmpxchg\" class=\"method trait-impl\"><a href=\"#method.visit_table_atomic_rmw_cmpxchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_table_atomic_rmw_cmpxchg</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    table_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_get\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_get</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_get_s\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_get_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_get_s</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_get_u\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_get_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_get_u</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_set\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_set</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_rmw_add\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_rmw_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_rmw_add</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_rmw_sub\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_rmw_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_rmw_sub</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_rmw_and\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_rmw_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_rmw_and</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_rmw_or\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_rmw_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_rmw_or</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_rmw_xor\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_rmw_xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_rmw_xor</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_rmw_xchg\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_rmw_xchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_rmw_xchg</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_struct_atomic_rmw_cmpxchg\" class=\"method trait-impl\"><a href=\"#method.visit_struct_atomic_rmw_cmpxchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_struct_atomic_rmw_cmpxchg</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    struct_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    field_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_get\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_get</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_get_s\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_get_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_get_s</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_get_u\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_get_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_get_u</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_set\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_set</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_rmw_add\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_rmw_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_rmw_add</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_rmw_sub\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_rmw_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_rmw_sub</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_rmw_and\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_rmw_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_rmw_and</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_rmw_or\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_rmw_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_rmw_or</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_rmw_xor\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_rmw_xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_rmw_xor</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_rmw_xchg\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_rmw_xchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_rmw_xchg</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_array_atomic_rmw_cmpxchg\" class=\"method trait-impl\"><a href=\"#method.visit_array_atomic_rmw_cmpxchg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_array_atomic_rmw_cmpxchg</a>(\n    &amp;mut self,\n    ordering: Ordering,\n    array_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_i31_shared\" class=\"method trait-impl\"><a href=\"#method.visit_ref_i31_shared\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_i31_shared</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_call_ref\" class=\"method trait-impl\"><a href=\"#method.visit_call_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_call_ref</a>(\n    &amp;mut self,\n    type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_return_call_ref\" class=\"method trait-impl\"><a href=\"#method.visit_return_call_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_return_call_ref</a>(\n    &amp;mut self,\n    type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_ref_as_non_null\" class=\"method trait-impl\"><a href=\"#method.visit_ref_as_non_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_ref_as_non_null</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_br_on_null\" class=\"method trait-impl\"><a href=\"#method.visit_br_on_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_br_on_null</a>(\n    &amp;mut self,\n    relative_depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_br_on_non_null\" class=\"method trait-impl\"><a href=\"#method.visit_br_on_non_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_br_on_non_null</a>(\n    &amp;mut self,\n    relative_depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_cont_new\" class=\"method trait-impl\"><a href=\"#method.visit_cont_new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_cont_new</a>(\n    &amp;mut self,\n    cont_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_cont_bind\" class=\"method trait-impl\"><a href=\"#method.visit_cont_bind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_cont_bind</a>(\n    &amp;mut self,\n    argument_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    result_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_suspend\" class=\"method trait-impl\"><a href=\"#method.visit_suspend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_suspend</a>(\n    &amp;mut self,\n    tag_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_resume\" class=\"method trait-impl\"><a href=\"#method.visit_resume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_resume</a>(\n    &amp;mut self,\n    cont_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    resume_table: ResumeTable,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_resume_throw\" class=\"method trait-impl\"><a href=\"#method.visit_resume_throw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_resume_throw</a>(\n    &amp;mut self,\n    cont_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    tag_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    resume_table: ResumeTable,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_switch\" class=\"method trait-impl\"><a href=\"#method.visit_switch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_switch</a>(\n    &amp;mut self,\n    cont_type_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    tag_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_add128\" class=\"method trait-impl\"><a href=\"#method.visit_i64_add128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_add128</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_sub128\" class=\"method trait-impl\"><a href=\"#method.visit_i64_sub128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_sub128</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_mul_wide_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64_mul_wide_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_mul_wide_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64_mul_wide_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64_mul_wide_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64_mul_wide_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section></div></details>","VisitOperator<'a>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VisitSimdOperator%3C'a%3E-for-Box%3CV%3E\" class=\"impl\"><a href=\"#impl-VisitSimdOperator%3C'a%3E-for-Box%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, V&gt; VisitSimdOperator&lt;'a&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt;<div class=\"where\">where\n    V: VisitSimdOperator&lt;'a&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.visit_v128_load\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load8x8_s\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load8x8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load8x8_s</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load8x8_u\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load8x8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load8x8_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load16x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load16x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load16x4_s</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load16x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load16x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load16x4_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load32x2_s\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load32x2_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load32x2_s</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load32x2_u\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load32x2_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load32x2_u</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load8_splat\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load8_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load8_splat</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load16_splat\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load16_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load16_splat</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load32_splat\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load32_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load32_splat</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load64_splat\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load64_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load64_splat</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load32_zero\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load32_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load32_zero</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load64_zero\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load64_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load64_zero</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_store\" class=\"method trait-impl\"><a href=\"#method.visit_v128_store\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_store</a>(\n    &amp;mut self,\n    memarg: MemArg,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load8_lane\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load8_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load8_lane</a>(\n    &amp;mut self,\n    memarg: MemArg,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load16_lane\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load16_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load16_lane</a>(\n    &amp;mut self,\n    memarg: MemArg,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load32_lane\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load32_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load32_lane</a>(\n    &amp;mut self,\n    memarg: MemArg,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_load64_lane\" class=\"method trait-impl\"><a href=\"#method.visit_v128_load64_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_load64_lane</a>(\n    &amp;mut self,\n    memarg: MemArg,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_store8_lane\" class=\"method trait-impl\"><a href=\"#method.visit_v128_store8_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_store8_lane</a>(\n    &amp;mut self,\n    memarg: MemArg,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_store16_lane\" class=\"method trait-impl\"><a href=\"#method.visit_v128_store16_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_store16_lane</a>(\n    &amp;mut self,\n    memarg: MemArg,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_store32_lane\" class=\"method trait-impl\"><a href=\"#method.visit_v128_store32_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_store32_lane</a>(\n    &amp;mut self,\n    memarg: MemArg,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_store64_lane\" class=\"method trait-impl\"><a href=\"#method.visit_v128_store64_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_store64_lane</a>(\n    &amp;mut self,\n    memarg: MemArg,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_const\" class=\"method trait-impl\"><a href=\"#method.visit_v128_const\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_const</a>(\n    &amp;mut self,\n    value: V128,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_shuffle\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_shuffle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_shuffle</a>(\n    &amp;mut self,\n    lanes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.array.html\">16</a>],\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_extract_lane_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_extract_lane_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_extract_lane_s</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_extract_lane_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_extract_lane_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_extract_lane_u</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_replace_lane\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_replace_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_replace_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extract_lane_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extract_lane_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extract_lane_s</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extract_lane_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extract_lane_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extract_lane_u</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_replace_lane\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_replace_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_replace_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extract_lane\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extract_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extract_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_replace_lane\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_replace_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_replace_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_extract_lane\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_extract_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_extract_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_replace_lane\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_replace_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_replace_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_extract_lane\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_extract_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_extract_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_replace_lane\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_replace_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_replace_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_extract_lane\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_extract_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_extract_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_replace_lane\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_replace_lane\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_replace_lane</a>(\n    &amp;mut self,\n    lane: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_swizzle\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_swizzle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_swizzle</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_splat\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_splat</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_splat\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_splat</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_splat\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_splat</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_splat\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_splat</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_splat\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_splat</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_splat\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_splat</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_eq\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_ne\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_lt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_lt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_lt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_lt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_lt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_lt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_gt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_gt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_gt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_gt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_gt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_gt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_le_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_le_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_le_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_le_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_le_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_le_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_ge_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_ge_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_ge_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_ge_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_ge_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_ge_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_eq\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_ne\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_lt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_lt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_lt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_lt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_lt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_lt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_gt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_gt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_gt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_gt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_gt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_gt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_le_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_le_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_le_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_le_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_le_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_le_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_ge_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_ge_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_ge_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_ge_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_ge_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_ge_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_eq\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_ne\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_lt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_lt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_lt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_lt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_lt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_lt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_gt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_gt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_gt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_gt_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_gt_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_gt_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_le_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_le_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_le_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_le_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_le_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_le_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_ge_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_ge_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_ge_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_ge_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_ge_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_ge_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_eq\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_ne\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_lt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_lt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_lt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_gt_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_gt_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_gt_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_le_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_le_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_le_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_ge_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_ge_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_ge_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_eq\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_ne\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_lt\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_lt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_gt\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_gt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_le\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_le</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_ge\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_ge</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_eq\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_eq</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_ne\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_ne</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_lt\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_lt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_gt\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_gt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_le\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_le</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_ge\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_ge</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_not\" class=\"method trait-impl\"><a href=\"#method.visit_v128_not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_not</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_and\" class=\"method trait-impl\"><a href=\"#method.visit_v128_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_and</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_andnot\" class=\"method trait-impl\"><a href=\"#method.visit_v128_andnot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_andnot</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_or\" class=\"method trait-impl\"><a href=\"#method.visit_v128_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_or</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_xor\" class=\"method trait-impl\"><a href=\"#method.visit_v128_xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_xor</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_bitselect\" class=\"method trait-impl\"><a href=\"#method.visit_v128_bitselect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_bitselect</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_v128_any_true\" class=\"method trait-impl\"><a href=\"#method.visit_v128_any_true\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_v128_any_true</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_abs\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_abs</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_neg\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_neg</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_popcnt\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_popcnt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_popcnt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_all_true\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_all_true\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_all_true</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_bitmask\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_bitmask\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_bitmask</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_narrow_i16x8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_narrow_i16x8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_narrow_i16x8_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_narrow_i16x8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_narrow_i16x8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_narrow_i16x8_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_shl\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_shl</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_shr_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_shr_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_shr_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_shr_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_shr_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_shr_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_add\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_add_sat_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_add_sat_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_add_sat_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_add_sat_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_add_sat_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_add_sat_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_sub\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_sub_sat_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_sub_sat_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_sub_sat_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_sub_sat_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_sub_sat_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_sub_sat_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_min_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_min_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_min_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_min_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_min_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_min_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_max_s\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_max_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_max_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_max_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_max_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_max_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_avgr_u\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_avgr_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_avgr_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extadd_pairwise_i8x16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extadd_pairwise_i8x16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extadd_pairwise_i8x16_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extadd_pairwise_i8x16_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extadd_pairwise_i8x16_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extadd_pairwise_i8x16_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_abs\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_abs</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_neg\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_neg</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_q15mulr_sat_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_q15mulr_sat_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_q15mulr_sat_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_all_true\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_all_true\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_all_true</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_bitmask\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_bitmask\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_bitmask</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_narrow_i32x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_narrow_i32x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_narrow_i32x4_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_narrow_i32x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_narrow_i32x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_narrow_i32x4_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extend_low_i8x16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extend_low_i8x16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extend_low_i8x16_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extend_high_i8x16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extend_high_i8x16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extend_high_i8x16_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extend_low_i8x16_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extend_low_i8x16_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extend_low_i8x16_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extend_high_i8x16_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extend_high_i8x16_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extend_high_i8x16_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_shl\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_shl</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_shr_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_shr_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_shr_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_shr_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_shr_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_shr_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_add\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_add_sat_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_add_sat_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_add_sat_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_add_sat_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_add_sat_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_add_sat_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_sub\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_sub_sat_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_sub_sat_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_sub_sat_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_sub_sat_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_sub_sat_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_sub_sat_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_mul\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_mul</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_min_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_min_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_min_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_min_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_min_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_min_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_max_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_max_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_max_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_max_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_max_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_max_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_avgr_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_avgr_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_avgr_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extmul_low_i8x16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extmul_low_i8x16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extmul_low_i8x16_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extmul_high_i8x16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extmul_high_i8x16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extmul_high_i8x16_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extmul_low_i8x16_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extmul_low_i8x16_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extmul_low_i8x16_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_extmul_high_i8x16_u\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_extmul_high_i8x16_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_extmul_high_i8x16_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extadd_pairwise_i16x8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extadd_pairwise_i16x8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extadd_pairwise_i16x8_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extadd_pairwise_i16x8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extadd_pairwise_i16x8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extadd_pairwise_i16x8_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_abs\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_abs</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_neg\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_neg</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_all_true\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_all_true\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_all_true</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_bitmask\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_bitmask\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_bitmask</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extend_low_i16x8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extend_low_i16x8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extend_low_i16x8_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extend_high_i16x8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extend_high_i16x8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extend_high_i16x8_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extend_low_i16x8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extend_low_i16x8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extend_low_i16x8_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extend_high_i16x8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extend_high_i16x8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extend_high_i16x8_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_shl\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_shl</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_shr_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_shr_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_shr_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_shr_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_shr_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_shr_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_add\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_sub\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_mul\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_mul</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_min_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_min_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_min_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_min_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_min_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_min_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_max_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_max_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_max_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_max_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_max_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_max_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_dot_i16x8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_dot_i16x8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_dot_i16x8_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extmul_low_i16x8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extmul_low_i16x8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extmul_low_i16x8_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extmul_high_i16x8_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extmul_high_i16x8_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extmul_high_i16x8_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extmul_low_i16x8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extmul_low_i16x8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extmul_low_i16x8_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_extmul_high_i16x8_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_extmul_high_i16x8_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_extmul_high_i16x8_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_abs\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_abs</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_neg\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_neg</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_all_true\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_all_true\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_all_true</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_bitmask\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_bitmask\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_bitmask</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_extend_low_i32x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_extend_low_i32x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_extend_low_i32x4_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_extend_high_i32x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_extend_high_i32x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_extend_high_i32x4_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_extend_low_i32x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_extend_low_i32x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_extend_low_i32x4_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_extend_high_i32x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_extend_high_i32x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_extend_high_i32x4_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_shl\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_shl</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_shr_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_shr_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_shr_s</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_shr_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_shr_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_shr_u</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_add\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_sub\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_mul\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_mul</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_extmul_low_i32x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_extmul_low_i32x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_extmul_low_i32x4_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_extmul_high_i32x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_extmul_high_i32x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_extmul_high_i32x4_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_extmul_low_i32x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_extmul_low_i32x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_extmul_low_i32x4_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_extmul_high_i32x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_extmul_high_i32x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_extmul_high_i32x4_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_ceil\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_ceil</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_floor\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_floor</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_trunc\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_trunc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_trunc</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_nearest\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_nearest\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_nearest</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_abs\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_abs</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_neg\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_neg</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_sqrt\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_sqrt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_add\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_sub\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_mul\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_mul</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_div\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_div</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_min\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_min</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_max\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_max</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_pmin\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_pmin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_pmin</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_pmax\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_pmax\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_pmax</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_ceil\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_ceil</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_floor\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_floor</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_trunc\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_trunc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_trunc</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_nearest\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_nearest\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_nearest</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_abs\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_abs</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_neg\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_neg</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_sqrt\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_sqrt</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_add\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_add</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_sub\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_sub</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_mul\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_mul</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_div\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_div</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_min\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_min</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_max\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_max</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_pmin\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_pmin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_pmin</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_pmax\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_pmax\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_pmax</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_trunc_sat_f32x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_trunc_sat_f32x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_trunc_sat_f32x4_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_trunc_sat_f32x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_trunc_sat_f32x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_trunc_sat_f32x4_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_convert_i32x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_convert_i32x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_convert_i32x4_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_convert_i32x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_convert_i32x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_convert_i32x4_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_trunc_sat_f64x2_s_zero\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_trunc_sat_f64x2_s_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_trunc_sat_f64x2_s_zero</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_trunc_sat_f64x2_u_zero\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_trunc_sat_f64x2_u_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_trunc_sat_f64x2_u_zero</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_convert_low_i32x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_convert_low_i32x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_convert_low_i32x4_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_convert_low_i32x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_convert_low_i32x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_convert_low_i32x4_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_demote_f64x2_zero\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_demote_f64x2_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_demote_f64x2_zero</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_promote_low_f32x4\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_promote_low_f32x4\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_promote_low_f32x4</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_relaxed_swizzle\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_relaxed_swizzle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_relaxed_swizzle</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_relaxed_trunc_f32x4_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_relaxed_trunc_f32x4_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_relaxed_trunc_f32x4_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_relaxed_trunc_f32x4_u\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_relaxed_trunc_f32x4_u\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_relaxed_trunc_f32x4_u</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_relaxed_trunc_f64x2_s_zero\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_relaxed_trunc_f64x2_s_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_relaxed_trunc_f64x2_s_zero</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_relaxed_trunc_f64x2_u_zero\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_relaxed_trunc_f64x2_u_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_relaxed_trunc_f64x2_u_zero</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_relaxed_madd\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_relaxed_madd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_relaxed_madd</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_relaxed_nmadd\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_relaxed_nmadd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_relaxed_nmadd</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_relaxed_madd\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_relaxed_madd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_relaxed_madd</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_relaxed_nmadd\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_relaxed_nmadd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_relaxed_nmadd</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i8x16_relaxed_laneselect\" class=\"method trait-impl\"><a href=\"#method.visit_i8x16_relaxed_laneselect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i8x16_relaxed_laneselect</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_relaxed_laneselect\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_relaxed_laneselect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_relaxed_laneselect</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_relaxed_laneselect\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_relaxed_laneselect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_relaxed_laneselect</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i64x2_relaxed_laneselect\" class=\"method trait-impl\"><a href=\"#method.visit_i64x2_relaxed_laneselect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i64x2_relaxed_laneselect</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_relaxed_min\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_relaxed_min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_relaxed_min</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f32x4_relaxed_max\" class=\"method trait-impl\"><a href=\"#method.visit_f32x4_relaxed_max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f32x4_relaxed_max</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_relaxed_min\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_relaxed_min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_relaxed_min</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_f64x2_relaxed_max\" class=\"method trait-impl\"><a href=\"#method.visit_f64x2_relaxed_max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_f64x2_relaxed_max</a>(&amp;mut self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_relaxed_q15mulr_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_relaxed_q15mulr_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_relaxed_q15mulr_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i16x8_relaxed_dot_i8x16_i7x16_s\" class=\"method trait-impl\"><a href=\"#method.visit_i16x8_relaxed_dot_i8x16_i7x16_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i16x8_relaxed_dot_i8x16_i7x16_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section><section id=\"method.visit_i32x4_relaxed_dot_i8x16_i7x16_add_s\" class=\"method trait-impl\"><a href=\"#method.visit_i32x4_relaxed_dot_i8x16_i7x16_add_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_i32x4_relaxed_dot_i8x16_i7x16_add_s</a>(\n    &amp;mut self,\n) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;V&gt; as VisitOperator&lt;'a&gt;&gt;::Output</h4></section></div></details>","VisitSimdOperator<'a>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Wake-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-Wake-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Wake for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: Wake,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wake\" class=\"method trait-impl\"><a href=\"#method.wake\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wake</a>(self)</h4></section></summary><div class='docblock'>Wake up the task by value. By default, this simply calls\n[<code>WakeRef::wake_by_ref</code>]. <a>Read more</a></div></details></div></details>","Wake","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WakeRef-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-WakeRef-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WakeRef for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: WakeRef + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wake_by_ref\" class=\"method trait-impl\"><a href=\"#method.wake_by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wake_by_ref</a>(&amp;self)</h4></section></summary><div class='docblock'>Wake up the task by reference. In general [<code>Wake::wake</code>] should be\npreferred, if available, as it’s probably more efficient. <a>Read more</a></div></details></div></details>","WakeRef","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WritableJournal-for-Box%3CW%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wasmer_journal/concrete/boxed.rs.html#15\">Source</a><a href=\"#impl-WritableJournal-for-Box%3CW%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;W&gt; <a class=\"trait\" href=\"wasmer_wasix/journal/trait.WritableJournal.html\" title=\"trait wasmer_wasix::journal::WritableJournal\">WritableJournal</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;W&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"wasmer_wasix/journal/trait.WritableJournal.html\" title=\"trait wasmer_wasix::journal::WritableJournal\">WritableJournal</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wasmer_journal/concrete/boxed.rs.html#16\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/journal/trait.WritableJournal.html#tymethod.write\" class=\"fn\">write</a>&lt;'a&gt;(&amp;'a self, entry: <a class=\"enum\" href=\"wasmer_wasix/journal/enum.JournalEntry.html\" title=\"enum wasmer_wasix::journal::JournalEntry\">JournalEntry</a>&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"wasmer_wasix/journal/struct.LogWriteResult.html\" title=\"struct wasmer_wasix::journal::LogWriteResult\">LogWriteResult</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.99/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Takes in a stream of snapshot log entries and saves them so that they\nmay be restored at a later moment</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wasmer_journal/concrete/boxed.rs.html#20\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/journal/trait.WritableJournal.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.99/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Flushes the data to disk or network</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wasmer_journal/concrete/boxed.rs.html#24\">Source</a><a href=\"#method.commit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/journal/trait.WritableJournal.html#method.commit\" class=\"fn\">commit</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.99/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Commits the transaction\nReturns the number of events committed</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rollback\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wasmer_journal/concrete/boxed.rs.html#28\">Source</a><a href=\"#method.rollback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/journal/trait.WritableJournal.html#method.rollback\" class=\"fn\">rollback</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.99/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Rolls back the transaction and aborts its changes\nReturns the number of events rolled back</div></details></div></details>","WritableJournal","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Write-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-Write-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Write for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: Write + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_write\" class=\"method trait-impl\"><a href=\"#method.poll_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_write</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n    buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to write bytes from <code>buf</code> into the destination. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_write_vectored\" class=\"method trait-impl\"><a href=\"#method.poll_write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_write_vectored</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n    bufs: &amp;[<a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.IoSlice.html\" title=\"struct wasmer_wasix::syscalls::io::IoSlice\">IoSlice</a>&lt;'_&gt;],\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Like <code>poll_write</code>, except that it writes from a slice of buffers.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_write_vectored\" class=\"method trait-impl\"><a href=\"#method.is_write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_write_vectored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether this writer has an efficient <code>poll_write_vectored</code>\nimplementation. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_flush\" class=\"method trait-impl\"><a href=\"#method.poll_flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_flush</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to flush the object. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_shutdown\" class=\"method trait-impl\"><a href=\"#method.poll_shutdown\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_shutdown</a>(\n    self: <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Pin.html\" title=\"struct wasmer_wasix::syscalls::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"wasmer_wasix/syscalls/struct.Context.html\" title=\"struct wasmer_wasix::syscalls::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Poll.html\" title=\"enum wasmer_wasix::syscalls::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to shut down this writer.</div></details></div></details>","Write","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Write-for-Box%3CW%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#162\">Source</a></span><a href=\"#impl-Write-for-Box%3CW%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;W&gt; <a class=\"trait\" href=\"wasmer_wasix/syscalls/trait.Write.html\" title=\"trait wasmer_wasix::syscalls::Write\">Write</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;W&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"wasmer_wasix/syscalls/trait.Write.html\" title=\"trait wasmer_wasix::syscalls::Write\">Write</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#164\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a buffer into this writer, returning how many bytes were written. <a href=\"wasmer_wasix/syscalls/trait.Write.html#tymethod.write\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#169\">Source</a><a href=\"#method.write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Write.html#method.write_vectored\" class=\"fn\">write_vectored</a>(&amp;mut self, bufs: &amp;[<a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.IoSlice.html\" title=\"struct wasmer_wasix::syscalls::io::IoSlice\">IoSlice</a>&lt;'_&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Like <a href=\"wasmer_wasix/syscalls/trait.Write.html#tymethod.write\" title=\"method wasmer_wasix::syscalls::Write::write\"><code>write</code></a>, except that it writes from a slice of buffers. <a href=\"wasmer_wasix/syscalls/trait.Write.html#method.write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_write_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#174\">Source</a><a href=\"#method.is_write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Write.html#method.is_write_vectored\" class=\"fn\">is_write_vectored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>can_vector</code>)</span></div></span><div class='docblock'>Determines if this <code>Write</code>r has an efficient <a href=\"wasmer_wasix/syscalls/trait.Write.html#method.write_vectored\" title=\"method wasmer_wasix::syscalls::Write::write_vectored\"><code>write_vectored</code></a>\nimplementation. <a href=\"wasmer_wasix/syscalls/trait.Write.html#method.is_write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#179\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Write.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Flushes this output stream, ensuring that all intermediately buffered\ncontents reach their destination. <a href=\"wasmer_wasix/syscalls/trait.Write.html#tymethod.flush\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#184\">Source</a><a href=\"#method.write_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Write.html#method.write_all\" class=\"fn\">write_all</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Attempts to write an entire buffer into this writer. <a href=\"wasmer_wasix/syscalls/trait.Write.html#method.write_all\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/impls.rs.html#189\">Source</a><a href=\"#method.write_fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Write.html#method.write_fmt\" class=\"fn\">write_fmt</a>(&amp;mut self, fmt: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Arguments.html\" title=\"struct core::fmt::Arguments\">Arguments</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a formatted string into this writer, returning any error\nencountered. <a href=\"wasmer_wasix/syscalls/trait.Write.html#method.write_fmt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_all_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#1810\">Source</a><a href=\"#method.write_all_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Write.html#method.write_all_vectored\" class=\"fn\">write_all_vectored</a>(&amp;mut self, bufs: &amp;mut [<a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.IoSlice.html\" title=\"struct wasmer_wasix::syscalls::io::IoSlice\">IoSlice</a>&lt;'_&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"wasmer_wasix/syscalls/io/struct.Error.html\" title=\"struct wasmer_wasix::syscalls::io::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>write_all_vectored</code>)</span></div></span><div class='docblock'>Attempts to write multiple buffers into this writer. <a href=\"wasmer_wasix/syscalls/trait.Write.html#method.write_all_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/std/io/mod.rs.html#1923-1925\">Source</a></span><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wasmer_wasix/syscalls/trait.Write.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates a “by reference” adapter for this instance of <code>Write</code>. <a href=\"wasmer_wasix/syscalls/trait.Write.html#method.by_ref\">Read more</a></div></details></div></details>","Write","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Writeable-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-Writeable-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; Writeable for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: Writeable + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to</a>&lt;W&gt;(&amp;self, sink: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut W</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Writes a string to the given sink. Errors from the sink are bubbled up.\nThe default implementation delegates to <code>write_to_parts</code>, and discards any\n<code>Part</code> annotations.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_parts\" class=\"method trait-impl\"><a href=\"#method.write_to_parts\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_parts</a>&lt;W&gt;(&amp;self, sink: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut W</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;<div class=\"where\">where\n    W: PartsWrite + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Write bytes and <code>Part</code> annotations to the given sink. Errors from the\nsink are bubbled up. The default implementation delegates to <code>write_to</code>,\nand doesn’t produce any <code>Part</code> annotations.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.writeable_length_hint\" class=\"method trait-impl\"><a href=\"#method.writeable_length_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">writeable_length_hint</a>(&amp;self) -&gt; LengthHint</h4></section></summary><div class='docblock'>Returns a hint for the number of UTF-8 bytes that will be written to the sink. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_string\" class=\"method trait-impl\"><a href=\"#method.write_to_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_string</a>(&amp;self) -&gt; <a class=\"enum\" href=\"wasmer_wasix/syscalls/enum.Cow.html\" title=\"enum wasmer_wasix::syscalls::Cow\">Cow</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Creates a new <code>String</code> with the data from this <code>Writeable</code>. Like <code>ToString</code>,\nbut smaller and faster. <a>Read more</a></div></details></div></details>","Writeable","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<section id=\"impl-CartablePointerLike-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-CartablePointerLike-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; CartablePointerLike for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;</h3></section>","CartablePointerLike","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<section id=\"impl-CoerceUnsized%3CBox%3CU,+A%3E%3E-for-Box%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2020\">Source</a><a href=\"#impl-CoerceUnsized%3CBox%3CU,+A%3E%3E-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/unsize/trait.CoerceUnsized.html\" title=\"trait core::ops::unsize::CoerceUnsized\">CoerceUnsized</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;U, A&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unsize.html\" title=\"trait core::marker::Unsize\">Unsize</a>&lt;U&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    U: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","CoerceUnsized<Box<U, A>>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<section id=\"impl-CryptoRng-for-Box%3CR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand_core/lib.rs.html#485\">Source</a><a href=\"#impl-CryptoRng-for-Box%3CR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;R&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","CryptoRng","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<section id=\"impl-DerefPure-for-Box%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1962\">Source</a><a href=\"#impl-DerefPure-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/deref/trait.DerefPure.html\" title=\"trait core::ops::deref::DerefPure\">DerefPure</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","DerefPure","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<section id=\"impl-DispatchFromDyn%3CBox%3CU%3E%3E-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2029\">Source</a><a href=\"#impl-DispatchFromDyn%3CBox%3CU%3E%3E-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/unsize/trait.DispatchFromDyn.html\" title=\"trait core::ops::unsize::DispatchFromDyn\">DispatchFromDyn</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;U&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unsize.html\" title=\"trait core::marker::Unsize\">Unsize</a>&lt;U&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","DispatchFromDyn<Box<U>>","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<section id=\"impl-Eq-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#1860\">Source</a></span><a href=\"#impl-Eq-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section>","Eq","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<section id=\"impl-FusedIterator-for-Box%3CI,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.26.0\">1.26.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed/iter.rs.html#80\">Source</a></span><a href=\"#impl-FusedIterator-for-Box%3CI,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/marker/trait.FusedIterator.html\" title=\"trait core::iter::traits::marker::FusedIterator\">FusedIterator</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;I, A&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/iter/traits/marker/trait.FusedIterator.html\" title=\"trait core::iter::traits::marker::FusedIterator\">FusedIterator</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section>","FusedIterator","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<section id=\"impl-PinCoerceUnsized-for-Box%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2023\">Source</a><a href=\"#impl-PinCoerceUnsized-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/pin/trait.PinCoerceUnsized.html\" title=\"trait core::pin::PinCoerceUnsized\">PinCoerceUnsized</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","PinCoerceUnsized","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<section id=\"impl-PointerLike-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2139\">Source</a><a href=\"#impl-PointerLike-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.PointerLike.html\" title=\"trait core::marker::PointerLike\">PointerLike</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;</h3></section>","PointerLike","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<section id=\"impl-StableDeref-for-Box%3CT%3E\" class=\"impl\"><a href=\"#impl-StableDeref-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StableDeref for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","StableDeref","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"],["<section id=\"impl-Unpin-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0\">1.33.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/alloc/boxed.rs.html#2082\">Source</a></span><a href=\"#impl-Unpin-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","Unpin","wasmer_wasix::runners::dproxy::hyper_proxy::BoxError","wasmer_wasix::runtime::package_loader::load_package_tree::DynPathMapper","wasmer_wasix::state::builder::SetupFsFn"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[904959,1062225]}