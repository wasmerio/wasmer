[package]
name = "wasmer-compiler-cranelift"
description = "Cranelift compiler for Wasmer WebAssembly runtime"
categories = ["wasm"]
keywords = ["wasm", "webassembly", "compiler", "cranelift"]
documentation = "https://docs.rs/wasmer-compiler-cranelift/"
readme = "README.md"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[dependencies]
wasmer-compiler = { path = "../compiler", version = "=6.1.0-rc.2", features = [
	"translator",
	"compiler",
], default-features = false }
wasmer-types = { path = "../types", version = "=6.1.0-rc.2", default-features = false, features = [
	"std",
] }
cranelift-entity = { version = "=0.110.2", default-features = false }
cranelift-codegen = { version = "=0.110.2", default-features = false, features = [
	"x86",
	"arm64",
	"riscv64",
] }
cranelift-frontend = { version = "=0.110.2", default-features = false }
itertools.workspace = true
tracing.workspace = true
hashbrown = { workspace = true, optional = true }
rayon = { workspace = true, optional = true }
more-asserts.workspace = true
gimli = { workspace = true, optional = true }
smallvec.workspace = true
target-lexicon = { workspace = true, default-features = false }

[dev-dependencies]
cranelift-codegen = { version = "=0.110.2", features = ["all-arch"] }

[badges]
maintenance = { status = "actively-developed" }

[features]
default = ["std", "unwind", "rayon"]
wasm = ["std", "unwind"]
unwind = ["cranelift-codegen/unwind", "gimli"]
std = [
	"cranelift-codegen/std",
	"cranelift-frontend/std",
	"wasmer-compiler/std",
	"wasmer-types/std",
]
core = ["hashbrown", "cranelift-codegen/core", "cranelift-frontend/core"]
enable-serde = []

[package.metadata.docs.rs]
rustc-args = ["--cfg", "docsrs"]
