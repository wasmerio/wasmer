[package]
name = "wasmer-c-api"
description = "Wasmer C API library"
categories = ["wasm", "api-bindings"]
keywords = ["wasm", "webassembly", "runtime"]
documentation = "https://wasmerio.github.io/wasmer/c-api/"
readme = "README.md"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[lib]
# The library name is `wasmer` so that we generate dylib like
# `libwasmer.so`, `libwasmer.dylib`, `wasmer.dll` etc. But it creates
# a conflict with the existing `wasmer` crate, see below.
name = "wasmer" # ##lib.name##
# ^ DO NOT REMOVE, it's used the `Makefile`, see `build-docs-capi`.
crate-type = ["staticlib", "cdylib"] #"cdylib", "rlib", "staticlib"]

[dependencies]
# We rename `wasmer` to `wasmer-api` to avoid the conflict with this
# library name (see `[lib]`).
wasmer-api = { version = "=6.1.0-rc.2", path = "../api", default-features = false, package = "wasmer" }
wasmer-compiler = { version = "=6.1.0-rc.2", path = "../compiler", optional = true }
wasmer-compiler-cranelift = { version = "=6.1.0-rc.2", path = "../compiler-cranelift", optional = true }
wasmer-compiler-llvm = { version = "=6.1.0-rc.2", path = "../compiler-llvm", optional = true }
wasmer-compiler-singlepass = { version = "=6.1.0-rc.2", path = "../compiler-singlepass", optional = true }
wasmer-middlewares = { version = "=6.1.0-rc.2", path = "../middlewares", optional = true }
wasmer-types = { version = "=6.1.0-rc.2", path = "../types" }
wasmer-wasix = { path = "../wasix", version = "=0.601.0-rc.2", features = [
	"host-fs",
	"host-vnet",
	"sys",
], default-features = false, optional = true }
webc = { workspace = true, optional = true }
virtual-fs = { version = "0.601.0-rc.2", path = "../virtual-fs", optional = true, default-features = false, features = [
	"static-fs",
] }
enumset.workspace = true
cfg-if.workspace = true
libc.workspace = true
thiserror.workspace = true
typetag = { version = "0.1", optional = true }
paste = "1.0"
tokio = { workspace = true, features = [
	"rt",
	"rt-multi-thread",
	"io-util",
	"sync",
	"macros",
], default-features = false }
tracing.workspace = true
tracing-subscriber = { workspace = true, features = ["env-filter", "fmt"] }

[dev-dependencies]
field-offset = "0.3.3"

[target.'cfg(target_os = "windows")'.dev-dependencies]
wasmer-inline-c = "0.1.1"

[target.'cfg(not(target_os = "windows"))'.dev-dependencies]
inline-c = "0.1.7"

[features]
default = ["wat", "sys-default", "cranelift", "compiler", "wasi", "middlewares"]
wat = ["wasmer-api/wat"]
wasi = ["wasmer-wasix"]
middlewares = ["compiler", "wasmer-middlewares"]

# Enable the `sys` backend.
sys = ["wasmer-api/sys", "wasmer-compiler"]

# Enable the `singlepass` compiler.
singlepass = [
	"dep:wasmer-compiler-singlepass",
	"wasmer-api/singlepass",
	"compiler",
]
# Enable the `cranelift` compiler. 
cranelift = [
	"dep:wasmer-compiler-cranelift",
	"wasmer-api/cranelift",
	"compiler",
]
# Enable the `llvm` compiler.
llvm = ["dep:wasmer-compiler-llvm", "wasmer-api/llvm", "compiler"]

# Enable the use of compiler. Implies enabling the `sys` feature.
compiler = [
	"sys",
	"wasmer-compiler",
	"wasmer-api/compiler",
	"wasmer-compiler/translator",
	"wasmer-compiler/compiler",
]

# Enable the use of the headless compiler. Implies enabling the `sys` feature.
compiler-headless = [
	"sys",
	"wasmer-artifact-load",
	"static-artifact-load",
	"wasmer-api/compiler",
	"wasmer-compiler/translator",
	"wasmer-compiler/compiler",
]

# Enable the `jsc` backend.
jsc = ["wasmer-api/jsc", "wasmer-api/std"]

# Enable the `v8` backend.
v8 = ["wasmer-api/v8"]

# Enable the `wasmi` backend.
wasmi = ["wasmer-api/wasmi"]

# Enable the `wamr` backend.
wamr = ["wasmer-api/wamr"]

# Enable the `sys` backend and use it as default. Notice that this does not
# enable a default compiler, and users should therefore add one (or more) of
# the `singlepass`, `cranelift` and `llvm` features.
sys-default = ["sys", "wasmer-api/sys-default"]

# Enable the `jsc` backend and use it as default.
jsc-default = ["jsc", "wasmer-api/jsc-default"]

# Enable the `v8` backend and use it as default.
v8-default = ["v8", "wasmer-api/v8-default"]

# Enable the `wamr` backend and use it as default.
wamr-default = ["wamr", "wasmer-api/wamr-default"]

# Enable the `wasmi` backend and use it as default.
wasmi-default = ["wasmi", "wasmer-api/wasmi-default"]

wasmer-artifact-load = ["wasmer-compiler/wasmer-artifact-load"]
wasmer-artifact-create = ["wasmer-compiler/wasmer-artifact-create"]
static-artifact-load = ["wasmer-compiler/static-artifact-load"]
static-artifact-create = ["wasmer-compiler/static-artifact-create"]
webc_runner = ["virtual-fs", "webc"]
# Deprecated features.
jit = ["compiler"]

[build-dependencies]
cbindgen = { version = "0.27", default-features = false }
